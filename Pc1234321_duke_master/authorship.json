[{"path":"README1.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"# Duke project template","lastModifiedDate":"2024-02-03"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2024-02-03"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"## Setting up in Intellij","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2024-02-03"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"   1. Click `Open`.","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2024-02-03"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2024-02-03"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2024-02-03"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"   ```","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"   Hello from","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"    ____        _        ","lastModifiedDate":"2024-02-03"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2024-02-03"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2024-02-03"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2024-02-03"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2024-02-03"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"   ```","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Pc1234321":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"Pc1234321"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Pc1234321":1,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"# Duke User Guide","lastModifiedDate":"2024-01-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e origin/add-gradle-support","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"Pc1234321":3,"-":32}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"import task.*;","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"    private final Task task;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"    public AddCommand(String commandType, Task task) {","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"        super(commandType);","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"     * Function to execute the command","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"     * @param taskList: the task list","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"     * @param ui: ui functions","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"     * @param storage： make use of the storage","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"        taskList.insertTask(task);","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"     * function to set if this command will end the program","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"    public boolean Exit(){return false;}","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Pc1234321":28}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"import task.TaskList;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"public abstract class Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"    private final String commandType;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"    public Command(String commandType){","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"     * abstract function for Command classes","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"    public abstract void execute(TaskList tasklist, Ui ui, Storage storage);","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"     * abstract function for Command classes","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"    public abstract boolean Exit();","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"     * Return a type of command e.g. mark, unmark, deadline, event, etc.","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"    public String getCommandType() {","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"        return commandType;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Pc1234321":28}},{"path":"src/main/java/commands/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"import task.TaskList;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"public class DateCommand extends Command {","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"    private final LocalDateTime inputDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"    public DateCommand(String commandType, LocalDateTime inputDate) {","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"        super(commandType);","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"        this.inputDate \u003d inputDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"     * Function to execute the command","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"     * @param taskList: the task list","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"     * @param ui: ui functions","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"     * @param storage： make use of the storage","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) { taskList.findDate(inputDate);","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"     * function to set if this command will end the program","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"Pc1234321"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"Pc1234321"},"content":"    public boolean Exit() {","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"Pc1234321"},"content":"        return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"Pc1234321":32}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"import task.TaskList;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"    private final String index;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"    public DeleteCommand(String commandType, String index) {","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"        super(commandType);","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"     * Function to execute the command","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"     * @param taskList: the task list","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"     * @param ui: ui functions","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"     * @param storage： make use of the storage","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage){","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"        taskList.deleteTask(index);","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"     * function to set if this command will end the program","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"    public boolean Exit(){return false;}","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Pc1234321":27}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"import task.TaskList;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"    public ExitCommand(String commandType) {","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"        super(commandType);","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"     * Function to execute the command","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"     * @param taskList: the task list","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"     * @param ui: ui functions","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"     * @param storage： make use of the storage","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"        Exit();","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"        ui.exitProgram();","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"        storage.writeToFile(taskList.getList());","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"     * function to set if this command will end the program","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Pc1234321"},"content":"    public boolean Exit(){return true;}","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Pc1234321":30}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"import task.TaskList;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"    private final String keyWord;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"    public FindCommand(String commandType, String keyWord) {","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"        super(commandType);","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"        this.keyWord \u003d keyWord;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"     * Function to execute the command","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"     * @param taskList: the task list","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"     * @param ui: ui functions","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"     * @param storage： make use of the storage","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) { taskList.findTask(keyWord);","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"     * function to set if this command will end the program","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"Pc1234321"},"content":"    public boolean Exit() {","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"Pc1234321"},"content":"        return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Pc1234321":31}},{"path":"src/main/java/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"import task.TaskList;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"    public InvalidCommand(String commandType) {","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"        super(commandType);","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"     * Function to execute the command","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"     * @param taskList: the task list","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"     * @param ui: ui functions","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"     * @param storage： make use of the storage","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"     * function to set if this command will end the program","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"    public boolean Exit(){return false;}","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Pc1234321":24}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"import task.TaskList;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"    public ListCommand(String commandType) {","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"        super(commandType);","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"     * Function to execute the command","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"     * @param taskList: the task list","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"     * @param ui: ui functions","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"     * @param storage： make use of the storage","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"        Ui.listMenu(taskList.getList());","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"     * function to set if this command will end the program","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"    public boolean Exit(){return false;}","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Pc1234321":25}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"import task.TaskList;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"    private final String index;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"    public MarkCommand(String commandType, String index) {","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"        super(commandType);","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"     * Function to execute the command","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"     * @param taskList: the task list","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"     * @param ui: ui functions","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"     * @param storage： make use of the storage","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage){","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"        taskList.updateStatus(getCommandType(), index);","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"     * function to set if this command will end the program","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"    public boolean Exit(){return false;}","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Pc1234321":27}},{"path":"src/main/java/duke/DateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package duke;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"public class DateTime {","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"    //Date time format for program","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"    private static final DateTimeFormatter formatYYYY_MM_DD_HHmm \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"    //Display format for user to view","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"    private static final DateTimeFormatter displayDateTimeFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"    private static final DateTimeFormatter displayDateFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"    public DateTime(){}","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"     * Function to check if user input is a correct date-time format","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"     * @param datetime: user input date time","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"    public static LocalDateTime checkDate(String datetime) throws DukeException {","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"            // Try parsing datetime with the format yyyy-MM-dd HHmm","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"            return LocalDateTime.parse(datetime.trim(), formatYYYY_MM_DD_HHmm);","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"            try {","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"                // If parsing with format yyyy-MM-dd HHmm fails, try parsing with format yyyy-MM-dd","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"                return LocalDateTime.parse(datetime.trim() + \" 0000\", formatYYYY_MM_DD_HHmm);","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"Pc1234321"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"Pc1234321"},"content":"                throw new DukeException(\"Your Date and Time format is wrong, please use yyyy-MM-dd HHmm or yyyy-MM-dd.\\n\" +","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"Pc1234321"},"content":"                        \"Remember to add 0 if date time is a single digit. E.g. Mar 8 2021 9:00 -\u003e 2021-03-08 0900\");","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"Pc1234321"},"content":"     * Function to convert the correct format date time to a string","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"Pc1234321"},"content":"     * @param datetime: input date time","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"Pc1234321"},"content":"    public static String dateString(String datetime) throws DukeException {","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"Pc1234321"},"content":"        LocalDateTime DateTime \u003d checkDate(datetime.trim());","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"Pc1234321"},"content":"        // Check if the  date has time, if so, use HHmm format, otherwise use yyyy-MM-dd format","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"Pc1234321"},"content":"        if (DateTime.getHour() !\u003d 0 || DateTime.getMinute() !\u003d 0) {","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"Pc1234321"},"content":"            return DateTime.format(displayDateTimeFormat);","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"Pc1234321"},"content":"        } else {","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"Pc1234321"},"content":"            return DateTime.format(displayDateFormat);","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"Pc1234321"},"content":"     * A function to convert string to date format","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"Pc1234321"},"content":"     * @param dateTime user input date format with string","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"Pc1234321"},"content":"     * @return return a converted date format","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"Pc1234321"},"content":"    public static LocalDateTime stringToDate(String dateTime) {","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"Pc1234321"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"Pc1234321"},"content":"            return LocalDateTime.parse(dateTime.trim(), displayDateTimeFormat);","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"Pc1234321"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"Pc1234321"},"content":"            try {","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"Pc1234321"},"content":"                // Parsing without time, append \"0000\" to indicate midnight","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"Pc1234321"},"content":"                return LocalDateTime.parse(dateTime.trim() + \" 0000\", displayDateTimeFormat);","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"Pc1234321"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"The dateTime format is wrong\");","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"Pc1234321"},"content":"                return null;","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"Pc1234321"},"content":"     * Function to check if the input date time is later than the current date time","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"Pc1234321"},"content":"     * @param input input date time","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"Pc1234321"},"content":"    public static boolean isDateValid(String input) throws DukeException {","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"Pc1234321"},"content":"        LocalDateTime targetDate \u003d checkDate(input.trim());","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"Pc1234321"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"Pc1234321"},"content":"        return targetDate.isAfter(currentDateTime);","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"Pc1234321"},"content":"     * Function to check if current date is before target date","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"Pc1234321"},"content":"     * @param startingDate date time for from date","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"Pc1234321"},"content":"     * @param targetDate date time for by date","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"Pc1234321"},"content":"    public static boolean isEventValid(String startingDate,String targetDate) throws DukeException {","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"Pc1234321"},"content":"        LocalDateTime startingDateTime \u003d checkDate(startingDate.trim());","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"Pc1234321"},"content":"        LocalDateTime targetDateTime \u003d checkDate(targetDate.trim());","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"Pc1234321"},"content":"        return !targetDateTime.isAfter(startingDateTime);","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"Pc1234321"},"content":"     * Function to check if a date is within the given period","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"Pc1234321"},"content":"     * @param targetDate a date from user input","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"Pc1234321"},"content":"     * @param startingDate a starting date of an event","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"Pc1234321"},"content":"     * @param endingDate an ending date of an event","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"Pc1234321"},"content":"     * @return return true if the date is within the period","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"Pc1234321"},"content":"    public static boolean isDateValid(LocalDateTime targetDate, LocalDateTime startingDate, LocalDateTime endingDate) {","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"Pc1234321"},"content":"        return !targetDate.isBefore(startingDate) \u0026\u0026 !targetDate.isAfter(endingDate);","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"Pc1234321"},"content":"     * Function to check if the date is before the given date","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"Pc1234321"},"content":"     * @param targetDate a date from user input","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"Pc1234321"},"content":"     * @param endingDate an ending date of an event","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"Pc1234321"},"content":"     * @return true if the date is before the ending date","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"Pc1234321"},"content":"    public static boolean isDateValid(LocalDateTime targetDate, LocalDateTime endingDate) {","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"Pc1234321"},"content":"        return !targetDate.isAfter(endingDate);","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"Pc1234321":109}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package duke;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"import task.*;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"import commands.*;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"    private static Storage storage;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"    private static Ui ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"     * Function to initiate the UI functions, storage and task list","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"     * @param filePath indicate the storage file path","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"        taskList.setList(storage.readFromFile());","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"     * Function to run the Duke program","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"    public void run() {","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"        ui.welcomeMenu();","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Pc1234321"},"content":"        Ui.listMenu(taskList.getList());","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"Pc1234321"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Pc1234321"},"content":"        while (!isExit) {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"Pc1234321"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Pc1234321"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Pc1234321"},"content":"            c.execute(taskList, ui, storage);","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Pc1234321"},"content":"            isExit \u003d c.Exit();","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"Pc1234321"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"Pc1234321"},"content":"        new Duke(\"./data/task.txt\").run();","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Pc1234321":37,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package duke;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"        super(message);","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-02-24"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"     * Function to check if a string is an integer","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"     * @param value: input the value to check if it is integer","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"    public static boolean isInteger(String value){","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"        try{","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"            Integer.parseInt(value);","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"        }catch (NumberFormatException e){","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-02-24"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-02-24"}],"authorContributionMap":{"Pc1234321":21}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package duke;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"import commands.*;","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"import task.Deadline;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"import task.Event;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"import task.Todo;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"import static duke.DukeException.isInteger;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"public class Parser extends DateTime {","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"     * Function to check the user input and make sure the input is a valid command","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"     * @param userInput: String get from user","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"    public static Command parse(String userInput) {","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"        String[] wordList \u003d userInput.split(\" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"        String taskName;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"        String by;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"        String from;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"        boolean format \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"            //Todo checker","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Pc1234321"},"content":"            if (wordList[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Pc1234321"},"content":"                if(wordList.length \u003d\u003d 1){","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Pc1234321"},"content":"                    throw new DukeException(\"Please give your task a name\");","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"Pc1234321"},"content":"                }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Pc1234321"},"content":"                    taskName \u003d Storage.combineArray(wordList);","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Pc1234321"},"content":"                    Todo task \u003d new Todo(taskName);","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Pc1234321"},"content":"                    return new AddCommand(\"todo\",task);","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Pc1234321"},"content":"            //Event checker","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Pc1234321"},"content":"            else if (wordList[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Pc1234321"},"content":"                StringBuilder taskNameBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"Pc1234321"},"content":"                StringBuilder fromBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"Pc1234321"},"content":"                StringBuilder byBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"Pc1234321"},"content":"                if(wordList.length \u003d\u003d 1){","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Pc1234321"},"content":"                    throw new DukeException(\"Please give your event a name\");","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"Pc1234321"},"content":"                }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"Pc1234321"},"content":"                    boolean fromChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"Pc1234321"},"content":"                    boolean toChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Pc1234321"},"content":"                    //Check From stage and to stage","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"Pc1234321"},"content":"                    for (int i \u003d 0; i \u003c wordList.length; i++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"Pc1234321"},"content":"                        if(wordList[1].equalsIgnoreCase(\"/from\") ||","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"Pc1234321"},"content":"                                wordList[1].equalsIgnoreCase(\"/to\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"Pc1234321"},"content":"                            throw new DukeException(\"Please give your event a name\");","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"Pc1234321"},"content":"                        else if(wordList[i].equalsIgnoreCase(\"/from\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"Pc1234321"},"content":"                            if(i+1 \u003c wordList.length \u0026\u0026 !wordList[i+1].equalsIgnoreCase(\"/to\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"Pc1234321"},"content":"                                fromChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"Pc1234321"},"content":"                            }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"Pc1234321"},"content":"                                throw new DukeException(\"Can you tell me about the start date of this event?\");","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"Pc1234321"},"content":"                        else if(wordList[i].equalsIgnoreCase(\"/to\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"Pc1234321"},"content":"                            if(i+1 \u003c wordList.length \u0026\u0026 !wordList[i+1].equalsIgnoreCase(\"/from\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"Pc1234321"},"content":"                                toChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"Pc1234321"},"content":"                            }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"Pc1234321"},"content":"                                throw new DukeException(\"Can you tell me about the end date of this event?\");","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"Pc1234321"},"content":"                    //Handle error","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"Pc1234321"},"content":"                    if(!fromChecker || !toChecker){","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"Pc1234321"},"content":"                        throw new DukeException(\"Your event format seems wrong, please try following pattern:\\n\" +","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"Pc1234321"},"content":"                                \"event + event Name + /from + Date + /to + Date\");","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"Pc1234321"},"content":"                    }else{//If no error","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"Pc1234321"},"content":"                        String currentStage \u003d \"name\";","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"Pc1234321"},"content":"                        for (String item : wordList) {","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"Pc1234321"},"content":"                            switch (item.toLowerCase()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"Pc1234321"},"content":"                                case \"event\":","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"Pc1234321"},"content":"                                    continue; // Skip \"event\" keyword","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"Pc1234321"},"content":"                                case \"/from\":","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"Pc1234321"},"content":"                                    currentStage \u003d \"from\"; // Switch to \"from\" stage","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"Pc1234321"},"content":"                                    continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"Pc1234321"},"content":"                                case \"/to\":","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"Pc1234321"},"content":"                                    currentStage \u003d \"to\"; // Switch to \"to\" stage","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"Pc1234321"},"content":"                                    continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"Pc1234321"},"content":"                            // Append item to the corresponding stage","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"Pc1234321"},"content":"                            switch (currentStage) {","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"Pc1234321"},"content":"                                case \"name\":","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"Pc1234321"},"content":"                                    taskNameBuilder.append(item).append(\" \");","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"Pc1234321"},"content":"                                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"Pc1234321"},"content":"                                case \"from\":","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"Pc1234321"},"content":"                                    fromBuilder.append(item).append(\" \");","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"Pc1234321"},"content":"                                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"Pc1234321"},"content":"                                case \"to\":","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"Pc1234321"},"content":"                                    byBuilder.append(item).append(\" \");","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"Pc1234321"},"content":"                                    break;","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"Pc1234321"},"content":"                        taskName \u003d taskNameBuilder.toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"Pc1234321"},"content":"                        from \u003dfromBuilder.toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"Pc1234321"},"content":"                        by \u003d byBuilder.toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"Pc1234321"},"content":"                        if(!isDateValid(by)){","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"Pc1234321"},"content":"                            throw new DukeException(\"Your event already ended\");","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"Pc1234321"},"content":"                        }else if(isEventValid(from, by)){","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"Pc1234321"},"content":"                            throw new DukeException(\"The end date of your event is earlier than the starting date.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"Pc1234321"},"content":"                        }else{","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"Pc1234321"},"content":"                            Event task \u003d new Event(taskName, dateString(from), dateString(by));","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"Pc1234321"},"content":"                            return new AddCommand(\"event\",task);","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"Pc1234321"},"content":"            //deadline","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"Pc1234321"},"content":"            else if (wordList[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"Pc1234321"},"content":"                StringBuilder taskNameBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"Pc1234321"},"content":"                StringBuilder byBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"Pc1234321"},"content":"                if(wordList.length \u003d\u003d 1){","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"Pc1234321"},"content":"                    throw new DukeException(\"Please give your deadline a name\");","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"Pc1234321"},"content":"                }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"Pc1234321"},"content":"                    boolean byChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"Pc1234321"},"content":"                    //Check From stage and to stage","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"Pc1234321"},"content":"                    for (int i \u003d 0; i \u003c wordList.length; i++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"Pc1234321"},"content":"                        if(wordList[1].equalsIgnoreCase(\"/by\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"Pc1234321"},"content":"                            throw new DukeException(\"Please give your deadline a name\");","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"Pc1234321"},"content":"                        else if(wordList[i].equalsIgnoreCase(\"/by\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":128,"author":{"gitId":"Pc1234321"},"content":"                            if(i+1 \u003c wordList.length){","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"Pc1234321"},"content":"                                byChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"Pc1234321"},"content":"                                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"Pc1234321"},"content":"                            }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"Pc1234321"},"content":"                                throw new DukeException(\"Can you tell me the due date?\");","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"Pc1234321"},"content":"                    //Handle error","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"Pc1234321"},"content":"                    if(!byChecker){","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"Pc1234321"},"content":"                        throw new DukeException(\"Your deadline format seems wrong, please try following pattern:\\n\" +","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"Pc1234321"},"content":"                                \"deadline + deadline Name + /by + Date\");","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"Pc1234321"},"content":"                    }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"Pc1234321"},"content":"                        byChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":142,"author":{"gitId":"Pc1234321"},"content":"                        for (String item : wordList) {","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"Pc1234321"},"content":"                            if (item.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":144,"author":{"gitId":"Pc1234321"},"content":"                                continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":145,"author":{"gitId":"Pc1234321"},"content":"                            } else if (item.equalsIgnoreCase(\"/by\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":146,"author":{"gitId":"Pc1234321"},"content":"                                byChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":147,"author":{"gitId":"Pc1234321"},"content":"                                continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"Pc1234321"},"content":"                            if (!byChecker) {","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"Pc1234321"},"content":"                                taskNameBuilder.append(item).append(\" \");","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"Pc1234321"},"content":"                            } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":152,"author":{"gitId":"Pc1234321"},"content":"                                byBuilder.append(item).append(\" \");","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":154,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":155,"author":{"gitId":"Pc1234321"},"content":"                        taskName \u003d taskNameBuilder.toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"Pc1234321"},"content":"                        by \u003d byBuilder.toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"Pc1234321"},"content":"                        if(isDateValid(by)){","lastModifiedDate":"2024-03-23"},{"lineNumber":158,"author":{"gitId":"Pc1234321"},"content":"                            Deadline task \u003d new Deadline(taskName, dateString(by));","lastModifiedDate":"2024-03-23"},{"lineNumber":159,"author":{"gitId":"Pc1234321"},"content":"                            return new AddCommand(\"deadline\",task);","lastModifiedDate":"2024-03-16"},{"lineNumber":160,"author":{"gitId":"Pc1234321"},"content":"                        }else{","lastModifiedDate":"2024-03-23"},{"lineNumber":161,"author":{"gitId":"Pc1234321"},"content":"                            throw new DukeException(\"Your Deadline Date is not a valid date or earlier than today\");","lastModifiedDate":"2024-03-23"},{"lineNumber":162,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-23"},{"lineNumber":163,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":164,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":165,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":166,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"Pc1234321"},"content":"            //mark","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"Pc1234321"},"content":"            else if(wordList[0].equalsIgnoreCase(\"mark\") ||","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"Pc1234321"},"content":"                    wordList[0].equalsIgnoreCase(\"unmark\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"Pc1234321"},"content":"                if(wordList.length \u003d\u003d 1){","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"Pc1234321"},"content":"                    throw new DukeException(\"Please tell me which task you would like to mark/unmark\");","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"Pc1234321"},"content":"                }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":176,"author":{"gitId":"Pc1234321"},"content":"                    String checkNum \u003d wordList[1];","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"Pc1234321"},"content":"                    if(isInteger(checkNum)){","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"Pc1234321"},"content":"                        return new MarkCommand(wordList[0], checkNum);","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"Pc1234321"},"content":"                    }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"Pc1234321"},"content":"                        throw new DukeException(\"Please tell me which number of task you would like to mark/unmark\");","lastModifiedDate":"2024-03-16"},{"lineNumber":181,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":182,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":183,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"Pc1234321"},"content":"            //delete","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"Pc1234321"},"content":"            else if(wordList[0].equalsIgnoreCase(\"delete\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"Pc1234321"},"content":"                if(wordList.length \u003d\u003d 1){","lastModifiedDate":"2024-03-16"},{"lineNumber":187,"author":{"gitId":"Pc1234321"},"content":"                    throw new DukeException(\"Please tell me which task you would like to delete\");","lastModifiedDate":"2024-03-16"},{"lineNumber":188,"author":{"gitId":"Pc1234321"},"content":"                }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":189,"author":{"gitId":"Pc1234321"},"content":"                    String checkNum \u003d wordList[1];","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"Pc1234321"},"content":"                    if(isInteger(checkNum)){","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"Pc1234321"},"content":"                        return new DeleteCommand(\"delete\", checkNum);","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"Pc1234321"},"content":"                    }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"Pc1234321"},"content":"                        throw new DukeException(\"Please tell me which number of task you would like to delete\");","lastModifiedDate":"2024-03-16"},{"lineNumber":194,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":195,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":196,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":197,"author":{"gitId":"Pc1234321"},"content":"            //find","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"Pc1234321"},"content":"            else if(wordList[0].equalsIgnoreCase(\"find\")){","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"Pc1234321"},"content":"                if(wordList.length \u003d\u003d 1){","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"Pc1234321"},"content":"                    throw new DukeException(\"Please tell me the keywords of the task you would like to find\");","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"Pc1234321"},"content":"                }else{","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"Pc1234321"},"content":"                    String keyWord \u003d Storage.combineArray(wordList);","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"Pc1234321"},"content":"                    return new FindCommand(\"find\", keyWord);","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-28"},{"lineNumber":205,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"Pc1234321"},"content":"            //date","lastModifiedDate":"2024-03-28"},{"lineNumber":207,"author":{"gitId":"Pc1234321"},"content":"            else if(wordList[0].equalsIgnoreCase(\"date\")){","lastModifiedDate":"2024-03-28"},{"lineNumber":208,"author":{"gitId":"Pc1234321"},"content":"                if(wordList.length \u003d\u003d 1){","lastModifiedDate":"2024-03-28"},{"lineNumber":209,"author":{"gitId":"Pc1234321"},"content":"                    throw new DukeException(\"Please tell me a specific date you would like to search\");","lastModifiedDate":"2024-03-28"},{"lineNumber":210,"author":{"gitId":"Pc1234321"},"content":"                }else if(wordList.length \u003d\u003d 2 || wordList.length \u003d\u003d 3) {","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"Pc1234321"},"content":"                    String dateString \u003d Storage.combineArray(wordList);","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"Pc1234321"},"content":"                    assert dateString !\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"Pc1234321"},"content":"                    LocalDateTime date \u003d DateTime.checkDate(dateString);","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"Pc1234321"},"content":"                    return new DateCommand(\"find\", date);","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"Pc1234321"},"content":"                }else{","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"Pc1234321"},"content":"                    throw new DukeException(\"Your date format seems wrong. please try following pattern \" +","lastModifiedDate":"2024-03-28"},{"lineNumber":217,"author":{"gitId":"Pc1234321"},"content":"                            \"date + yyyy-MM-dd or date + yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-03-28"},{"lineNumber":218,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-28"},{"lineNumber":219,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":220,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":221,"author":{"gitId":"Pc1234321"},"content":"            //quit","lastModifiedDate":"2024-03-16"},{"lineNumber":222,"author":{"gitId":"Pc1234321"},"content":"            else if(wordList[0].equalsIgnoreCase(\"bye\")  ||","lastModifiedDate":"2024-03-16"},{"lineNumber":223,"author":{"gitId":"Pc1234321"},"content":"                    wordList[0].equalsIgnoreCase(\"quit\")  ){// Single command no need to check","lastModifiedDate":"2024-03-16"},{"lineNumber":224,"author":{"gitId":"Pc1234321"},"content":"                return new ExitCommand(\"exit\");","lastModifiedDate":"2024-03-16"},{"lineNumber":225,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":226,"author":{"gitId":"Pc1234321"},"content":"            //list","lastModifiedDate":"2024-03-28"},{"lineNumber":227,"author":{"gitId":"Pc1234321"},"content":"            else if(wordList[0].equalsIgnoreCase(\"list\")){","lastModifiedDate":"2024-03-28"},{"lineNumber":228,"author":{"gitId":"Pc1234321"},"content":"                return new ListCommand(\"list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":229,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":230,"author":{"gitId":"Pc1234321"},"content":"            else {","lastModifiedDate":"2024-03-16"},{"lineNumber":231,"author":{"gitId":"Pc1234321"},"content":"                format \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":232,"author":{"gitId":"Pc1234321"},"content":"                throw new DukeException(\"I don\u0027t get it, I prepared following functions for you.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":233,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":234,"author":{"gitId":"Pc1234321"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":235,"author":{"gitId":"Pc1234321"},"content":"            System.out.println(e.getMessage());// Print the error message","lastModifiedDate":"2024-03-16"},{"lineNumber":236,"author":{"gitId":"Pc1234321"},"content":"            if(!format){","lastModifiedDate":"2024-03-16"},{"lineNumber":237,"author":{"gitId":"Pc1234321"},"content":"                new Ui().helpMenu();","lastModifiedDate":"2024-03-16"},{"lineNumber":238,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":239,"author":{"gitId":"Pc1234321"},"content":"            return new InvalidCommand(\"Error\");","lastModifiedDate":"2024-03-16"},{"lineNumber":240,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":241,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":242,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":243,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Pc1234321":243}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"import task.Deadline;","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"import task.Event;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"import task.Task;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"import task.Todo;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"import java.io.*;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"import java.util.logging.*;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"public class Storage{","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"    protected String filePath;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"    private static final Logger logger \u003d Logger.getLogger(Storage.class.getName());","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"    //Bug log","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"    private static void configureLogger() {","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"            // Create a directory named \"bug\" if it doesn\u0027t exist","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"            File directory \u003d new File(\"bug\");","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"                boolean created \u003d directory.mkdirs();  // Creates parent directories as needed","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"                if (!created) {","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"                    throw new IOException(\"Failed to create directory \u0027bug\u0027.\");","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"Pc1234321"},"content":"            // Configure logger to write to a log file in the \"bug\" directory","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"Pc1234321"},"content":"            File logFile \u003d new File(directory, \"error.log\");","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"Pc1234321"},"content":"            FileHandler fileHandler \u003d new FileHandler(logFile.getAbsolutePath(), true);","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"Pc1234321"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"Pc1234321"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"Pc1234321"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"Pc1234321"},"content":"            logger.log(Level.SEVERE, \"Failed to configure logger\", e);","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"Pc1234321"},"content":"     * Function to write data into storage file","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"Pc1234321"},"content":"     * @param todoList task list to write into the storage file","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"Pc1234321"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e todoList) {","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"Pc1234321"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"Pc1234321"},"content":"            // Create the directory if it doesn\u0027t exist","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"Pc1234321"},"content":"            File directory \u003d new File(\"./data/\");","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"Pc1234321"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"Pc1234321"},"content":"                boolean created \u003d directory.mkdirs();","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"Pc1234321"},"content":"                if (!created) {","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"Pc1234321"},"content":"                    throw new IOException(\"Failed to create directory data.\");","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"Pc1234321"},"content":"            try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath))) {","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"Pc1234321"},"content":"                for (Task task : todoList) {","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"Pc1234321"},"content":"                    writer.write(task.format());","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"Pc1234321"},"content":"                    writer.newLine(); // Add a new line after each task description","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"Pc1234321"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"Pc1234321"},"content":"            configureLogger();","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"Pc1234321"},"content":"            logger.log(Level.SEVERE, \"An IOException occurred\", e);","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"Pc1234321"},"content":"     *Function to read data from local storage file","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"Pc1234321"},"content":"    public ArrayList\u003cTask\u003e readFromFile() {","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"Pc1234321"},"content":"        ArrayList\u003cTask\u003e readDataList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"Pc1234321"},"content":"        java.nio.file.Path path \u003d Paths.get(filePath);","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"Pc1234321"},"content":"        // Check if the file exists before attempting to read","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"Pc1234321"},"content":"        if (!Files.exists(path) || !Files.isRegularFile(path)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"Pc1234321"},"content":"            return readDataList;","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"Pc1234321"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(filePath))) {","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"Pc1234321"},"content":"            String line;","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"Pc1234321"},"content":"            boolean status \u003d false;","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"Pc1234321"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"Pc1234321"},"content":"                String type \u003d \"\";","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"Pc1234321"},"content":"                String taskName \u003d \"\";","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"Pc1234321"},"content":"                String by \u003d \"\";","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"Pc1234321"},"content":"                String from \u003d \"\";","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"Pc1234321"},"content":"                String[] txtList \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"Pc1234321"},"content":"                //Analysis txt file data","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"Pc1234321"},"content":"                for(String item : txtList){","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"Pc1234321"},"content":"                    if(item.equalsIgnoreCase(\"T\") ||","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"Pc1234321"},"content":"                            item.equalsIgnoreCase(\"E\")||","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"Pc1234321"},"content":"                            item.equalsIgnoreCase(\"D\")){","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"Pc1234321"},"content":"                        type \u003d item;","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"Pc1234321"},"content":"                    }else if(item.equalsIgnoreCase(\"true\")){","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"Pc1234321"},"content":"                        status \u003d true;","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"Pc1234321"},"content":"                    }else if(item.equalsIgnoreCase(\"false\")){","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"Pc1234321"},"content":"                        status \u003d false;","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"Pc1234321"},"content":"                    }else{","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"Pc1234321"},"content":"                        String[] itemList \u003d item.split(\" \");","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"Pc1234321"},"content":"                        if(itemList[0].equalsIgnoreCase(\"Name:\")){","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"Pc1234321"},"content":"                            taskName \u003d combineArray(itemList);","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"Pc1234321"},"content":"                        }else if (itemList[0].equalsIgnoreCase(\"from:\")){","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"Pc1234321"},"content":"                            from \u003d combineArray(itemList);","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"Pc1234321"},"content":"                        }else if (itemList[0].equalsIgnoreCase(\"by:\")){","lastModifiedDate":"2024-03-15"},{"lineNumber":101,"author":{"gitId":"Pc1234321"},"content":"                            by \u003d combineArray(itemList);","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"Pc1234321"},"content":"                if(type.isEmpty()){","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"Pc1234321"},"content":"                    throw new IOException(\"Failed to read one or more lines of data. Reason: Bad format\\n\" +","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"Pc1234321"},"content":"                            \"Warning: System will ignore the bad format data, beware of data loss!\");","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"Pc1234321"},"content":"                //Install data","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"Pc1234321"},"content":"                if(type.equalsIgnoreCase(\"T\")){","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"Pc1234321"},"content":"                    assert taskName !\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"Pc1234321"},"content":"                    if(taskName.isEmpty()){","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"Pc1234321"},"content":"                        throw new IOException(\"Failed to read one or more lines of data. Reason: Bad format\\n\" +","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"Pc1234321"},"content":"                                \"Warning: System will ignore the bad format data, beware of data loss!\");","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"Pc1234321"},"content":"                    Todo task \u003d new Todo(taskName);","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"Pc1234321"},"content":"                    task.setStatus(status);","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"Pc1234321"},"content":"                    readDataList.add(task);","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"Pc1234321"},"content":"                }else if(type.equalsIgnoreCase(\"E\")){","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"Pc1234321"},"content":"                    assert taskName !\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"Pc1234321"},"content":"                    assert by !\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"Pc1234321"},"content":"                    assert from !\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"Pc1234321"},"content":"                    if(taskName.isEmpty() || by.isEmpty() || from.isEmpty()){","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"Pc1234321"},"content":"                        throw new IOException(\"Failed to read one or more lines of data. Reason: Bad format\\n\" +","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"Pc1234321"},"content":"                                \"Warning: System will ignore the bad format data, beware of data loss!\");","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"Pc1234321"},"content":"                    Event task \u003d new Event(taskName, from, by);","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"Pc1234321"},"content":"                    task.setStatus(status);","lastModifiedDate":"2024-03-15"},{"lineNumber":129,"author":{"gitId":"Pc1234321"},"content":"                    readDataList.add(task);","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"Pc1234321"},"content":"                }else if(type.equalsIgnoreCase(\"D\")){","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"Pc1234321"},"content":"                    assert taskName !\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"Pc1234321"},"content":"                    assert by !\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"Pc1234321"},"content":"                    if(taskName.isEmpty() || by.isEmpty()){","lastModifiedDate":"2024-03-15"},{"lineNumber":134,"author":{"gitId":"Pc1234321"},"content":"                        throw new IOException(\"Failed to read one line of data. Reason: Bad format\\n\" +","lastModifiedDate":"2024-03-15"},{"lineNumber":135,"author":{"gitId":"Pc1234321"},"content":"                                \"System will ignore the bad format data.\");","lastModifiedDate":"2024-03-15"},{"lineNumber":136,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-15"},{"lineNumber":137,"author":{"gitId":"Pc1234321"},"content":"                    Deadline task \u003d new Deadline(taskName, by);","lastModifiedDate":"2024-03-15"},{"lineNumber":138,"author":{"gitId":"Pc1234321"},"content":"                    task.setStatus(status);","lastModifiedDate":"2024-03-15"},{"lineNumber":139,"author":{"gitId":"Pc1234321"},"content":"                    readDataList.add(task);","lastModifiedDate":"2024-03-15"},{"lineNumber":140,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":142,"author":{"gitId":"Pc1234321"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":143,"author":{"gitId":"Pc1234321"},"content":"            configureLogger();","lastModifiedDate":"2024-03-15"},{"lineNumber":144,"author":{"gitId":"Pc1234321"},"content":"            logger.log(Level.SEVERE, \"An data input error occurred\", e);","lastModifiedDate":"2024-03-15"},{"lineNumber":145,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":146,"author":{"gitId":"Pc1234321"},"content":"        return readDataList;","lastModifiedDate":"2024-03-15"},{"lineNumber":147,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":148,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":149,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":150,"author":{"gitId":"Pc1234321"},"content":"     * Helper function to combine array into a single string","lastModifiedDate":"2024-03-23"},{"lineNumber":151,"author":{"gitId":"Pc1234321"},"content":"     * @param array: the array needs to combine from index 1","lastModifiedDate":"2024-03-23"},{"lineNumber":152,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":153,"author":{"gitId":"Pc1234321"},"content":"    public static String combineArray(String[] array) {","lastModifiedDate":"2024-03-16"},{"lineNumber":154,"author":{"gitId":"Pc1234321"},"content":"        if (array.length \u003e 1) {","lastModifiedDate":"2024-03-15"},{"lineNumber":155,"author":{"gitId":"Pc1234321"},"content":"            StringBuilder result \u003d new StringBuilder(array[1]);","lastModifiedDate":"2024-03-15"},{"lineNumber":156,"author":{"gitId":"Pc1234321"},"content":"            result.append(\" \");","lastModifiedDate":"2024-03-15"},{"lineNumber":157,"author":{"gitId":"Pc1234321"},"content":"            for (int i \u003d 2; i \u003c array.length; i++) {","lastModifiedDate":"2024-03-15"},{"lineNumber":158,"author":{"gitId":"Pc1234321"},"content":"                result.append(array[i]);","lastModifiedDate":"2024-03-15"},{"lineNumber":159,"author":{"gitId":"Pc1234321"},"content":"                result.append(\" \");","lastModifiedDate":"2024-03-15"},{"lineNumber":160,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":161,"author":{"gitId":"Pc1234321"},"content":"            return result.toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":162,"author":{"gitId":"Pc1234321"},"content":"        } else {","lastModifiedDate":"2024-03-15"},{"lineNumber":163,"author":{"gitId":"Pc1234321"},"content":"            return null;","lastModifiedDate":"2024-03-15"},{"lineNumber":164,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":165,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":166,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":167,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"Pc1234321":167}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package task;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"public class Deadline extends Task{","lastModifiedDate":"2024-02-10"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"    protected String by;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-10"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"        super(description);","lastModifiedDate":"2024-02-10"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"        this.type \u003d \u0027D\u0027;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"     * Getter to get by time","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"        return by;","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"     * Override function to show the task info","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"    public String toString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"        return super.toString() + \" (by: \" + by + \" )\";","lastModifiedDate":"2024-02-17"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"     * Override function to format the task data into correct format when store into local storage","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"Pc1234321"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"Pc1234321"},"content":"    public String format(){return super.format() + \"|by: \" + by;}","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Pc1234321":30}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package task;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-17"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"    protected String from;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"    protected String by;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"    public Event(String description, String from, String by) {","lastModifiedDate":"2024-02-17"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"        super(description);","lastModifiedDate":"2024-02-17"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-17"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"        this.type \u003d \u0027E\u0027;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"    public String getFrom() {","lastModifiedDate":"2024-02-17"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"        return from;","lastModifiedDate":"2024-02-17"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"    public String getBy() {","lastModifiedDate":"2024-02-17"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"        return by;","lastModifiedDate":"2024-02-17"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"     * Override function to show the task info","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"    @Override","lastModifiedDate":"2024-02-17"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"    public String toString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"        return super.toString() + \" (from: \" + from + \" to: \"+ by +\" )\";","lastModifiedDate":"2024-02-17"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"     * Override function to format the task data into correct format when store into local storage","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"Pc1234321"},"content":"    public String format(){return super.format() + \"|from: \"+from + \"|by: \" + by;}","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Pc1234321":29}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package task;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"public abstract class Task {","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"    protected String description;","lastModifiedDate":"2024-02-03"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-03"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"    protected Character type;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-03"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-03"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-03"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-02-03"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"     * Getter function to get task status, if task is marked, return \"X\", otherwise return space","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-03"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-03"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"     * Getter function to get if a task is marked as done","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"    public boolean getStatus(){","lastModifiedDate":"2024-02-10"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"        return isDone;","lastModifiedDate":"2024-02-10"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"Pc1234321"},"content":"     * Getter function to get task name","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"Pc1234321"},"content":"    public String getTaskName() {","lastModifiedDate":"2024-02-03"},{"lineNumber":31,"author":{"gitId":"Pc1234321"},"content":"        return description;","lastModifiedDate":"2024-02-03"},{"lineNumber":32,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":33,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"Pc1234321"},"content":"     * Getter function to get the task type","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"Pc1234321"},"content":"    public Character getTaskType(){","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"Pc1234321"},"content":"        return type;","lastModifiedDate":"2024-02-10"},{"lineNumber":39,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-02-10"},{"lineNumber":40,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"Pc1234321"},"content":"     * Setter to set if a task is marked or unmarked","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"Pc1234321"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2024-02-03"},{"lineNumber":44,"author":{"gitId":"Pc1234321"},"content":"        isDone \u003d status;","lastModifiedDate":"2024-02-03"},{"lineNumber":45,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-02-03"},{"lineNumber":46,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"Pc1234321"},"content":"     * Function to convert a task info into a string","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"Pc1234321"},"content":"    public String toString() {","lastModifiedDate":"2024-02-17"},{"lineNumber":50,"author":{"gitId":"Pc1234321"},"content":"        return \"[\"+ type +\"][\"+ getStatusIcon() +\"] \" + description;","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-02-17"},{"lineNumber":52,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"Pc1234321"},"content":"     * Getter function to get from date, this function is override function","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"Pc1234321"},"content":"    public String getFrom(){return \"\";}","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"Pc1234321"},"content":"     * Getter function to get by date, this function is override function","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"Pc1234321"},"content":"    public String getBy(){return \"\";}","lastModifiedDate":"2024-02-17"},{"lineNumber":60,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"Pc1234321"},"content":"     * Override function to format the task data into correct format when store into local storage","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"Pc1234321"},"content":"    public String format(){return type + \"|\" + isDone + \"|Name: \" + description;}","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-02-03"}],"authorContributionMap":{"Pc1234321":64}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package task;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"import duke.DateTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"public class TaskList {","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"    public TaskList(){this.taskList \u003d new ArrayList\u003c\u003e();}","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"     * Insert function to add task into task list","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"     * @param task the task object needs to insert","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"    public void insertTask(Task task){","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"        taskList.add(task);","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"Alright, added \" + task.getTaskName() + \" into todo list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"   \" + task);","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"You have \" + taskList.size() + \" things now in your todo list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"     * Delete function to remove a task from task list","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"     * @param inputIndex task object needs to be deleted","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"    public void deleteTask(String inputIndex){","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Pc1234321"},"content":"        int index \u003d Integer.parseInt(inputIndex.trim());","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Pc1234321"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Pc1234321"},"content":"            Ui.nothingToDelete();","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"Pc1234321"},"content":"        }else if(index \u003c 1 || index \u003e taskList.size()){","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Pc1234321"},"content":"            System.out.println(\"No such task in your list :(\");","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Pc1234321"},"content":"        }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Pc1234321"},"content":"            System.out.println(\"Okay, I\u0027ve remove following task:\");","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Pc1234321"},"content":"            System.out.println(\"   \" + taskList.get(index - 1).toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Pc1234321"},"content":"            taskList.remove(index - 1);","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Pc1234321"},"content":"            System.out.println(\"You have \" + taskList.size() + \" things now in your todo list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"Pc1234321"},"content":"     * Function to mark/unmark function","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"Pc1234321"},"content":"     * @param value: mark or unmark a task","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"Pc1234321"},"content":"     * @param inputIndex: indicate which task\u0027s status needs to be changed","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"Pc1234321"},"content":"    public void updateStatus(String value, String inputIndex) {","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Pc1234321"},"content":"        int index \u003d Integer.parseInt(inputIndex.trim());","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"Pc1234321"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"Pc1234321"},"content":"            Ui.nothingToMark();","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"Pc1234321"},"content":"        }else if(index \u003c 1 || index \u003e taskList.size()){","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"Pc1234321"},"content":"            System.out.println(\"No such task in your list :(\");","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"Pc1234321"},"content":"        }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"Pc1234321"},"content":"            boolean status \u003d value.equalsIgnoreCase(\"mark\");","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"Pc1234321"},"content":"            if (taskList.get(index - 1).getStatus() \u003d\u003d status \u0026\u0026 status) {","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"The task \" + inputIndex + \" is already marked as done\");","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"Pc1234321"},"content":"            } else if (taskList.get(index - 1).getStatus() \u003d\u003d status \u0026\u0026 !status) {","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"The task \" + inputIndex + \" is already marked as not done\");","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"Pc1234321"},"content":"            } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"Pc1234321"},"content":"                if (status) {","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"Pc1234321"},"content":"                    System.out.println(\"Okay, I\u0027ve marked task \" + inputIndex + \" as done\");","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"Pc1234321"},"content":"                } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"Pc1234321"},"content":"                    System.out.println(\"Okay, I\u0027ve marked task \" + inputIndex + \" as not done yet\");","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"Pc1234321"},"content":"                taskList.get(index - 1).setStatus(status);","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"   \" + \"[\" + taskList.get(index - 1).getStatusIcon() + \"] \" + taskList.get(index - 1).getTaskName());","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"Pc1234321"},"content":"     * Function to find out a task contains certain keyword","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"Pc1234321"},"content":"     * @param keyword: keyword in the task name","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"Pc1234321"},"content":"    public void findTask(String keyword){","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"Pc1234321"},"content":"        ArrayList\u003cTask\u003e findList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"Pc1234321"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"Pc1234321"},"content":"            Ui.nothingToSearch();","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"Pc1234321"},"content":"        }else{","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"Pc1234321"},"content":"            for(Task task: taskList){","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"Pc1234321"},"content":"                String[] wordList \u003d task.getTaskName().split(\" \");","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"Pc1234321"},"content":"                String[] keywordWords \u003d keyword.split(\" \");","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"Pc1234321"},"content":"                //Will search phrase instead of only 1 keyword","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"Pc1234321"},"content":"                for (int i \u003d 0; i \u003c\u003d wordList.length - keywordWords.length; i++) {","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"Pc1234321"},"content":"                    boolean checkFlag \u003d true;","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"Pc1234321"},"content":"                    for (int j \u003d 0; j \u003c keywordWords.length; j++) {","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"Pc1234321"},"content":"                        if (!wordList[i + j].equalsIgnoreCase(keywordWords[j])) {","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"Pc1234321"},"content":"                            checkFlag \u003d false;","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"Pc1234321"},"content":"                            break;","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"Pc1234321"},"content":"                    if (checkFlag) {","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"Pc1234321"},"content":"                        findList.add(task);","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"Pc1234321"},"content":"            if(findList.isEmpty()){","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"Pc1234321"},"content":"                Ui.nothingInKeyword();","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"Pc1234321"},"content":"            }else{","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"Pc1234321"},"content":"                Ui.printKeywordList(findList);","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"Pc1234321"},"content":"    public void findDate(LocalDateTime inputDate){","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"Pc1234321"},"content":"        ArrayList\u003cTask\u003e findList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"Pc1234321"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"Pc1234321"},"content":"            Ui.nothingToSearch();","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"Pc1234321"},"content":"        }else{","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"Pc1234321"},"content":"            for(Task task: taskList){","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"Pc1234321"},"content":"                if(task.type.equals(\u0027E\u0027)){","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"Pc1234321"},"content":"                    LocalDateTime startingDate \u003d DateTime.stringToDate(task.getFrom());","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"Pc1234321"},"content":"                    LocalDateTime endingDate \u003d DateTime.stringToDate(task.getBy());","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"Pc1234321"},"content":"                    if(DateTime.isDateValid(inputDate, startingDate, endingDate)){","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"Pc1234321"},"content":"                        findList.add(task);","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"Pc1234321"},"content":"                }else if(task.type.equals(\u0027D\u0027)){","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"Pc1234321"},"content":"                    LocalDateTime endingDate \u003d DateTime.stringToDate(task.getBy());","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"Pc1234321"},"content":"                    if(DateTime.isDateValid(inputDate, endingDate)){","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"Pc1234321"},"content":"                        findList.add(task);","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"Pc1234321"},"content":"            if(findList.isEmpty()){","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"Pc1234321"},"content":"                Ui.nothingInPeriod();","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"Pc1234321"},"content":"            }else{","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"Pc1234321"},"content":"                Ui.printPeriodList(findList);","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":134,"author":{"gitId":"Pc1234321"},"content":"     * Function to return the task list","lastModifiedDate":"2024-03-23"},{"lineNumber":135,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":136,"author":{"gitId":"Pc1234321"},"content":"    public ArrayList\u003cTask\u003e getList(){return taskList;}","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":139,"author":{"gitId":"Pc1234321"},"content":"     * Setter function to set the task list","lastModifiedDate":"2024-03-23"},{"lineNumber":140,"author":{"gitId":"Pc1234321"},"content":"     * @param taskList: the task list needs to be set","lastModifiedDate":"2024-03-23"},{"lineNumber":141,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":142,"author":{"gitId":"Pc1234321"},"content":"    public void setList(ArrayList\u003cTask\u003e taskList){ this.taskList \u003d taskList;}","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Pc1234321":143}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package task;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"public class Todo extends Task{","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"        super(description);","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"        this.type \u003d \u0027T\u0027;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Pc1234321":8}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"import task.Task;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"public class Ui {","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"    private static Scanner userInput;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"    public Ui(){userInput \u003d new Scanner(System.in);}","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"     * Welcome Page everytime when program startup","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"    public void welcomeMenu(){","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"        String logo \u003d \"         ____        _        \\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"                + \"        |  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"                + \"        | | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"                + \"        | |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"                + \"        |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(logo + \"             Hi! I\u0027m Neuro.\\n        Glad to see you again:)\");","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"********** Press to continue ************\");","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"        in.nextLine();","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"     * Help manu when user key in a wrong command","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"Pc1234321"},"content":"    public void helpMenu(){","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"**********************************************\");","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"*        Please use following commands       *\");","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"**********************************************\");","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"* 1. todo itemName                           *\");","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"* 2. event eventName /by Date                *\");","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"* 3. deadline eventName /from Date /to Date  *\");","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"* 4. mark/unmark itemNumber                  *\");","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"* 5. list                                    *\");","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"* 6. delete itemID                           *\");","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"* 7. find keyword                            *\");","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"* 8. date dateTime                           *\");","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"* 9. quit/bye             (To exit program)  *\");","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"*                                            *\");","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"**********************************************\");","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"Pc1234321"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"Pc1234321"},"content":"     * Print out the item in the task list (for list function)","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"Pc1234321"},"content":"     * @param todoList the task list to print out","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"Pc1234321"},"content":"    public static void listMenu(ArrayList\u003cTask\u003e todoList){","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"Pc1234321"},"content":"        if(todoList.isEmpty()){","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"Pc1234321"},"content":"            System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"Pc1234321"},"content":"            System.out.println(\"//     You have nothing need to be done   //\");","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"Pc1234321"},"content":"            System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"Pc1234321"},"content":"        }else{","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"Pc1234321"},"content":"            System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"Pc1234321"},"content":"            System.out.println(\"//  Here are the things need to follow up //\");","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"Pc1234321"},"content":"            System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"Pc1234321"},"content":"            printTask(todoList);","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"Pc1234321"},"content":"            System.out.println(\"                                            \");","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"Pc1234321"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"Pc1234321"},"content":"     * Function to print tasks from taskList","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"Pc1234321"},"content":"     * @param todoList Task list","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"Pc1234321"},"content":"    public static void printTask(ArrayList\u003cTask\u003e todoList){","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"Pc1234321"},"content":"        for(int i \u003d 0; i \u003c todoList.size(); i++){","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"Pc1234321"},"content":"            String status \u003d todoList.get(i).getStatusIcon();","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"Pc1234321"},"content":"            Character type \u003d todoList.get(i).getTaskType();","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"Pc1234321"},"content":"            String from \u003d todoList.get(i).getFrom();","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"Pc1234321"},"content":"            String by \u003d todoList.get(i).getBy();","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"Pc1234321"},"content":"            if(type.equals(\u0027T\u0027)){","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"Pc1234321"},"content":"                System.out.println((i+1)+\".\" +\"[\"+ type +\"]\"+ \"[\"+ status +\"]\" +\" \"+ todoList.get(i).getTaskName());","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"Pc1234321"},"content":"            }else if(type.equals(\u0027E\u0027)){","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"Pc1234321"},"content":"                System.out.println((i+1)+\".\" + \"[\"+ type +\"]\"+ \"[\"+ status +\"]\" +\" \"+ todoList.get(i).getTaskName() +","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"Pc1234321"},"content":"                        \" (From: \" + from + \" To: \" + by + \")\");","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"Pc1234321"},"content":"            }else if(type.equals(\u0027D\u0027)){","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"Pc1234321"},"content":"                System.out.println((i+1)+\".\" + \"[\"+ type +\"]\"+ \"[\"+ status +\"]\" +\" \"+ todoList.get(i).getTaskName() +","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"Pc1234321"},"content":"                        \" (By: \" + by + \")\");","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"Pc1234321"},"content":"    public static void nothingToDelete(){","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"//       You have nothing to delete       //\");","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"Pc1234321"},"content":"    public static void nothingToMark(){","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"//        You have nothing to mark        //\");","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"Pc1234321"},"content":"    public static void nothingToSearch(){","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"//       You have nothing to search       //\");","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"Pc1234321"},"content":"    public static void nothingInPeriod(){","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"//     No task in the mentioned period    //\");","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"Pc1234321"},"content":"    public static void nothingInKeyword(){","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"//       No task contain your keyword     //\");","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"Pc1234321"},"content":"    public static void printKeywordList(ArrayList\u003cTask\u003e findList){","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"//   Here are tasks contain your keyword  //\");","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"Pc1234321"},"content":"        printTask(findList);","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"                                            \");","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"Pc1234321"},"content":"    public static void printPeriodList(ArrayList\u003cTask\u003e findList){","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"//  The tasks within the mentioned period //\");","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"Pc1234321"},"content":"        Ui.printTask(findList);","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"                                            \");","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":128,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":129,"author":{"gitId":"Pc1234321"},"content":"     * Greeting when user exit the program","lastModifiedDate":"2024-03-23"},{"lineNumber":130,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":131,"author":{"gitId":"Pc1234321"},"content":"    public void exitProgram(){","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"Bye! See you next time!\");","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":135,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":136,"author":{"gitId":"Pc1234321"},"content":"     * Return the string read from user","lastModifiedDate":"2024-03-23"},{"lineNumber":137,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":138,"author":{"gitId":"Pc1234321"},"content":"    public String readCommand(){return userInput.nextLine();}","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Pc1234321":141}},{"path":"src/test/java/commands/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"import task.TaskList;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"public class CommandTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"    Command byeCommand \u003d new ExitCommandTest(\"BYE\");","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"     * Test exit command","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"    public void byeCommandTest() {","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"        // Bye command is executed so method will return true","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"        assertTrue(byeCommand.Exit());","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Pc1234321":20}},{"path":"src/test/java/commands/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"import task.TaskList;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"public class ExitCommandTest extends Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"    public ExitCommandTest(String commandType) {","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"        super(commandType);","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"     * Function to execute the command","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"     * @param taskList: the task list","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"     * @param ui: ui functions","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"     * @param storage： make use of the storage","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"        Exit();","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"        ui.exitProgram();","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"        storage.writeToFile(taskList.getList());","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"     * function to set if this command will end the program","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Pc1234321"},"content":"    public boolean Exit(){return true;}","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Pc1234321":30}},{"path":"src/test/java/duke/DateTimeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package duke;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"public class DateTimeTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"    //Date time format for program","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"    private static final DateTimeFormatter formatYYYY_MM_DD_HHmm \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"    //Display format for user to view","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"    private static final DateTimeFormatter displayDateTimeFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"    private static final DateTimeFormatter displayDateFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"    public DateTimeTest(){}","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"     * Function to check if user input is a correct date-time format","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"     * @param datetime: user input date time","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"    public static LocalDateTime checkDate(String datetime) throws DukeException {","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"            // Try parsing datetime with the format yyyy-MM-dd HHmm","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"            return LocalDateTime.parse(datetime.trim(), formatYYYY_MM_DD_HHmm);","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"            try {","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"                // If parsing with format yyyy-MM-dd HHmm fails, try parsing with format yyyy-MM-dd","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"Pc1234321"},"content":"                return LocalDateTime.parse(datetime.trim() + \" 0000\", formatYYYY_MM_DD_HHmm);","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"Pc1234321"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"Pc1234321"},"content":"                throw new DukeException(\"Your Date and Time format is wrong, please use yyyy-MM-dd HHmm or yyyy-MM-dd.\\n\" +","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"Pc1234321"},"content":"                        \"Remember to add 0 if date time is a single digit. E.g. Mar 8 2021 9:00 -\u003e 2021-03-08 0900\");","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"Pc1234321"},"content":"     * Test date valid function","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"Pc1234321"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"Pc1234321"},"content":"    public void isDateValid() throws DukeException {","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"Pc1234321"},"content":"        String date \u003d \"2020-10-10\";","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"Pc1234321"},"content":"        LocalDateTime targetDate \u003d checkDate(date);","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"Pc1234321"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"Pc1234321"},"content":"        assertFalse(targetDate.isAfter(currentDateTime));","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"Pc1234321"},"content":"     * Test date valid function for 2 dates","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"Pc1234321"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"Pc1234321"},"content":"    public void isEventValid() throws DukeException {","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"Pc1234321"},"content":"        String startDate \u003d \"2020-10-10 2359\";","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"Pc1234321"},"content":"        String targetDate \u003d \"2024-01-01 1023\";","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"Pc1234321"},"content":"        LocalDateTime startingDateTime \u003d checkDate(startDate);","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"Pc1234321"},"content":"        LocalDateTime targetDateTime \u003d checkDate(targetDate);","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"Pc1234321"},"content":"        assertTrue(targetDateTime.isAfter(startingDateTime));","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"Pc1234321":59}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package duke;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"import commands.*;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"import storage.Storage;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"import task.Deadline;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"import task.Event;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"import task.Todo;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"import ui.Ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"import static duke.DukeException.isInteger;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"public class ParserTest extends DateTime {","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"    private Command command;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"    /***","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"     * Function to check the user input and make sure the input is a valid command","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"     * @param userInput: String get from user","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"        String[] wordList \u003d userInput.split(\" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"        String taskName \u003d \"\";","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"        String by \u003d \"\";","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"        String from \u003d \"\";","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"        boolean format \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Pc1234321"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Pc1234321"},"content":"            //Todo checker","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Pc1234321"},"content":"            if (wordList[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"Pc1234321"},"content":"                if(wordList.length \u003d\u003d 1){","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Pc1234321"},"content":"                    throw new DukeException(\"Please give your task a name\");","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Pc1234321"},"content":"                }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Pc1234321"},"content":"                    taskName \u003d Storage.combineArray(wordList);","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Pc1234321"},"content":"                    Todo task \u003d new Todo(taskName);","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Pc1234321"},"content":"                    return new AddCommand(\"todo\",task);","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Pc1234321"},"content":"            //Event checker","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"Pc1234321"},"content":"            else if (wordList[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"Pc1234321"},"content":"                if(wordList.length \u003d\u003d 1){","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"Pc1234321"},"content":"                    throw new DukeException(\"Please give your event a name\");","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Pc1234321"},"content":"                }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"Pc1234321"},"content":"                    boolean fromChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"Pc1234321"},"content":"                    boolean toChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"Pc1234321"},"content":"                    //Check From stage and to stage","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Pc1234321"},"content":"                    for (int i \u003d 0; i \u003c wordList.length; i++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"Pc1234321"},"content":"                        if(wordList[1].equalsIgnoreCase(\"/from\") ||","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"Pc1234321"},"content":"                                wordList[1].equalsIgnoreCase(\"/to\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"Pc1234321"},"content":"                            throw new DukeException(\"Please give your event a name\");","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"Pc1234321"},"content":"                        else if(wordList[i].equalsIgnoreCase(\"/from\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"Pc1234321"},"content":"                            if(i+1 \u003c wordList.length \u0026\u0026 !wordList[i+1].equalsIgnoreCase(\"/to\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"Pc1234321"},"content":"                                fromChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"Pc1234321"},"content":"                            }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"Pc1234321"},"content":"                                throw new DukeException(\"Can you tell me about the start date of this event?\");","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"Pc1234321"},"content":"                        else if(wordList[i].equalsIgnoreCase(\"/to\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"Pc1234321"},"content":"                            if(i+1 \u003c wordList.length \u0026\u0026 !wordList[i+1].equalsIgnoreCase(\"/from\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"Pc1234321"},"content":"                                toChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"Pc1234321"},"content":"                            }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"Pc1234321"},"content":"                                throw new DukeException(\"Can you tell me about the end date of this event?\");","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"Pc1234321"},"content":"                    //Handle error","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"Pc1234321"},"content":"                    if(!fromChecker || !toChecker){","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"Pc1234321"},"content":"                        throw new DukeException(\"Your event format seems wrong, please try following pattern:\\n\" +","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"Pc1234321"},"content":"                                \"event + event Name + /from + Date + /to + Date\");","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"Pc1234321"},"content":"                    }else{//No error","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"Pc1234321"},"content":"                        String stage \u003d \"name\";","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"Pc1234321"},"content":"                        //Separate the input and record the eventName, EventFrom, EventTo","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"Pc1234321"},"content":"                        fromChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"Pc1234321"},"content":"                        toChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"Pc1234321"},"content":"                        for (String item : wordList) {","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"Pc1234321"},"content":"                            if (item.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"Pc1234321"},"content":"                                continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"Pc1234321"},"content":"                            } else if (item.equalsIgnoreCase(\"/from\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"Pc1234321"},"content":"                                stage \u003d \"from\";","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"Pc1234321"},"content":"                                fromChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"Pc1234321"},"content":"                                continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"Pc1234321"},"content":"                            } else if (item.equalsIgnoreCase(\"/to\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"Pc1234321"},"content":"                                stage \u003d \"to\";","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"Pc1234321"},"content":"                                toChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"Pc1234321"},"content":"                                continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"Pc1234321"},"content":"                            if (stage.equalsIgnoreCase(\"name\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"Pc1234321"},"content":"                                taskName +\u003d item;","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"Pc1234321"},"content":"                                taskName +\u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"Pc1234321"},"content":"                            } else if (stage.equalsIgnoreCase(\"from\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"Pc1234321"},"content":"                                from +\u003d item;","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"Pc1234321"},"content":"                                from +\u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"Pc1234321"},"content":"                            } else if (stage.equalsIgnoreCase(\"to\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"Pc1234321"},"content":"                                by +\u003d item;","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"Pc1234321"},"content":"                                by +\u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"Pc1234321"},"content":"                        if(!isDateValid(by)){","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"Pc1234321"},"content":"                            throw new DukeException(\"Your event already ended\");","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"Pc1234321"},"content":"                        }else if(isEventValid(from, by)){","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"Pc1234321"},"content":"                            throw new DukeException(\"The end date of your event is earlier than the starting date.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"Pc1234321"},"content":"                        }else{","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"Pc1234321"},"content":"                            Event task \u003d new Event(taskName, dateString(from), dateString(by));","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"Pc1234321"},"content":"                            return new AddCommand(\"event\",task);","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"Pc1234321"},"content":"            //deadline","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"Pc1234321"},"content":"            else if (wordList[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"Pc1234321"},"content":"                if(wordList.length \u003d\u003d 1){","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"Pc1234321"},"content":"                    throw new DukeException(\"Please give your deadline a name\");","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"Pc1234321"},"content":"                }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"Pc1234321"},"content":"                    boolean byChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"Pc1234321"},"content":"                    //Check From stage and to stage","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"Pc1234321"},"content":"                    for (int i \u003d 0; i \u003c wordList.length; i++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"Pc1234321"},"content":"                        if(wordList[1].equalsIgnoreCase(\"/by\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"Pc1234321"},"content":"                            throw new DukeException(\"Please give your deadline a name\");","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"Pc1234321"},"content":"                        else if(wordList[i].equalsIgnoreCase(\"/by\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"Pc1234321"},"content":"                            if(i+1 \u003c wordList.length){","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"Pc1234321"},"content":"                                byChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"Pc1234321"},"content":"                                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":128,"author":{"gitId":"Pc1234321"},"content":"                            }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"Pc1234321"},"content":"                                throw new DukeException(\"Can you tell me the due date?\");","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"Pc1234321"},"content":"                    //Handle error","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"Pc1234321"},"content":"                    if(!byChecker){","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"Pc1234321"},"content":"                        throw new DukeException(\"Your deadline format seems wrong, please try following pattern:\\n\" +","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"Pc1234321"},"content":"                                \"deadline + deadline Name + /by + Date\");","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"Pc1234321"},"content":"                    }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"Pc1234321"},"content":"                        byChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"Pc1234321"},"content":"                        for (String item : wordList) {","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"Pc1234321"},"content":"                            if (item.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"Pc1234321"},"content":"                                continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":142,"author":{"gitId":"Pc1234321"},"content":"                            } else if (item.equalsIgnoreCase(\"/by\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"Pc1234321"},"content":"                                byChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":144,"author":{"gitId":"Pc1234321"},"content":"                                continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":145,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":146,"author":{"gitId":"Pc1234321"},"content":"                            if (!byChecker) {","lastModifiedDate":"2024-03-16"},{"lineNumber":147,"author":{"gitId":"Pc1234321"},"content":"                                taskName +\u003d item;","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"Pc1234321"},"content":"                                taskName +\u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"Pc1234321"},"content":"                            } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"Pc1234321"},"content":"                                by +\u003d item;","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"Pc1234321"},"content":"                                by +\u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":152,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":153,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":154,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":155,"author":{"gitId":"Pc1234321"},"content":"                        if(isDateValid(by)){","lastModifiedDate":"2024-03-23"},{"lineNumber":156,"author":{"gitId":"Pc1234321"},"content":"                            Deadline task \u003d new Deadline(taskName, dateString(by));","lastModifiedDate":"2024-03-23"},{"lineNumber":157,"author":{"gitId":"Pc1234321"},"content":"                            return new AddCommand(\"deadline\",task);","lastModifiedDate":"2024-03-16"},{"lineNumber":158,"author":{"gitId":"Pc1234321"},"content":"                        }else{","lastModifiedDate":"2024-03-23"},{"lineNumber":159,"author":{"gitId":"Pc1234321"},"content":"                            throw new DukeException(\"Your Deadline Date is not a valid date or earlier than today\");","lastModifiedDate":"2024-03-23"},{"lineNumber":160,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-23"},{"lineNumber":161,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":162,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":163,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":164,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":165,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":166,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"Pc1234321"},"content":"            //mark","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"Pc1234321"},"content":"            else if(wordList[0].equalsIgnoreCase(\"mark\") ||","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"Pc1234321"},"content":"                    wordList[0].equalsIgnoreCase(\"unmark\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"Pc1234321"},"content":"                if(wordList.length \u003d\u003d 1){","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"Pc1234321"},"content":"                    throw new DukeException(\"Please tell me which task you would like to mark/unmark\");","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"Pc1234321"},"content":"                }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"Pc1234321"},"content":"                    String checkNum \u003d wordList[1];","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"Pc1234321"},"content":"                    if(isInteger(checkNum)){","lastModifiedDate":"2024-03-16"},{"lineNumber":176,"author":{"gitId":"Pc1234321"},"content":"                        return new MarkCommand(wordList[0], checkNum);","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"Pc1234321"},"content":"                    }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"Pc1234321"},"content":"                        throw new DukeException(\"Please tell me which number of task you would like to mark/unmark\");","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":181,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":182,"author":{"gitId":"Pc1234321"},"content":"            //delete","lastModifiedDate":"2024-03-16"},{"lineNumber":183,"author":{"gitId":"Pc1234321"},"content":"            else if(wordList[0].equalsIgnoreCase(\"delete\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"Pc1234321"},"content":"                if(wordList.length \u003d\u003d 1){","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"Pc1234321"},"content":"                    throw new DukeException(\"Please tell me which task you would like to delete\");","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"Pc1234321"},"content":"                }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":187,"author":{"gitId":"Pc1234321"},"content":"                    String checkNum \u003d wordList[1];","lastModifiedDate":"2024-03-16"},{"lineNumber":188,"author":{"gitId":"Pc1234321"},"content":"                    if(isInteger(checkNum)){","lastModifiedDate":"2024-03-16"},{"lineNumber":189,"author":{"gitId":"Pc1234321"},"content":"                        return new DeleteCommand(\"delete\", checkNum);","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"Pc1234321"},"content":"                    }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"Pc1234321"},"content":"                        throw new DukeException(\"Please tell me which number of task you would like to delete\");","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":194,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":195,"author":{"gitId":"Pc1234321"},"content":"            //quit","lastModifiedDate":"2024-03-16"},{"lineNumber":196,"author":{"gitId":"Pc1234321"},"content":"            else if(wordList[0].equalsIgnoreCase(\"bye\")  ||","lastModifiedDate":"2024-03-16"},{"lineNumber":197,"author":{"gitId":"Pc1234321"},"content":"                    wordList[0].equalsIgnoreCase(\"quit\")  ){// Single command no need to check","lastModifiedDate":"2024-03-16"},{"lineNumber":198,"author":{"gitId":"Pc1234321"},"content":"                return new ExitCommand(\"exit\");","lastModifiedDate":"2024-03-16"},{"lineNumber":199,"author":{"gitId":"Pc1234321"},"content":"            }else if(wordList[0].equalsIgnoreCase(\"list\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":200,"author":{"gitId":"Pc1234321"},"content":"                return new ListCommand(\"list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":201,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":202,"author":{"gitId":"Pc1234321"},"content":"            else {","lastModifiedDate":"2024-03-16"},{"lineNumber":203,"author":{"gitId":"Pc1234321"},"content":"                format \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":204,"author":{"gitId":"Pc1234321"},"content":"                throw new DukeException(\"I don\u0027t get it, I prepared following functions for you.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":205,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":206,"author":{"gitId":"Pc1234321"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":207,"author":{"gitId":"Pc1234321"},"content":"            System.out.println(e.getMessage());// Print the error message","lastModifiedDate":"2024-03-16"},{"lineNumber":208,"author":{"gitId":"Pc1234321"},"content":"            if(!format){","lastModifiedDate":"2024-03-16"},{"lineNumber":209,"author":{"gitId":"Pc1234321"},"content":"                new Ui().helpMenu();","lastModifiedDate":"2024-03-16"},{"lineNumber":210,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":211,"author":{"gitId":"Pc1234321"},"content":"            return new InvalidCommand(\"Error\");","lastModifiedDate":"2024-03-16"},{"lineNumber":212,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":213,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":214,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":215,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":216,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Pc1234321":216}},{"path":"src/test/java/duke/test.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Pc1234321"},"content":"package duke;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"Pc1234321"},"content":"public class test {","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"Pc1234321"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"Pc1234321"},"content":"/*","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"Pc1234321"},"content":"public static String checkUserInput(String userInput) {","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"Pc1234321"},"content":"        String[] wordList \u003d userInput.split(\" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"Pc1234321"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"Pc1234321"},"content":"            if (wordList[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"Pc1234321"},"content":"                if(wordList.length \u003d\u003d 1){","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"Pc1234321"},"content":"                    throw new DukeException(\"Please give your task a name\");","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"Pc1234321"},"content":"                }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"Pc1234321"},"content":"                    return null;// No error","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"Pc1234321"},"content":"            else if (wordList[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"Pc1234321"},"content":"                if(wordList.length \u003d\u003d 1){","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"Pc1234321"},"content":"                    throw new DukeException(\"Please give your event a name\");","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"Pc1234321"},"content":"                }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"Pc1234321"},"content":"                    boolean fromChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"Pc1234321"},"content":"                    boolean toChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"Pc1234321"},"content":"                    //Check From stage and to stage","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"Pc1234321"},"content":"                    for (int i \u003d 0; i \u003c wordList.length; i++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"Pc1234321"},"content":"                        if(wordList[1].equalsIgnoreCase(\"/from\") ||","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"Pc1234321"},"content":"                                wordList[1].equalsIgnoreCase(\"/to\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"Pc1234321"},"content":"                            throw new DukeException(\"Please give your event a name\");","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"Pc1234321"},"content":"                        else if(wordList[i].equalsIgnoreCase(\"/from\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"Pc1234321"},"content":"                            if(i+1 \u003c wordList.length \u0026\u0026 !wordList[i+1].equalsIgnoreCase(\"/to\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"Pc1234321"},"content":"                                fromChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"Pc1234321"},"content":"                                continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"Pc1234321"},"content":"                            }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"Pc1234321"},"content":"                                throw new DukeException(\"Can you tell me about the start date of this event?\");","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"Pc1234321"},"content":"                        else if(wordList[i].equalsIgnoreCase(\"/to\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"Pc1234321"},"content":"                            if(i+1 \u003c wordList.length \u0026\u0026 !wordList[i+1].equalsIgnoreCase(\"/from\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"Pc1234321"},"content":"                                toChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"Pc1234321"},"content":"                                continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"Pc1234321"},"content":"                            }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"Pc1234321"},"content":"                                throw new DukeException(\"Can you tell me about the end date of this event?\");","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"Pc1234321"},"content":"                    //Handle error","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"Pc1234321"},"content":"                    if(fromChecker \u003d\u003d false || toChecker \u003d\u003d false){","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"Pc1234321"},"content":"                        throw new DukeException(\"Your event format seems wrong, please try following pattern:\\n\" +","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"Pc1234321"},"content":"                                \"event + event Name + /from + Date + /to + Date\");","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"Pc1234321"},"content":"                    }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"Pc1234321"},"content":"                        return null;","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"Pc1234321"},"content":"            else if (wordList[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"Pc1234321"},"content":"                if(wordList.length \u003d\u003d 1){","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"Pc1234321"},"content":"                    throw new DukeException(\"Please give your deadline a name\");","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"Pc1234321"},"content":"                }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"Pc1234321"},"content":"                    boolean byChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"Pc1234321"},"content":"                    //Check From stage and to stage","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"Pc1234321"},"content":"                    for (int i \u003d 0; i \u003c wordList.length; i++) {","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"Pc1234321"},"content":"                        if(wordList[1].equalsIgnoreCase(\"/by\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"Pc1234321"},"content":"                            throw new DukeException(\"Please give your deadline a name\");","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"Pc1234321"},"content":"                        else if(wordList[i].equalsIgnoreCase(\"/by\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"Pc1234321"},"content":"                            if(i+1 \u003c wordList.length){","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"Pc1234321"},"content":"                                byChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"Pc1234321"},"content":"                                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"Pc1234321"},"content":"                            }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"Pc1234321"},"content":"                                throw new DukeException(\"Can you tell me the due date?\");","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"Pc1234321"},"content":"                    //Handle error","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"Pc1234321"},"content":"                    if(byChecker \u003d\u003d false){","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"Pc1234321"},"content":"                        throw new DukeException(\"Your deadline format seems wrong, please try following pattern:\\n\" +","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"Pc1234321"},"content":"                                \"deadline + deadline Name + /by + Date\");","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"Pc1234321"},"content":"                    }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"Pc1234321"},"content":"                        return null;// No error","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"Pc1234321"},"content":"            else if(wordList[0].equalsIgnoreCase(\"mark\") ||","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"Pc1234321"},"content":"                    wordList[0].equalsIgnoreCase(\"unmark\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"Pc1234321"},"content":"                if(wordList.length \u003d\u003d 1){","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"Pc1234321"},"content":"                    throw new DukeException(\"Please tell me which task you would like to mark/unmark\");","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"Pc1234321"},"content":"                }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"Pc1234321"},"content":"                    String checkNum \u003d wordList[1];","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"Pc1234321"},"content":"                    if(isInteger(checkNum)){","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"Pc1234321"},"content":"                        return null;// No error","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"Pc1234321"},"content":"                    }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"Pc1234321"},"content":"                        throw new DukeException(\"Please tell me which number of task you would like to mark/unmark\");","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"Pc1234321"},"content":"            else if(wordList[0].equalsIgnoreCase(\"delete\")){","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"Pc1234321"},"content":"                if(wordList.length \u003d\u003d 1){","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"Pc1234321"},"content":"                    throw new DukeException(\"Please tell me which task you would like to delete\");","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"Pc1234321"},"content":"                }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"Pc1234321"},"content":"                    String checkNum \u003d wordList[1];","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"Pc1234321"},"content":"                    if(isInteger(checkNum)){","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"Pc1234321"},"content":"                        return null;// No error","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"Pc1234321"},"content":"                    }else{","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"Pc1234321"},"content":"                        throw new DukeException(\"Please tell me which number of task you would like to delete\");","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"Pc1234321"},"content":"            else if(wordList[0].equalsIgnoreCase(\"list\") ||","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"Pc1234321"},"content":"                    wordList[0].equalsIgnoreCase(\"bye\")  ||","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"Pc1234321"},"content":"                    wordList[0].equalsIgnoreCase(\"quit\")  ){// Single command no need to check","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"Pc1234321"},"content":"                return null;","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"Pc1234321"},"content":"            else {","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"Pc1234321"},"content":"                format \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"Pc1234321"},"content":"                throw new DukeException(\"I don\u0027t get it, I prepared following functions for you.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"Pc1234321"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"Pc1234321"},"content":"            return e.getMessage();// Return the error message","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"Pc1234321"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":128,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"Pc1234321"},"content":"/*","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"Pc1234321"},"content":"public void run1() {","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"Pc1234321"},"content":"        String userInput \u003d new String();","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"Pc1234321"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"Pc1234321"},"content":"        ui.welcomeMenu();","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"Pc1234321"},"content":"        ui.listMenu(todoList);","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"How can I help you today?\");","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"Pc1234321"},"content":"        //Start running","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"Pc1234321"},"content":"        while (true) {","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"Pc1234321"},"content":"            in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"Pc1234321"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"Pc1234321"},"content":"            String[] wordList \u003d userInput.split(\" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"Pc1234321"},"content":"            String taskName \u003d new String();","lastModifiedDate":"2024-03-16"},{"lineNumber":142,"author":{"gitId":"Pc1234321"},"content":"            String by \u003d new String();","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"Pc1234321"},"content":"            String from \u003d new String();","lastModifiedDate":"2024-03-16"},{"lineNumber":144,"author":{"gitId":"Pc1234321"},"content":"            format \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":145,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":146,"author":{"gitId":"Pc1234321"},"content":"            //Check error function","lastModifiedDate":"2024-03-16"},{"lineNumber":147,"author":{"gitId":"Pc1234321"},"content":"            String errorMessage \u003d checkUserInput(userInput);","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"Pc1234321"},"content":"            if (errorMessage !\u003d null) {","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(errorMessage);","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"Pc1234321"},"content":"                if (format \u003d\u003d false) {","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"Pc1234321"},"content":"                    ui.helpMenu();","lastModifiedDate":"2024-03-16"},{"lineNumber":152,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":153,"author":{"gitId":"Pc1234321"},"content":"                continue; // Continue the loop if there\u0027s an error","lastModifiedDate":"2024-03-16"},{"lineNumber":154,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":155,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":156,"author":{"gitId":"Pc1234321"},"content":"            //Proceed to main function if input no error","lastModifiedDate":"2024-03-16"},{"lineNumber":157,"author":{"gitId":"Pc1234321"},"content":"            //Todo function","lastModifiedDate":"2024-03-16"},{"lineNumber":158,"author":{"gitId":"Pc1234321"},"content":"            if (wordList[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":159,"author":{"gitId":"Pc1234321"},"content":"                taskName \u003d storage.combineArray(wordList);","lastModifiedDate":"2024-03-16"},{"lineNumber":160,"author":{"gitId":"Pc1234321"},"content":"                Todo newTask \u003d new Todo(taskName);","lastModifiedDate":"2024-03-16"},{"lineNumber":161,"author":{"gitId":"Pc1234321"},"content":"                todoList.add(newTask);","lastModifiedDate":"2024-03-16"},{"lineNumber":162,"author":{"gitId":"Pc1234321"},"content":"                newTask.setEventType(\u0027T\u0027);","lastModifiedDate":"2024-03-16"},{"lineNumber":163,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":164,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"Alright, added \" + taskName + \" into todo list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":165,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"   \" + newTask.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":166,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"You have \" + todoList.size() + \" things now in your todo list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":167,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"Pc1234321"},"content":"            //List function","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"Pc1234321"},"content":"            else if (wordList[0].equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"Pc1234321"},"content":"                ui.listMenu(todoList);","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"Pc1234321"},"content":"            //Mark function","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"Pc1234321"},"content":"            else if (wordList[0].equalsIgnoreCase(\"mark\") || wordList[0].equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"Pc1234321"},"content":"                int itemNum \u003d Integer.parseInt(wordList[1]);","lastModifiedDate":"2024-03-16"},{"lineNumber":176,"author":{"gitId":"Pc1234321"},"content":"                boolean status \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"Pc1234321"},"content":"                if (wordList[0].equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"Pc1234321"},"content":"                    status \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"Pc1234321"},"content":"                if (todoList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-03-16"},{"lineNumber":181,"author":{"gitId":"Pc1234321"},"content":"                    System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-16"},{"lineNumber":182,"author":{"gitId":"Pc1234321"},"content":"                    System.out.println(\"//        You have nothing to mark        //\");","lastModifiedDate":"2024-03-16"},{"lineNumber":183,"author":{"gitId":"Pc1234321"},"content":"                    System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"Pc1234321"},"content":"                } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"Pc1234321"},"content":"                    if (itemNum \u003e\u003d 1 \u0026\u0026 itemNum \u003c\u003d todoList.size()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"Pc1234321"},"content":"                        if (todoList.get(itemNum - 1).getStatus() \u003d\u003d status \u0026\u0026 todoList.get(itemNum - 1).getStatus() \u003d\u003d true) {","lastModifiedDate":"2024-03-16"},{"lineNumber":187,"author":{"gitId":"Pc1234321"},"content":"                            System.out.println(\"The task \" + itemNum + \" is already marked as done\");","lastModifiedDate":"2024-03-16"},{"lineNumber":188,"author":{"gitId":"Pc1234321"},"content":"                        } else if (todoList.get(itemNum - 1).getStatus() \u003d\u003d status \u0026\u0026 todoList.get(itemNum - 1).getStatus() \u003d\u003d false) {","lastModifiedDate":"2024-03-16"},{"lineNumber":189,"author":{"gitId":"Pc1234321"},"content":"                            System.out.println(\"The task \" + itemNum + \" is already marked as not done\");","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"Pc1234321"},"content":"                        } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"Pc1234321"},"content":"                            if (status \u003d\u003d true) {","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"Pc1234321"},"content":"                                System.out.println(\"Okay, I\u0027ve marked task \" + itemNum + \" as done\");","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"Pc1234321"},"content":"                            } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":194,"author":{"gitId":"Pc1234321"},"content":"                                System.out.println(\"Okay, I\u0027ve marked task \" + itemNum + \" as not done yet\");","lastModifiedDate":"2024-03-16"},{"lineNumber":195,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":196,"author":{"gitId":"Pc1234321"},"content":"                            todoList.get(itemNum - 1).setStatus(status);","lastModifiedDate":"2024-03-16"},{"lineNumber":197,"author":{"gitId":"Pc1234321"},"content":"                            System.out.println(\"   \" + \"[\" + todoList.get(itemNum - 1).getStatusIcon() + \"] \" + todoList.get(itemNum - 1).getTaskName());","lastModifiedDate":"2024-03-16"},{"lineNumber":198,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":199,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":200,"author":{"gitId":"Pc1234321"},"content":"                    } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":201,"author":{"gitId":"Pc1234321"},"content":"                        System.out.println(\"No such task in your list :(\");","lastModifiedDate":"2024-03-16"},{"lineNumber":202,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":203,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":204,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":205,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":206,"author":{"gitId":"Pc1234321"},"content":"            //Event function","lastModifiedDate":"2024-03-16"},{"lineNumber":207,"author":{"gitId":"Pc1234321"},"content":"            else if (wordList[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":208,"author":{"gitId":"Pc1234321"},"content":"                String stage \u003d \"name\";","lastModifiedDate":"2024-03-16"},{"lineNumber":209,"author":{"gitId":"Pc1234321"},"content":"                //Seprate the input and record the eventName, EventFrom, EventTo","lastModifiedDate":"2024-03-16"},{"lineNumber":210,"author":{"gitId":"Pc1234321"},"content":"                boolean fromChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":211,"author":{"gitId":"Pc1234321"},"content":"                boolean toChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":212,"author":{"gitId":"Pc1234321"},"content":"                for (String item : wordList) {","lastModifiedDate":"2024-03-16"},{"lineNumber":213,"author":{"gitId":"Pc1234321"},"content":"                    if (item.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":214,"author":{"gitId":"Pc1234321"},"content":"                        continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":215,"author":{"gitId":"Pc1234321"},"content":"                    } else if (item.equalsIgnoreCase(\"/from\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":216,"author":{"gitId":"Pc1234321"},"content":"                        stage \u003d \"from\";","lastModifiedDate":"2024-03-16"},{"lineNumber":217,"author":{"gitId":"Pc1234321"},"content":"                        fromChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":218,"author":{"gitId":"Pc1234321"},"content":"                        continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":219,"author":{"gitId":"Pc1234321"},"content":"                    } else if (item.equalsIgnoreCase(\"/to\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":220,"author":{"gitId":"Pc1234321"},"content":"                        stage \u003d \"to\";","lastModifiedDate":"2024-03-16"},{"lineNumber":221,"author":{"gitId":"Pc1234321"},"content":"                        toChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":222,"author":{"gitId":"Pc1234321"},"content":"                        continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":223,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":224,"author":{"gitId":"Pc1234321"},"content":"                    if (stage.equalsIgnoreCase(\"name\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":225,"author":{"gitId":"Pc1234321"},"content":"                        taskName +\u003d item;","lastModifiedDate":"2024-03-16"},{"lineNumber":226,"author":{"gitId":"Pc1234321"},"content":"                        taskName +\u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":227,"author":{"gitId":"Pc1234321"},"content":"                    } else if (stage.equalsIgnoreCase(\"from\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":228,"author":{"gitId":"Pc1234321"},"content":"                        from +\u003d item;","lastModifiedDate":"2024-03-16"},{"lineNumber":229,"author":{"gitId":"Pc1234321"},"content":"                        from +\u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":230,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":231,"author":{"gitId":"Pc1234321"},"content":"                    } else if (stage.equalsIgnoreCase(\"to\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":232,"author":{"gitId":"Pc1234321"},"content":"                        by +\u003d item;","lastModifiedDate":"2024-03-16"},{"lineNumber":233,"author":{"gitId":"Pc1234321"},"content":"                        by +\u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":234,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":235,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":236,"author":{"gitId":"Pc1234321"},"content":"                Event newEvent \u003d new Event(taskName, from, by);","lastModifiedDate":"2024-03-16"},{"lineNumber":237,"author":{"gitId":"Pc1234321"},"content":"                todoList.add(newEvent);","lastModifiedDate":"2024-03-16"},{"lineNumber":238,"author":{"gitId":"Pc1234321"},"content":"                newEvent.setEventType(\u0027E\u0027);","lastModifiedDate":"2024-03-16"},{"lineNumber":239,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"Alright, added \" + taskName + \" into todo list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":240,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"   \" + newEvent.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":241,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"You have \" + todoList.size() + \" things now in your todo list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":242,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":243,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":244,"author":{"gitId":"Pc1234321"},"content":"            //Deadline function","lastModifiedDate":"2024-03-16"},{"lineNumber":245,"author":{"gitId":"Pc1234321"},"content":"            else if (wordList[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":246,"author":{"gitId":"Pc1234321"},"content":"                //Seprate the input and record the deadlineName, deadlineBy","lastModifiedDate":"2024-03-16"},{"lineNumber":247,"author":{"gitId":"Pc1234321"},"content":"                boolean byChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":248,"author":{"gitId":"Pc1234321"},"content":"                for (String item : wordList) {","lastModifiedDate":"2024-03-16"},{"lineNumber":249,"author":{"gitId":"Pc1234321"},"content":"                    if (item.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":250,"author":{"gitId":"Pc1234321"},"content":"                        continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":251,"author":{"gitId":"Pc1234321"},"content":"                    } else if (item.equalsIgnoreCase(\"/by\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":252,"author":{"gitId":"Pc1234321"},"content":"                        byChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":253,"author":{"gitId":"Pc1234321"},"content":"                        continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":254,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":255,"author":{"gitId":"Pc1234321"},"content":"                    if (!byChecker) {","lastModifiedDate":"2024-03-16"},{"lineNumber":256,"author":{"gitId":"Pc1234321"},"content":"                        taskName +\u003d item;","lastModifiedDate":"2024-03-16"},{"lineNumber":257,"author":{"gitId":"Pc1234321"},"content":"                        taskName +\u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":258,"author":{"gitId":"Pc1234321"},"content":"                    } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":259,"author":{"gitId":"Pc1234321"},"content":"                        by +\u003d item;","lastModifiedDate":"2024-03-16"},{"lineNumber":260,"author":{"gitId":"Pc1234321"},"content":"                        by +\u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":261,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":262,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":263,"author":{"gitId":"Pc1234321"},"content":"                Deadline newDeadline \u003d new Deadline(taskName, by);","lastModifiedDate":"2024-03-16"},{"lineNumber":264,"author":{"gitId":"Pc1234321"},"content":"                todoList.add(newDeadline);","lastModifiedDate":"2024-03-16"},{"lineNumber":265,"author":{"gitId":"Pc1234321"},"content":"                newDeadline.setEventType(\u0027D\u0027);","lastModifiedDate":"2024-03-16"},{"lineNumber":266,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"Alright, added \" + taskName + \" into todo list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":267,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"   \" + newDeadline.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":268,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"You have \" + todoList.size() + \" things now in your todo list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":269,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":270,"author":{"gitId":"Pc1234321"},"content":"            //Delete function","lastModifiedDate":"2024-03-16"},{"lineNumber":271,"author":{"gitId":"Pc1234321"},"content":"            else if (wordList[0].equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":272,"author":{"gitId":"Pc1234321"},"content":"                int itemNum \u003d Integer.parseInt(wordList[1]);","lastModifiedDate":"2024-03-16"},{"lineNumber":273,"author":{"gitId":"Pc1234321"},"content":"                if (todoList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-03-16"},{"lineNumber":274,"author":{"gitId":"Pc1234321"},"content":"                    System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-16"},{"lineNumber":275,"author":{"gitId":"Pc1234321"},"content":"                    System.out.println(\"//       You have nothing to delete       //\");","lastModifiedDate":"2024-03-16"},{"lineNumber":276,"author":{"gitId":"Pc1234321"},"content":"                    System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-16"},{"lineNumber":277,"author":{"gitId":"Pc1234321"},"content":"                } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":278,"author":{"gitId":"Pc1234321"},"content":"                    if (itemNum \u003e\u003d 1 \u0026\u0026 itemNum \u003c\u003d todoList.size()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":279,"author":{"gitId":"Pc1234321"},"content":"                        System.out.println(\"Okay, I\u0027ve remove following task:\");","lastModifiedDate":"2024-03-16"},{"lineNumber":280,"author":{"gitId":"Pc1234321"},"content":"                        System.out.println(\"   \" + todoList.get(itemNum - 1).toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":281,"author":{"gitId":"Pc1234321"},"content":"                        todoList.remove(itemNum - 1);","lastModifiedDate":"2024-03-16"},{"lineNumber":282,"author":{"gitId":"Pc1234321"},"content":"                        System.out.println(\"You have \" + todoList.size() + \" things now in your todo list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":283,"author":{"gitId":"Pc1234321"},"content":"                    } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":284,"author":{"gitId":"Pc1234321"},"content":"                        System.out.println(\"No such task in your list :(\");","lastModifiedDate":"2024-03-16"},{"lineNumber":285,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":286,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":287,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":288,"author":{"gitId":"Pc1234321"},"content":"            //Exit program","lastModifiedDate":"2024-03-16"},{"lineNumber":289,"author":{"gitId":"Pc1234321"},"content":"            else if (userInput.equalsIgnoreCase(\"bye\") || userInput.equalsIgnoreCase(\"quit\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":290,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"Bye! See you next time!\");","lastModifiedDate":"2024-03-16"},{"lineNumber":291,"author":{"gitId":"Pc1234321"},"content":"                storage.writeToFile(todoList);","lastModifiedDate":"2024-03-16"},{"lineNumber":292,"author":{"gitId":"Pc1234321"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":293,"author":{"gitId":"Pc1234321"},"content":"            } else {break;}//Code should never reach here.","lastModifiedDate":"2024-03-16"},{"lineNumber":294,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":295,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":296,"author":{"gitId":"Pc1234321"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":297,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":298,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":299,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":300,"author":{"gitId":"Pc1234321"},"content":"/*","lastModifiedDate":"2024-03-16"},{"lineNumber":301,"author":{"gitId":"Pc1234321"},"content":"public void run1() {","lastModifiedDate":"2024-03-16"},{"lineNumber":302,"author":{"gitId":"Pc1234321"},"content":"        String userInput \u003d new String();","lastModifiedDate":"2024-03-16"},{"lineNumber":303,"author":{"gitId":"Pc1234321"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-16"},{"lineNumber":304,"author":{"gitId":"Pc1234321"},"content":"        ui.welcomeMenu();","lastModifiedDate":"2024-03-16"},{"lineNumber":305,"author":{"gitId":"Pc1234321"},"content":"        ui.listMenu(todoList);","lastModifiedDate":"2024-03-16"},{"lineNumber":306,"author":{"gitId":"Pc1234321"},"content":"        System.out.println(\"How can I help you today?\");","lastModifiedDate":"2024-03-16"},{"lineNumber":307,"author":{"gitId":"Pc1234321"},"content":"        //Start running","lastModifiedDate":"2024-03-16"},{"lineNumber":308,"author":{"gitId":"Pc1234321"},"content":"        while (true) {","lastModifiedDate":"2024-03-16"},{"lineNumber":309,"author":{"gitId":"Pc1234321"},"content":"            in \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-16"},{"lineNumber":310,"author":{"gitId":"Pc1234321"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2024-03-16"},{"lineNumber":311,"author":{"gitId":"Pc1234321"},"content":"            String[] wordList \u003d userInput.split(\" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":312,"author":{"gitId":"Pc1234321"},"content":"            String taskName \u003d new String();","lastModifiedDate":"2024-03-16"},{"lineNumber":313,"author":{"gitId":"Pc1234321"},"content":"            String by \u003d new String();","lastModifiedDate":"2024-03-16"},{"lineNumber":314,"author":{"gitId":"Pc1234321"},"content":"            String from \u003d new String();","lastModifiedDate":"2024-03-16"},{"lineNumber":315,"author":{"gitId":"Pc1234321"},"content":"            format \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":316,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":317,"author":{"gitId":"Pc1234321"},"content":"            //Check error function","lastModifiedDate":"2024-03-16"},{"lineNumber":318,"author":{"gitId":"Pc1234321"},"content":"            String errorMessage \u003d checkUserInput(userInput);","lastModifiedDate":"2024-03-16"},{"lineNumber":319,"author":{"gitId":"Pc1234321"},"content":"            if (errorMessage !\u003d null) {","lastModifiedDate":"2024-03-16"},{"lineNumber":320,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(errorMessage);","lastModifiedDate":"2024-03-16"},{"lineNumber":321,"author":{"gitId":"Pc1234321"},"content":"                if (format \u003d\u003d false) {","lastModifiedDate":"2024-03-16"},{"lineNumber":322,"author":{"gitId":"Pc1234321"},"content":"                    ui.helpMenu();","lastModifiedDate":"2024-03-16"},{"lineNumber":323,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":324,"author":{"gitId":"Pc1234321"},"content":"                continue; // Continue the loop if there\u0027s an error","lastModifiedDate":"2024-03-16"},{"lineNumber":325,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":326,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":327,"author":{"gitId":"Pc1234321"},"content":"            //Proceed to main function if input no error","lastModifiedDate":"2024-03-16"},{"lineNumber":328,"author":{"gitId":"Pc1234321"},"content":"            //Todo function","lastModifiedDate":"2024-03-16"},{"lineNumber":329,"author":{"gitId":"Pc1234321"},"content":"            if (wordList[0].equalsIgnoreCase(\"todo\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":330,"author":{"gitId":"Pc1234321"},"content":"                taskName \u003d storage.combineArray(wordList);","lastModifiedDate":"2024-03-16"},{"lineNumber":331,"author":{"gitId":"Pc1234321"},"content":"                Todo newTask \u003d new Todo(taskName);","lastModifiedDate":"2024-03-16"},{"lineNumber":332,"author":{"gitId":"Pc1234321"},"content":"                todoList.add(newTask);","lastModifiedDate":"2024-03-16"},{"lineNumber":333,"author":{"gitId":"Pc1234321"},"content":"                newTask.setEventType(\u0027T\u0027);","lastModifiedDate":"2024-03-16"},{"lineNumber":334,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":335,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"Alright, added \" + taskName + \" into todo list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":336,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"   \" + newTask.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":337,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"You have \" + todoList.size() + \" things now in your todo list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":338,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":339,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":340,"author":{"gitId":"Pc1234321"},"content":"            //List function","lastModifiedDate":"2024-03-16"},{"lineNumber":341,"author":{"gitId":"Pc1234321"},"content":"            else if (wordList[0].equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":342,"author":{"gitId":"Pc1234321"},"content":"                ui.listMenu(todoList);","lastModifiedDate":"2024-03-16"},{"lineNumber":343,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":344,"author":{"gitId":"Pc1234321"},"content":"            //Mark function","lastModifiedDate":"2024-03-16"},{"lineNumber":345,"author":{"gitId":"Pc1234321"},"content":"            else if (wordList[0].equalsIgnoreCase(\"mark\") || wordList[0].equalsIgnoreCase(\"unmark\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":346,"author":{"gitId":"Pc1234321"},"content":"                int itemNum \u003d Integer.parseInt(wordList[1]);","lastModifiedDate":"2024-03-16"},{"lineNumber":347,"author":{"gitId":"Pc1234321"},"content":"                boolean status \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":348,"author":{"gitId":"Pc1234321"},"content":"                if (wordList[0].equalsIgnoreCase(\"mark\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":349,"author":{"gitId":"Pc1234321"},"content":"                    status \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":350,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":351,"author":{"gitId":"Pc1234321"},"content":"                if (todoList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-03-16"},{"lineNumber":352,"author":{"gitId":"Pc1234321"},"content":"                    System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-16"},{"lineNumber":353,"author":{"gitId":"Pc1234321"},"content":"                    System.out.println(\"//        You have nothing to mark        //\");","lastModifiedDate":"2024-03-16"},{"lineNumber":354,"author":{"gitId":"Pc1234321"},"content":"                    System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-16"},{"lineNumber":355,"author":{"gitId":"Pc1234321"},"content":"                } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":356,"author":{"gitId":"Pc1234321"},"content":"                    if (itemNum \u003e\u003d 1 \u0026\u0026 itemNum \u003c\u003d todoList.size()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":357,"author":{"gitId":"Pc1234321"},"content":"                        if (todoList.get(itemNum - 1).getStatus() \u003d\u003d status \u0026\u0026 todoList.get(itemNum - 1).getStatus() \u003d\u003d true) {","lastModifiedDate":"2024-03-16"},{"lineNumber":358,"author":{"gitId":"Pc1234321"},"content":"                            System.out.println(\"The task \" + itemNum + \" is already marked as done\");","lastModifiedDate":"2024-03-16"},{"lineNumber":359,"author":{"gitId":"Pc1234321"},"content":"                        } else if (todoList.get(itemNum - 1).getStatus() \u003d\u003d status \u0026\u0026 todoList.get(itemNum - 1).getStatus() \u003d\u003d false) {","lastModifiedDate":"2024-03-16"},{"lineNumber":360,"author":{"gitId":"Pc1234321"},"content":"                            System.out.println(\"The task \" + itemNum + \" is already marked as not done\");","lastModifiedDate":"2024-03-16"},{"lineNumber":361,"author":{"gitId":"Pc1234321"},"content":"                        } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":362,"author":{"gitId":"Pc1234321"},"content":"                            if (status \u003d\u003d true) {","lastModifiedDate":"2024-03-16"},{"lineNumber":363,"author":{"gitId":"Pc1234321"},"content":"                                System.out.println(\"Okay, I\u0027ve marked task \" + itemNum + \" as done\");","lastModifiedDate":"2024-03-16"},{"lineNumber":364,"author":{"gitId":"Pc1234321"},"content":"                            } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":365,"author":{"gitId":"Pc1234321"},"content":"                                System.out.println(\"Okay, I\u0027ve marked task \" + itemNum + \" as not done yet\");","lastModifiedDate":"2024-03-16"},{"lineNumber":366,"author":{"gitId":"Pc1234321"},"content":"                            }","lastModifiedDate":"2024-03-16"},{"lineNumber":367,"author":{"gitId":"Pc1234321"},"content":"                            todoList.get(itemNum - 1).setStatus(status);","lastModifiedDate":"2024-03-16"},{"lineNumber":368,"author":{"gitId":"Pc1234321"},"content":"                            System.out.println(\"   \" + \"[\" + todoList.get(itemNum - 1).getStatusIcon() + \"] \" + todoList.get(itemNum - 1).getTaskName());","lastModifiedDate":"2024-03-16"},{"lineNumber":369,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":370,"author":{"gitId":"Pc1234321"},"content":"                        }","lastModifiedDate":"2024-03-16"},{"lineNumber":371,"author":{"gitId":"Pc1234321"},"content":"                    } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":372,"author":{"gitId":"Pc1234321"},"content":"                        System.out.println(\"No such task in your list :(\");","lastModifiedDate":"2024-03-16"},{"lineNumber":373,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":374,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":375,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":376,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":377,"author":{"gitId":"Pc1234321"},"content":"            //Event function","lastModifiedDate":"2024-03-16"},{"lineNumber":378,"author":{"gitId":"Pc1234321"},"content":"            else if (wordList[0].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":379,"author":{"gitId":"Pc1234321"},"content":"                String stage \u003d \"name\";","lastModifiedDate":"2024-03-16"},{"lineNumber":380,"author":{"gitId":"Pc1234321"},"content":"                //Seprate the input and record the eventName, EventFrom, EventTo","lastModifiedDate":"2024-03-16"},{"lineNumber":381,"author":{"gitId":"Pc1234321"},"content":"                boolean fromChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":382,"author":{"gitId":"Pc1234321"},"content":"                boolean toChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":383,"author":{"gitId":"Pc1234321"},"content":"                for (String item : wordList) {","lastModifiedDate":"2024-03-16"},{"lineNumber":384,"author":{"gitId":"Pc1234321"},"content":"                    if (item.equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":385,"author":{"gitId":"Pc1234321"},"content":"                        continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":386,"author":{"gitId":"Pc1234321"},"content":"                    } else if (item.equalsIgnoreCase(\"/from\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":387,"author":{"gitId":"Pc1234321"},"content":"                        stage \u003d \"from\";","lastModifiedDate":"2024-03-16"},{"lineNumber":388,"author":{"gitId":"Pc1234321"},"content":"                        fromChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":389,"author":{"gitId":"Pc1234321"},"content":"                        continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":390,"author":{"gitId":"Pc1234321"},"content":"                    } else if (item.equalsIgnoreCase(\"/to\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":391,"author":{"gitId":"Pc1234321"},"content":"                        stage \u003d \"to\";","lastModifiedDate":"2024-03-16"},{"lineNumber":392,"author":{"gitId":"Pc1234321"},"content":"                        toChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":393,"author":{"gitId":"Pc1234321"},"content":"                        continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":394,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":395,"author":{"gitId":"Pc1234321"},"content":"                    if (stage.equalsIgnoreCase(\"name\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":396,"author":{"gitId":"Pc1234321"},"content":"                        taskName +\u003d item;","lastModifiedDate":"2024-03-16"},{"lineNumber":397,"author":{"gitId":"Pc1234321"},"content":"                        taskName +\u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":398,"author":{"gitId":"Pc1234321"},"content":"                    } else if (stage.equalsIgnoreCase(\"from\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":399,"author":{"gitId":"Pc1234321"},"content":"                        from +\u003d item;","lastModifiedDate":"2024-03-16"},{"lineNumber":400,"author":{"gitId":"Pc1234321"},"content":"                        from +\u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":401,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":402,"author":{"gitId":"Pc1234321"},"content":"                    } else if (stage.equalsIgnoreCase(\"to\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":403,"author":{"gitId":"Pc1234321"},"content":"                        by +\u003d item;","lastModifiedDate":"2024-03-16"},{"lineNumber":404,"author":{"gitId":"Pc1234321"},"content":"                        by +\u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":405,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":406,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":407,"author":{"gitId":"Pc1234321"},"content":"                Event newEvent \u003d new Event(taskName, from, by);","lastModifiedDate":"2024-03-16"},{"lineNumber":408,"author":{"gitId":"Pc1234321"},"content":"                todoList.add(newEvent);","lastModifiedDate":"2024-03-16"},{"lineNumber":409,"author":{"gitId":"Pc1234321"},"content":"                newEvent.setEventType(\u0027E\u0027);","lastModifiedDate":"2024-03-16"},{"lineNumber":410,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"Alright, added \" + taskName + \" into todo list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":411,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"   \" + newEvent.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":412,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"You have \" + todoList.size() + \" things now in your todo list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":413,"author":{"gitId":"Pc1234321"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":414,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":415,"author":{"gitId":"Pc1234321"},"content":"            //Deadline function","lastModifiedDate":"2024-03-16"},{"lineNumber":416,"author":{"gitId":"Pc1234321"},"content":"            else if (wordList[0].equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":417,"author":{"gitId":"Pc1234321"},"content":"                //Seprate the input and record the deadlineName, deadlineBy","lastModifiedDate":"2024-03-16"},{"lineNumber":418,"author":{"gitId":"Pc1234321"},"content":"                boolean byChecker \u003d false;","lastModifiedDate":"2024-03-16"},{"lineNumber":419,"author":{"gitId":"Pc1234321"},"content":"                for (String item : wordList) {","lastModifiedDate":"2024-03-16"},{"lineNumber":420,"author":{"gitId":"Pc1234321"},"content":"                    if (item.equalsIgnoreCase(\"deadline\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":421,"author":{"gitId":"Pc1234321"},"content":"                        continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":422,"author":{"gitId":"Pc1234321"},"content":"                    } else if (item.equalsIgnoreCase(\"/by\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":423,"author":{"gitId":"Pc1234321"},"content":"                        byChecker \u003d true;","lastModifiedDate":"2024-03-16"},{"lineNumber":424,"author":{"gitId":"Pc1234321"},"content":"                        continue;","lastModifiedDate":"2024-03-16"},{"lineNumber":425,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":426,"author":{"gitId":"Pc1234321"},"content":"                    if (!byChecker) {","lastModifiedDate":"2024-03-16"},{"lineNumber":427,"author":{"gitId":"Pc1234321"},"content":"                        taskName +\u003d item;","lastModifiedDate":"2024-03-16"},{"lineNumber":428,"author":{"gitId":"Pc1234321"},"content":"                        taskName +\u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":429,"author":{"gitId":"Pc1234321"},"content":"                    } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":430,"author":{"gitId":"Pc1234321"},"content":"                        by +\u003d item;","lastModifiedDate":"2024-03-16"},{"lineNumber":431,"author":{"gitId":"Pc1234321"},"content":"                        by +\u003d \" \";","lastModifiedDate":"2024-03-16"},{"lineNumber":432,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":433,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":434,"author":{"gitId":"Pc1234321"},"content":"                Deadline newDeadline \u003d new Deadline(taskName, by);","lastModifiedDate":"2024-03-16"},{"lineNumber":435,"author":{"gitId":"Pc1234321"},"content":"                todoList.add(newDeadline);","lastModifiedDate":"2024-03-16"},{"lineNumber":436,"author":{"gitId":"Pc1234321"},"content":"                newDeadline.setEventType(\u0027D\u0027);","lastModifiedDate":"2024-03-16"},{"lineNumber":437,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"Alright, added \" + taskName + \" into todo list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":438,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"   \" + newDeadline.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":439,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"You have \" + todoList.size() + \" things now in your todo list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":440,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":441,"author":{"gitId":"Pc1234321"},"content":"            //Delete function","lastModifiedDate":"2024-03-16"},{"lineNumber":442,"author":{"gitId":"Pc1234321"},"content":"            else if (wordList[0].equalsIgnoreCase(\"delete\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":443,"author":{"gitId":"Pc1234321"},"content":"                int itemNum \u003d Integer.parseInt(wordList[1]);","lastModifiedDate":"2024-03-16"},{"lineNumber":444,"author":{"gitId":"Pc1234321"},"content":"                if (todoList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-03-16"},{"lineNumber":445,"author":{"gitId":"Pc1234321"},"content":"                    System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-16"},{"lineNumber":446,"author":{"gitId":"Pc1234321"},"content":"                    System.out.println(\"//       You have nothing to delete       //\");","lastModifiedDate":"2024-03-16"},{"lineNumber":447,"author":{"gitId":"Pc1234321"},"content":"                    System.out.println(\"////////////////////////////////////////////\");","lastModifiedDate":"2024-03-16"},{"lineNumber":448,"author":{"gitId":"Pc1234321"},"content":"                } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":449,"author":{"gitId":"Pc1234321"},"content":"                    if (itemNum \u003e\u003d 1 \u0026\u0026 itemNum \u003c\u003d todoList.size()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":450,"author":{"gitId":"Pc1234321"},"content":"                        System.out.println(\"Okay, I\u0027ve remove following task:\");","lastModifiedDate":"2024-03-16"},{"lineNumber":451,"author":{"gitId":"Pc1234321"},"content":"                        System.out.println(\"   \" + todoList.get(itemNum - 1).toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":452,"author":{"gitId":"Pc1234321"},"content":"                        todoList.remove(itemNum - 1);","lastModifiedDate":"2024-03-16"},{"lineNumber":453,"author":{"gitId":"Pc1234321"},"content":"                        System.out.println(\"You have \" + todoList.size() + \" things now in your todo list\");","lastModifiedDate":"2024-03-16"},{"lineNumber":454,"author":{"gitId":"Pc1234321"},"content":"                    } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":455,"author":{"gitId":"Pc1234321"},"content":"                        System.out.println(\"No such task in your list :(\");","lastModifiedDate":"2024-03-16"},{"lineNumber":456,"author":{"gitId":"Pc1234321"},"content":"                    }","lastModifiedDate":"2024-03-16"},{"lineNumber":457,"author":{"gitId":"Pc1234321"},"content":"                }","lastModifiedDate":"2024-03-16"},{"lineNumber":458,"author":{"gitId":"Pc1234321"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":459,"author":{"gitId":"Pc1234321"},"content":"            //Exit program","lastModifiedDate":"2024-03-16"},{"lineNumber":460,"author":{"gitId":"Pc1234321"},"content":"            else if (userInput.equalsIgnoreCase(\"bye\") || userInput.equalsIgnoreCase(\"quit\")) {","lastModifiedDate":"2024-03-16"},{"lineNumber":461,"author":{"gitId":"Pc1234321"},"content":"                System.out.println(\"Bye! See you next time!\");","lastModifiedDate":"2024-03-16"},{"lineNumber":462,"author":{"gitId":"Pc1234321"},"content":"                storage.writeToFile(todoList);","lastModifiedDate":"2024-03-16"},{"lineNumber":463,"author":{"gitId":"Pc1234321"},"content":"                break;","lastModifiedDate":"2024-03-16"},{"lineNumber":464,"author":{"gitId":"Pc1234321"},"content":"            } else {break;}//Code should never reach here.","lastModifiedDate":"2024-03-16"},{"lineNumber":465,"author":{"gitId":"Pc1234321"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":466,"author":{"gitId":"Pc1234321"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":467,"author":{"gitId":"Pc1234321"},"content":" */","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"Pc1234321":467}}]
