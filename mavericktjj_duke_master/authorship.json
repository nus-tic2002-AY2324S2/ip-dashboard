[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"mavericktjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"mavericktjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"mavericktjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"mavericktjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"mavericktjj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"mavericktjj"},"content":"    mainClass.set(\"Launcher\")","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mavericktjj":19,"-":41}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"[T][] task1","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"mavericktjj":1}},{"path":"src/main/java/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"public class AddTaskCommand implements Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"    private final Task task;","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"     * Constructs an AddTaskCommand object with the specified task.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"        this.task \u003d task;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"     * Executes the command to add the task to the task list.","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"     * If the task is not a duplicate, adds it to the task list, displays a confirmation message,","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"     * and saves the updated task list to storage. Otherwise, displays a duplicate message.","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"     * @param taskList The task list to which the task will be added.","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"     * @param ui       The user interface to display messages.","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"     * @param storage  The storage to save the updated task list.","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"     * @return","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"mavericktjj"},"content":"        assert task.description !\u003d null : \"Task description must not be null\";","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"mavericktjj"},"content":"        if (!ErrorHandling.checkDuplicate(task.description, taskList)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"mavericktjj"},"content":"            taskList.add(task);","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"mavericktjj"},"content":"            String concat \u003d ui.showTaskAdded(task, taskList.size());","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"mavericktjj"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"mavericktjj"},"content":"            return concat;","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"mavericktjj"},"content":"        } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"mavericktjj"},"content":"            return ui.showDuplicateMessage();","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"mavericktjj"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"mavericktjj":36}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":" * The Command interface represents an action to be executed by the Duke application.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":" * Implementing classes must define the execute method to perform the desired action.","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"public interface Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"     * Executes the command with the given task list, user interface, and storage.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"     * @param taskList The task list on which the command will operate.","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"     * @param ui       The user interface to display messages or interact with the user.","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"     * @param storage  The storage to read from or write to, if necessary.","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"     * @return","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"    String execute(TaskList taskList, Ui ui, Storage storage);","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"mavericktjj":19}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"     * Constructs a Deadline object with the specified description and deadline.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"     * Returns a string representation of the Deadline object.","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"     * Format: [D][Status] Description (by: Deadline)","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"     * @return A string representation of the Deadline object.","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"mavericktjj"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"mavericktjj"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"mavericktjj"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\")) + \")\";","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"mavericktjj":30}},{"path":"src/main/java/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"public class DeleteTaskCommand implements Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"    private final int index;","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"     * Constructs a DeleteTaskCommand object with the specified index.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"    public DeleteTaskCommand(int index) {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"     * Executes the command to delete the task from the task list.","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"     * If the index is valid, deletes the task at the specified index,","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"     * displays a deletion confirmation message, and saves the updated task list to storage.","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"     * If the index is out of range, displays an error message.","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"     * @param taskList The task list from which the task will be deleted.","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"     * @param ui       The user interface to display messages.","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"     * @param storage  The storage to save the updated task list.","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"     * @return","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"mavericktjj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"mavericktjj"},"content":"        assert taskList.get(index-1) !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"mavericktjj"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"mavericktjj"},"content":"            Task deletedTask \u003d taskList.remove(index - 1);","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"mavericktjj"},"content":"            String concat \u003d ui.showTaskDeleted(deletedTask, taskList.size());","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"mavericktjj"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"mavericktjj"},"content":"            return concat;","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"mavericktjj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"mavericktjj"},"content":"            ErrorHandling.outOfRange();","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"mavericktjj"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"mavericktjj"},"content":"        return null;","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"mavericktjj":38}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"    private Label text;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"        text \u003d l;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"        text.setWrapText(true);","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"mavericktjj"},"content":"    private void flip() {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"mavericktjj"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"mavericktjj"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"mavericktjj"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"mavericktjj"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"mavericktjj"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"mavericktjj"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"mavericktjj"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"mavericktjj"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"mavericktjj"},"content":"        db.flip();","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"mavericktjj"},"content":"        return db;","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"mavericktjj":42}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"public class Duke extends Application {","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"    final Ui ui;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"    final TaskList taskList;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"    final Storage storage;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-02-08"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"    final String filePath \u003d \"C:\\\\Users\\\\Admin\\\\Documents\\\\GitHub\\\\javaFX\\\\src\\\\main\\\\java\\\\data\\\\tasks.txt\";","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"mavericktjj"},"content":"    private TextField userInput;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"mavericktjj"},"content":"    private Button sendButton;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"mavericktjj"},"content":"    private Scene scene;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"mavericktjj"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"mavericktjj"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"mavericktjj"},"content":"    public Duke() {","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"mavericktjj"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"mavericktjj"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"mavericktjj"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"mavericktjj"},"content":"        Storage.loadTasksFromFile(filePath, taskList);","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"mavericktjj"},"content":"        assert ui !\u003d null \u0026\u0026 taskList !\u003d null \u0026\u0026 storage !\u003d null : \"Critical components must not be null\";","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-02-16"},{"lineNumber":39,"author":{"gitId":"mavericktjj"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"mavericktjj"},"content":"        assert userInput !\u003d null : \"User input field must not be null\";","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"mavericktjj"},"content":"        if (userInput.getText().toLowerCase().equals(\"bye\")) {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"mavericktjj"},"content":"            // Terminate the application","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"mavericktjj"},"content":"            System.out.println(\"System is exiting..\");","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"mavericktjj"},"content":"            System.exit(0);","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-02-16"},{"lineNumber":46,"author":{"gitId":"mavericktjj"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"mavericktjj"},"content":"        Command command \u003d Parser.parse(userInput.getText().toLowerCase());","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"mavericktjj"},"content":"        String response \u003d command.execute(taskList, ui, storage);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"mavericktjj"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"mavericktjj"},"content":"        Label dukeText \u003d new Label(getResponse(response));","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"mavericktjj"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"mavericktjj"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"mavericktjj"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"mavericktjj"},"content":"        );","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"mavericktjj"},"content":"        userInput.clear();","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"mavericktjj"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"mavericktjj"},"content":"        assert input !\u003d null : \"Input must not be null\";","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"mavericktjj"},"content":"        return input;","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-02-23"},{"lineNumber":65,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":66,"author":{"gitId":"mavericktjj"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"mavericktjj"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"mavericktjj"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"mavericktjj"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"mavericktjj"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"mavericktjj"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"mavericktjj"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"mavericktjj"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"mavericktjj"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"mavericktjj"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"mavericktjj"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"mavericktjj"},"content":"        stage.setScene(scene);","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"mavericktjj"},"content":"        stage.setResizable(false);","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"mavericktjj"},"content":"        stage.setMinWidth(scene.getRoot().prefWidth(Region.USE_COMPUTED_SIZE));","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"mavericktjj"},"content":"        stage.setMinHeight(scene.getRoot().prefHeight(Region.USE_COMPUTED_SIZE));","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"mavericktjj"},"content":"        VBox.setVgrow(dialogContainer, Priority.ALWAYS);","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":89,"author":{"gitId":"mavericktjj"},"content":"        stage.show();","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"mavericktjj"},"content":"        //...","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"mavericktjj"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"mavericktjj"},"content":"        Label welcomeLabel \u003d new Label(ui.showWelcomeMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"mavericktjj"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeLabel, new ImageView(duke)));","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"mavericktjj"},"content":"        Label helpLabel \u003d new Label(helpPage.show());","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"mavericktjj"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(helpLabel, new ImageView(duke)));","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"mavericktjj"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"mavericktjj"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"mavericktjj"},"content":"//        stage.setResizable();","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"mavericktjj"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"mavericktjj"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"mavericktjj"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"mavericktjj"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"mavericktjj"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"mavericktjj"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"mavericktjj"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"mavericktjj"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"mavericktjj"},"content":"        //You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"mavericktjj"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"mavericktjj"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"mavericktjj"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"mavericktjj"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"mavericktjj"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"mavericktjj"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"mavericktjj"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"mavericktjj"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"mavericktjj"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"mavericktjj"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"mavericktjj"},"content":"            handleUserInput();","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"mavericktjj"},"content":"        });","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"mavericktjj"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"mavericktjj"},"content":"            handleUserInput();","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"mavericktjj"},"content":"        });","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-02-23"},{"lineNumber":137,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-02-08"},{"lineNumber":139,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-02-08"}],"authorContributionMap":{"mavericktjj":141}},{"path":"src/main/java/ErrorHandling.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":" * Utility class for handling errors and performing validation checks in the Duke application.","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"public class ErrorHandling {","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":"     * Checks if a task with the specified description already exists in the task list.","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"     * @param desc     The description of the task to be checked for duplication.","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"     * @param taskList The task list to search for duplicate descriptions.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"     * @return true if a task with the same description exists in the task list, false otherwise.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"    public static boolean checkDuplicate(String desc, TaskList taskList) {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"            if (task !\u003d null \u0026\u0026 task.description.equals(desc)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"                return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"        return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"mavericktjj"},"content":"     * Displays a message indicating that the index is out of range.","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"mavericktjj"},"content":"    public static void outOfRange() {","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"mavericktjj"},"content":"        System.out.println(\"Index out of range\");","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"mavericktjj"},"content":"     * Displays a message indicating that the input has incorrect syntax.","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"mavericktjj"},"content":"    public static void wrongSyntax() {","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"mavericktjj"},"content":"        System.out.println(\"Input has wrong syntax, please try again.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"mavericktjj":40}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":" * Represents an event task with a start time and end time in the Duke application.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":" * Extends the Task class.","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"public class Event extends Task {","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"     * Constructs an Event object with the specified description, start time, and end time.","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"     * @param description The description of the event.","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"     * @param startTime   The start time of the event.","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"     * @param endTime     The end time of the event.","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"    public Event(String description, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"        assert endTime.isAfter(startTime) : \"End time must be after start time\";","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"mavericktjj"},"content":"     * Returns a string representation of the Event object.","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"mavericktjj"},"content":"     * Format: [E][Status] Description (from: Start Time to: End Time)","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"mavericktjj"},"content":"     * @return A string representation of the Event object.","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"mavericktjj"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"mavericktjj"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"mavericktjj"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatDateTime(startTime) + \" to: \" + formatDateTime(endTime) + \")\";","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"mavericktjj"},"content":"     * Formats the LocalDateTime object into a string with a specific format.","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"mavericktjj"},"content":"     * @param dateTime The LocalDateTime object to be formatted.","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"mavericktjj"},"content":"     * @return A string representation of the LocalDateTime object in the specified format.","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"mavericktjj"},"content":"    private String formatDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"mavericktjj"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"mavericktjj":46}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":" * Represents a command to find tasks based on search parameters.","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":" * This command searches for tasks in the task list that match the specified search parameter.","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":" * Implements the Command interface, allowing it to be executed as part of the Duke application.","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"    private final Object searchParameter; // The search parameter used to find tasks.","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"     * Constructs a FindCommand object with the specified search parameter.","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"     * @param searchParameter The search parameter used to find tasks. It can be a String representing","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"     *                        the description to match, or a LocalDate representing the date to match.","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"    public FindCommand(Object searchParameter) {","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"        this.searchParameter \u003d searchParameter;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"mavericktjj"},"content":"     * Executes the find command, searching for tasks in the task list based on the search parameter.","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"mavericktjj"},"content":"     * If the search parameter is a String, it searches for tasks whose descriptions contain the specified string.","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"mavericktjj"},"content":"     * If the search parameter is a LocalDate, it searches for tasks with deadlines or events happening on the specified date.","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"mavericktjj"},"content":"     * Displays matched tasks or a message indicating no matching tasks found.","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"mavericktjj"},"content":"     * @param taskList The TaskList containing all tasks.","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"mavericktjj"},"content":"     * @param ui       The Ui object for interacting with the user.","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"mavericktjj"},"content":"     * @param storage  The Storage object for saving tasks to a file.","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"mavericktjj"},"content":"     * @return","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"mavericktjj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"mavericktjj"},"content":"        // Create a list to store matched tasks","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"mavericktjj"},"content":"        List\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"mavericktjj"},"content":"        // Sort the task list using a custom comparator","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"mavericktjj"},"content":"        taskList.tasks.sort(new TaskComparator());","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"mavericktjj"},"content":"        // Check if the task list is empty","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"mavericktjj"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"mavericktjj"},"content":"            System.out.println(\"No tasks added yet.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"mavericktjj"},"content":"        } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"mavericktjj"},"content":"            // Iterate through the task list to find matching tasks","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"mavericktjj"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"mavericktjj"},"content":"                if (searchParameter instanceof String) {","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"mavericktjj"},"content":"                    // If the search parameter is a String, search by description","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"mavericktjj"},"content":"                    String inputDescription \u003d (String) this.searchParameter;","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"mavericktjj"},"content":"                    if (taskList.get(i).description.contains(inputDescription)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"mavericktjj"},"content":"                        matchedTasks.add(taskList.get(i));","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"mavericktjj"},"content":"                    }","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"mavericktjj"},"content":"                }","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"mavericktjj"},"content":"                if (searchParameter instanceof LocalDate) {","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"mavericktjj"},"content":"                    // If the search parameter is a LocalDate, search by deadline or event date","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"mavericktjj"},"content":"                    if (taskList.get(i) instanceof Deadline) {","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"mavericktjj"},"content":"                        LocalDate date \u003d (LocalDate) this.searchParameter;","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"mavericktjj"},"content":"                        int comparison \u003d date.compareTo(((Deadline) taskList.get(i)).by.toLocalDate());","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"mavericktjj"},"content":"                        if (comparison \u003d\u003d 0) {","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"mavericktjj"},"content":"                            matchedTasks.add(taskList.get(i));","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"mavericktjj"},"content":"                        }","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"mavericktjj"},"content":"                    }","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"mavericktjj"},"content":"                    if (taskList.get(i) instanceof Event) {","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"mavericktjj"},"content":"                        LocalDate fromDate \u003d ((Event) taskList.get(i)).startTime.toLocalDate();","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"mavericktjj"},"content":"                        LocalDate toDate \u003d ((Event) taskList.get(i)).endTime.toLocalDate();","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"mavericktjj"},"content":"                        LocalDate date \u003d (LocalDate) this.searchParameter;","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"mavericktjj"},"content":"                        boolean isInRange \u003d (date.isEqual(fromDate) || date.isAfter(fromDate)) \u0026\u0026 (date.isEqual(toDate) || date.isBefore(toDate));","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"mavericktjj"},"content":"                        if (isInRange) {","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"mavericktjj"},"content":"                            matchedTasks.add(taskList.get(i));","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"mavericktjj"},"content":"                        }","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"mavericktjj"},"content":"                    }","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"mavericktjj"},"content":"                }","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"mavericktjj"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"mavericktjj"},"content":"            // Display the matched tasks or a message indicating no matching tasks found","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"mavericktjj"},"content":"            StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"mavericktjj"},"content":"            if (!matchedTasks.isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"mavericktjj"},"content":"                stringBuilder.append(\"Matching tasks found:\\n\");","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"mavericktjj"},"content":"                for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"mavericktjj"},"content":"                    stringBuilder.append(String.format(\"%d. %s\\n\", i + 1, matchedTasks.get(i)));","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"mavericktjj"},"content":"                }","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"mavericktjj"},"content":"                return stringBuilder.toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"mavericktjj"},"content":"            } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"mavericktjj"},"content":"                stringBuilder.append(\"No matching tasks found.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"mavericktjj"},"content":"                return stringBuilder.toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"mavericktjj"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"mavericktjj"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"mavericktjj"},"content":"        return null;","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"mavericktjj":94}},{"path":"src/main/java/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":" * Represents a command to handle invalid user input in the Duke application.","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":" * Implements the Command interface.","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"public class InvalidCommand implements Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"     * Executes the command to handle invalid user input.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"     * Displays a message indicating that the command is invalid.","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"     * @param taskList The task list (not used).","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"     * @param ui       The user interface to display the invalid command message.","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"     * @param storage  The storage (not used).","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"     * @return","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"        return ui.showInvalidCommandMessage();","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"mavericktjj":25}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"import javafx.application.Application;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":"public class Launcher {","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"        Application.launch(Duke.class, args);","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"mavericktjj":10}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":" * Represents a command to list all tasks in the Duke application.","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":" * Implements the Command interface.","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"     * Executes the command to list all tasks.","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"     * Displays the list of tasks through the user interface.","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"     * @param taskList The task list to be listed.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"     * @param ui       The user interface to display the list of tasks.","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"     * @param storage  The storage (not used).","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"     * @return","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"        return  ui.showTaskList(taskList);","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"mavericktjj":24}},{"path":"src/main/java/MarkAsDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":" * Represents a command to mark a task as done in the Duke application.","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":" * Implements the Command interface.","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"public class MarkAsDoneCommand implements Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":"    private final int index;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"    public MarkAsDoneCommand(int index) {","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"     * Constructs a MarkAsDoneCommand object with the specified index.","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"     * @param index The index of the task to be marked as done.","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"     * Executes the command to mark the task as done.","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"     * If the index is valid, marks the task at the specified index as done,","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"     * displays a confirmation message, and saves the updated task list to storage.","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"     * If the index is out of range, displays an error message.","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"     * @param taskList The task list containing the task to be marked as done.","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"     * @param ui       The user interface to display messages.","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"mavericktjj"},"content":"     * @param storage  The storage to save the updated task list.","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"mavericktjj"},"content":"     * @return","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"mavericktjj"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"mavericktjj"},"content":"        assert taskList.get(index-1) !\u003d null : \"Task does not exist!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"mavericktjj"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"mavericktjj"},"content":"            Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"mavericktjj"},"content":"            task.markAsDone();","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"mavericktjj"},"content":"            String concat \u003d ui.showTaskMarkedAsDone(task);","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"mavericktjj"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"mavericktjj"},"content":"            return concat;","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"mavericktjj"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"mavericktjj"},"content":"            ErrorHandling.outOfRange();","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"mavericktjj"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"mavericktjj"},"content":"        return null;","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"mavericktjj":41}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":"import java.util.Locale;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"public class Parser {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"     * Parses user input and returns the corresponding command.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"     * @param input The user input string to be parsed.","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"     * @return A Command object representing the parsed command.","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"        String[] tokens \u003d input.split(\" \", 2);","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"        String commandWord \u003d tokens[0].toLowerCase();","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"        String argument \u003d tokens.length \u003e 1 ? tokens[1] : null;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"        try {","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"            switch (commandWord) {","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"                case \"find\":","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"                    try {","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"mavericktjj"},"content":"                        LocalDate date \u003d parseDate(tokens[1]);","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"mavericktjj"},"content":"                        return new FindCommand(date);","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"mavericktjj"},"content":"                    } catch (DateTimeParseException e1) {","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"mavericktjj"},"content":"                        return new FindCommand(argument);","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"mavericktjj"},"content":"                    } catch (ArrayIndexOutOfBoundsException e2) {","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"mavericktjj"},"content":"                        System.out.println(\"Please provide a valid search parameter.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"mavericktjj"},"content":"                    }","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"mavericktjj"},"content":"                case \"list\":","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"mavericktjj"},"content":"                    return new ListCommand();","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"mavericktjj"},"content":"                case \"todo\":","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"mavericktjj"},"content":"                    return new AddTaskCommand(new Todo(argument));","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"mavericktjj"},"content":"                case \"deadline\":","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"mavericktjj"},"content":"                    String[] deadlineArgs \u003d input.split(\" /by \", 2);","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"mavericktjj"},"content":"                    try {","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"mavericktjj"},"content":"                        LocalDate by \u003d parseDate(deadlineArgs[1].trim());","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"mavericktjj"},"content":"                        return new AddTaskCommand(new Deadline(deadlineArgs[0].replace(\"deadline \", \"\"), by.atStartOfDay()));","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"mavericktjj"},"content":"                    } catch (DateTimeParseException e1) {","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"mavericktjj"},"content":"                        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"mavericktjj"},"content":"                            LocalDateTime by \u003d parseDateTime(deadlineArgs[1].trim());","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"mavericktjj"},"content":"                            return new AddTaskCommand(new Deadline(deadlineArgs[0].replace(\"deadline \", \"\"), by));","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"mavericktjj"},"content":"                        } catch (DateTimeParseException e2) {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"mavericktjj"},"content":"                            System.out.println(\"Invalid date syntax.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"mavericktjj"},"content":"                        }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"mavericktjj"},"content":"                    }","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"mavericktjj"},"content":"                case \"event\":","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"mavericktjj"},"content":"                    String[] eventArgs \u003d input.split(\"\\\\s+/from\\\\s+|\\\\s+/to\\\\s+\");","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"mavericktjj"},"content":"                    try {","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"mavericktjj"},"content":"                        LocalDate from \u003d parseDate(eventArgs[1].trim());","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"mavericktjj"},"content":"                        LocalDate to \u003d parseDate(eventArgs[2].trim());","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"mavericktjj"},"content":"                        return new AddTaskCommand(new Event(eventArgs[0].replace(\"event \", \"\"), from.atStartOfDay(), to.atStartOfDay()));","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"mavericktjj"},"content":"                    } catch (DateTimeParseException e1) {","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"mavericktjj"},"content":"                        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"mavericktjj"},"content":"                            LocalDateTime from \u003d parseDateTime(eventArgs[1].trim());","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"mavericktjj"},"content":"                            LocalDateTime to \u003d parseDateTime(eventArgs[2].trim());","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"mavericktjj"},"content":"                            return new AddTaskCommand(new Event(eventArgs[0].replace(\"event \", \"\"), from, to));","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"mavericktjj"},"content":"                        } catch (DateTimeParseException e2) {","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"mavericktjj"},"content":"                            System.out.println(\"Invalid date syntax.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"mavericktjj"},"content":"                        }","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"mavericktjj"},"content":"                    }","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"mavericktjj"},"content":"                case \"mark\":","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"mavericktjj"},"content":"                    return new MarkAsDoneCommand(Integer.parseInt(argument));","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"mavericktjj"},"content":"                case \"delete\":","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"mavericktjj"},"content":"                    return new DeleteTaskCommand(Integer.parseInt(argument));","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"mavericktjj"},"content":"                default:","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"mavericktjj"},"content":"                    return new InvalidCommand();","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"mavericktjj"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"mavericktjj"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"mavericktjj"},"content":"            ErrorHandling.wrongSyntax();","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"mavericktjj"},"content":"            return new InvalidCommand();","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"mavericktjj"},"content":"        } catch (NumberFormatException e1) {","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"mavericktjj"},"content":"            return new InvalidCommand();","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"mavericktjj"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"mavericktjj"},"content":"     * Parses a task data string and returns the corresponding Task object.","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"mavericktjj"},"content":"     * @param line The task data string to be parsed.","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"mavericktjj"},"content":"     * @return A Task object representing the parsed task data.","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"mavericktjj"},"content":"    public static Task parseTaskFromString(String line) {","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"mavericktjj"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"mavericktjj"},"content":"        String taskType \u003d parts[0].trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"mavericktjj"},"content":"        String description \u003d parts[1].trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"mavericktjj"},"content":"        switch (taskType) {","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"mavericktjj"},"content":"            case \"T\":","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"mavericktjj"},"content":"                return new Todo(description);","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"mavericktjj"},"content":"            case \"D\":","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"mavericktjj"},"content":"                try {","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"mavericktjj"},"content":"                    LocalDate by \u003d parseAsLocalDate(parts[3].trim());","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"mavericktjj"},"content":"                    return new Deadline(description, by.atStartOfDay());","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"mavericktjj"},"content":"                } catch (DateTimeParseException e1) {","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"mavericktjj"},"content":"                    try {","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"mavericktjj"},"content":"                        LocalDateTime by \u003d parseAsLocalDateTime(parts[3].trim());","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"mavericktjj"},"content":"                        return new Deadline(description, by);","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"mavericktjj"},"content":"                    } catch (DateTimeParseException e2) {","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"mavericktjj"},"content":"                        System.out.println(\"Invalid date syntax\");","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"mavericktjj"},"content":"                    }","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"mavericktjj"},"content":"                }","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"mavericktjj"},"content":"            case \"E\":","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"mavericktjj"},"content":"                try {","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"mavericktjj"},"content":"                    LocalDate from \u003d parseAsLocalDate(parts[3].trim());","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"mavericktjj"},"content":"                    LocalDate to \u003d parseAsLocalDate(parts[4].trim());","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"mavericktjj"},"content":"                    return new Event(description, from.atStartOfDay(), to.atStartOfDay());","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"mavericktjj"},"content":"                } catch (DateTimeParseException e1) {","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"mavericktjj"},"content":"                    try {","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"mavericktjj"},"content":"                        LocalDateTime from \u003d parseAsLocalDateTime(parts[3].trim());","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"mavericktjj"},"content":"                        LocalDateTime to \u003d parseAsLocalDateTime(parts[4].trim());","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"mavericktjj"},"content":"                        return new Event(description, from, to);","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"mavericktjj"},"content":"                    } catch (DateTimeParseException e2) {","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"mavericktjj"},"content":"                        System.out.println(\"Invalid date syntax\");","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"mavericktjj"},"content":"                    }","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"mavericktjj"},"content":"                }","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"mavericktjj"},"content":"            default:","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"mavericktjj"},"content":"                throw new IllegalArgumentException(\"Unknown task type: \" + taskType);","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"mavericktjj"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"mavericktjj"},"content":"     * Parses a date string into a LocalDateTime object.","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"mavericktjj"},"content":"     * @param date The date string to be parsed.","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"mavericktjj"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"mavericktjj"},"content":"     * @throws DateTimeParseException If the date string cannot be parsed.","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"mavericktjj"},"content":"    public static LocalDateTime parseDateTime(String date) throws DateTimeParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"mavericktjj"},"content":"        List\u003cString\u003e dateTimePatterns \u003d new ArrayList\u003c\u003e(List.of(\"M/d/yyyy HHmm\", \"MM/dd/yyyy HHmm\", \"yyyy-MM-dd HHmm\", \"HHmm dd/MM/yyyy\", \"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"mavericktjj"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"mavericktjj"},"content":"            for (String pattern : dateTimePatterns) {","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"mavericktjj"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern, Locale.ENGLISH);","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"mavericktjj"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(date, formatter);","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"mavericktjj"},"content":"                return dateTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"mavericktjj"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"mavericktjj"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"mavericktjj"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"mavericktjj"},"content":"        throw new DateTimeParseException(\"Unable to parse the date string\", date, 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"mavericktjj"},"content":"     * Parses a date string into a LocalDate object.","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"mavericktjj"},"content":"     * @param date The date string to be parsed.","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"mavericktjj"},"content":"     * @return A LocalDate object representing the parsed date.","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"mavericktjj"},"content":"     * @throws DateTimeParseException If the date string cannot be parsed.","lastModifiedDate":"2024-03-25"},{"lineNumber":155,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"mavericktjj"},"content":"    public static LocalDate parseDate(String date) throws DateTimeParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"mavericktjj"},"content":"        List\u003cString\u003e datePatterns \u003d List.of(\"MM/dd/yyyy\", \"MMMM dd yyyy\", \"dd MMMM yyyy\", \"yyyy MMMM dd\", \"yyyy/MM/dd\", \"yyyy-MM-dd\", \"dd/MM/yyyy\", \"dd/M/yyyy\");","lastModifiedDate":"2024-04-01"},{"lineNumber":158,"author":{"gitId":"mavericktjj"},"content":"        for (String pattern : datePatterns) {","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"mavericktjj"},"content":"            try {","lastModifiedDate":"2024-03-25"},{"lineNumber":160,"author":{"gitId":"mavericktjj"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern, Locale.ENGLISH);","lastModifiedDate":"2024-03-25"},{"lineNumber":161,"author":{"gitId":"mavericktjj"},"content":"                LocalDate parsedDate \u003d LocalDate.parse(date.trim(), formatter);","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"mavericktjj"},"content":"                return parsedDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":163,"author":{"gitId":"mavericktjj"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"mavericktjj"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"mavericktjj"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":166,"author":{"gitId":"mavericktjj"},"content":"        throw new DateTimeParseException(\"Unable to parse the date string\", date, 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":168,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":169,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":170,"author":{"gitId":"mavericktjj"},"content":"     * Parses a string into a LocalDate object using ISO_LOCAL_DATE format.","lastModifiedDate":"2024-03-25"},{"lineNumber":171,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":172,"author":{"gitId":"mavericktjj"},"content":"     * @param inputString The string to be parsed.","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"mavericktjj"},"content":"     * @return A LocalDate object representing the parsed date.","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"mavericktjj"},"content":"     * @throws DateTimeParseException If the string cannot be parsed.","lastModifiedDate":"2024-03-25"},{"lineNumber":175,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":176,"author":{"gitId":"mavericktjj"},"content":"    public static LocalDate parseAsLocalDate(String inputString) throws DateTimeParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":177,"author":{"gitId":"mavericktjj"},"content":"        return LocalDate.parse(inputString, DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":179,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":180,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":181,"author":{"gitId":"mavericktjj"},"content":"     * Parses a string into a LocalDateTime object using ISO_LOCAL_DATE_TIME format.","lastModifiedDate":"2024-03-25"},{"lineNumber":182,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":183,"author":{"gitId":"mavericktjj"},"content":"     * @param inputString The string to be parsed.","lastModifiedDate":"2024-03-25"},{"lineNumber":184,"author":{"gitId":"mavericktjj"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2024-03-25"},{"lineNumber":185,"author":{"gitId":"mavericktjj"},"content":"     * @throws DateTimeParseException If the string cannot be parsed.","lastModifiedDate":"2024-03-25"},{"lineNumber":186,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":187,"author":{"gitId":"mavericktjj"},"content":"    public static LocalDateTime parseAsLocalDateTime(String inputString) throws DateTimeParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":188,"author":{"gitId":"mavericktjj"},"content":"        return LocalDateTime.parse(inputString, DateTimeFormatter.ISO_LOCAL_DATE_TIME);","lastModifiedDate":"2024-03-25"},{"lineNumber":189,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":190,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":191,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"mavericktjj":191}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"import java.io.File;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":"public class Storage {","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"    private final String filePath;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"     * @param filePath The file path where tasks are stored.","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"     * Loads tasks from a file and adds them to the given task list.","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"     * @param filePath The file path to load tasks from.","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"mavericktjj"},"content":"     * @param taskList The task list to which loaded tasks will be added.","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"mavericktjj"},"content":"    public static void loadTasksFromFile(String filePath, TaskList taskList) {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"mavericktjj"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"mavericktjj"},"content":"        if (file.exists()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"mavericktjj"},"content":"            try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"mavericktjj"},"content":"                while (scanner.hasNextLine()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"mavericktjj"},"content":"                    String line \u003d scanner.nextLine();","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"mavericktjj"},"content":"                    Task task \u003d Parser.parseTaskFromString(line);","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"mavericktjj"},"content":"                    taskList.add(task);","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"mavericktjj"},"content":"                }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"mavericktjj"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"mavericktjj"},"content":"                System.out.println(\"Error reading the file\");","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"mavericktjj"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"mavericktjj"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"mavericktjj"},"content":"     * Saves tasks from the given task list to the file.","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"mavericktjj"},"content":"     * @param taskList The task list containing tasks to be saved.","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"mavericktjj"},"content":"    public void saveTasks(TaskList taskList) {","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"mavericktjj"},"content":"        try (FileWriter writer \u003d new FileWriter(filePath)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"mavericktjj"},"content":"            for (Task task : taskList.tasks) {","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"mavericktjj"},"content":"                String data \u003d TaskList.toFileStrings(task);","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"mavericktjj"},"content":"                writer.write(data + System.lineSeparator());","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"mavericktjj"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"mavericktjj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"mavericktjj"},"content":"            System.out.println(\"Error saving tasks to file\");","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"mavericktjj"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"mavericktjj":64}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"public class Task {","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"    protected String description;","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"    protected TaskType type;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"     * Constructs a Task object with the specified description.","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"    public Task(String description, TaskType type) {","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"        assert description !\u003d null : \"description cannot be empty!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"        assert type !\u003d null : \"task type is null\";","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"mavericktjj"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"mavericktjj"},"content":"     * Returns a string representation of the Task object.","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"mavericktjj"},"content":"     * @return A string representing the task, including its completion status and description.","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"mavericktjj"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"mavericktjj"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"mavericktjj"},"content":"        return (isDone ? \"[X] \" : \"[] \") + description;","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"mavericktjj":40}},{"path":"src/main/java/TaskComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"public class TaskComparator implements Comparator\u003cTask\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":"    public int compare(Task task1, Task task2) {","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":"        // Compare based on task type","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"        int typeComparison \u003d task1.type.compareTo(task2.type);","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"        if (typeComparison !\u003d 0) {","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"            return typeComparison;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"        // If tasks have the same type, compare based on deadlines","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"        if (task1 instanceof Deadline \u0026\u0026 task2 instanceof Deadline) {","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"            LocalDate dueDate1 \u003d ((Deadline) task1).by.toLocalDate();","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"            LocalDate dueDate2 \u003d ((Deadline) task2).by.toLocalDate();","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"            return dueDate1.compareTo(dueDate2);","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"        if (task1 instanceof Event \u0026\u0026 task2 instanceof Event) {","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"            LocalDate dueDate1 \u003d ((Event) task1).startTime.toLocalDate();","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"            LocalDate dueDate2 \u003d ((Event) task2).startTime.toLocalDate();","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"            return dueDate1.compareTo(dueDate2);","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"mavericktjj"},"content":"        // If tasks have different types, no need to compare deadlines","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"mavericktjj"},"content":"        return 0;","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"mavericktjj":29}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"public class TaskList {","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"    final List\u003cTask\u003e tasks;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"     * Constructs an empty TaskList.","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"    public TaskList() {","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"    public void add(Task task) {","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"        tasks.add(task);","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"mavericktjj"},"content":"     * Removes the task at the specified index from the task list.","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"mavericktjj"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"mavericktjj"},"content":"     * @return The removed task.","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"mavericktjj"},"content":"    public Task remove(int index) {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"mavericktjj"},"content":"        return tasks.remove(index);","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"mavericktjj"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"mavericktjj"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"mavericktjj"},"content":"    public int size() {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"mavericktjj"},"content":"        return tasks.size();","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"mavericktjj"},"content":"     * Returns the task at the specified index from the task list.","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"mavericktjj"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"mavericktjj"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"mavericktjj"},"content":"    public Task get(int index) {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"mavericktjj"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"mavericktjj"},"content":"     * Converts a Task object to a string representation suitable for writing to a file.","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"mavericktjj"},"content":"     * @param task The task to be converted.","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"mavericktjj"},"content":"     * @return A string representation of the task for writing to a file.","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"mavericktjj"},"content":"    public static String toFileStrings(Task task) {","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"mavericktjj"},"content":"        if (task instanceof Deadline deadline) {","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"mavericktjj"},"content":"            return \"D|\" + deadline.description + \"|\" + deadline.isDone + \"|\" + deadline.by;","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"mavericktjj"},"content":"        } else if (task instanceof Event event) {","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"mavericktjj"},"content":"            return \"E|\" + event.description + \"|\" + event.isDone + \"|\" + event.startTime + \"|\" + event.endTime;","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"mavericktjj"},"content":"        } else if (task instanceof Todo todo) {","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"mavericktjj"},"content":"            return \"T|\" + todo.description + \"|\" + todo.isDone;","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"mavericktjj"},"content":"        } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"mavericktjj"},"content":"            return \"\";","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"mavericktjj"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"mavericktjj":74}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"public enum TaskType {","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"    TODO, EVENT, DEADLINE","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"mavericktjj":4}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"     * Constructs a Todo object with the specified description.","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"     * Returns a string representation of the Todo object.","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"     * @return A string representing the todo task, including its completion status and description.","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"mavericktjj":21}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":" * The Ui class handles interactions with the user interface of the application.","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"public class Ui {","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":"     * Displays a welcome message when the application starts.","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"     * @return A welcome message.","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"    public String showWelcomeMessage() {","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"        return (\"Hello! I\u0027m Maverick!\" + \"\\n\" + \"What can i do for you?\");","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"     * @param taskList The task list to be displayed.","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"     * @return A string representing the task list.","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"    public String showTaskList(TaskList taskList) {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"        taskList.tasks.sort(new TaskComparator());","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"        if (taskList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"            return (\"No tasks added yet.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"mavericktjj"},"content":"        } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"mavericktjj"},"content":"            StringBuilder concat \u003d new StringBuilder(\"Tasks:\");","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"mavericktjj"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"mavericktjj"},"content":"                int j \u003d i + 1;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"mavericktjj"},"content":"                concat.append(\"\\n\").append(j).append(\". \").append(taskList.get(i));","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"mavericktjj"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"mavericktjj"},"content":"            return concat.toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"mavericktjj"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"mavericktjj"},"content":"     * Displays a message indicating that a task has been added.","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"mavericktjj"},"content":"     * @param task       The task that has been added.","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"mavericktjj"},"content":"     * @param totalTasks The total number of tasks after adding the new task.","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"mavericktjj"},"content":"     * @return A message indicating the task addition.","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"mavericktjj"},"content":"    public String showTaskAdded(Task task, int totalTasks) {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"mavericktjj"},"content":"        return \"Got it, I\u0027ve added this task:\" + \"\\n\" + task + \"\\n\" + \"Now you have \" + totalTasks + \" tasks in the list.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"mavericktjj"},"content":"     * Displays a message indicating that a task has been marked as done.","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"mavericktjj"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"mavericktjj"},"content":"     * @return A message indicating the task completion.","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"mavericktjj"},"content":"    public String showTaskMarkedAsDone(Task task) {","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"mavericktjj"},"content":"        return \"Nice! I\u0027ve marked this task as done: \" + \"\\n\" + task;","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"mavericktjj"},"content":"     * Displays a message indicating that a task has been deleted.","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"mavericktjj"},"content":"     * @param task           The task that has been deleted.","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"mavericktjj"},"content":"     * @param remainingTasks The number of tasks remaining after deleting the task.","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"mavericktjj"},"content":"     * @return A message indicating the task deletion.","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"mavericktjj"},"content":"    public String showTaskDeleted(Task task, int remainingTasks) {","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"mavericktjj"},"content":"        return \"Noted. I\u0027ve removed this task: \" + \"\\n\" + \"Now you have \" + remainingTasks + \" in the list.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"mavericktjj"},"content":"     * Displays a goodbye message when the application exits.","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"mavericktjj"},"content":"     * @return A goodbye message.","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"mavericktjj"},"content":"    public String showGoodbyeMessage() {","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"mavericktjj"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"mavericktjj"},"content":"     * Displays a message indicating that the user inputted an invalid command.","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"mavericktjj"},"content":"     * @return An invalid command message.","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"mavericktjj"},"content":"    public String showInvalidCommandMessage() {","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"mavericktjj"},"content":"        return \"Sorry, I don\u0027t understand that command.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"mavericktjj"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"mavericktjj"},"content":"     * Displays a message indicating that a task description already exists in the list.","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"mavericktjj"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"mavericktjj"},"content":"     * @return A message indicating duplicate task description.","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"mavericktjj"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"mavericktjj"},"content":"    public String showDuplicateMessage() {","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"mavericktjj"},"content":"        return \"Description already exists in the list\";","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"mavericktjj":94}},{"path":"src/main/java/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"T|task1|false","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"E|function1|false|2019-10-15T00:00|2019-10-20T00:00","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"E|function2|false|2020-12-15T00:00|2020-12-20T00:00","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"D|return book|false|2015-10-19T00:00","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"E|function3|false|2019-01-20T00:00|2019-02-20T00:00","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"mavericktjj":5}},{"path":"src/main/java/helpPage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"public class helpPage {","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"    public static String show() {","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":"        stringBuilder.append(\"Welcome to Duke!\\n\");","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":"        stringBuilder.append(\"Duke is a simple task management application.\\n\");","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"        stringBuilder.append(\"Here are the available commands:\\n\");","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"        stringBuilder.append(\"- help: shows a help page, the one you\u0027re seeing now!\\n\");","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"        stringBuilder.append(\"- todo \u003cdescription\u003e: Add a new todo task\\n\");","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"        stringBuilder.append(\"- event \u003cdescription\u003e /from \u003cstartDateTime\u003e /to \u003cendDateTime\u003e: Add a new event task\\n\");","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"        stringBuilder.append(\"- deadline \u003cdescription\u003e /by \u003cdueDateTime\u003e: Add a new deadline task\\n\");","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"        stringBuilder.append(\"- list: List all tasks\\n\");","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"        stringBuilder.append(\"- find \u003cdescription\u003e or \u003cdate\u003e: find tasks that contains the description given or tasks that occurs in range of date given\\n\");","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"        stringBuilder.append(\"- mark \u003ctaskNumber\u003e: Mark a task as done\\n\");","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"        stringBuilder.append(\"- delete \u003ctaskNumber\u003e: Delete a task\\n\");","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"        stringBuilder.append(\"- bye: Exit the application\\n\");","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"mavericktjj":21}},{"path":"src/test/java/JunitTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mavericktjj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"mavericktjj"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"mavericktjj"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"mavericktjj"},"content":"public class JunitTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"mavericktjj"},"content":"//    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"mavericktjj"},"content":"//    public void testInitialization() {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"mavericktjj"},"content":"//        Duke duke \u003d new Duke(\"tasks.txt\");","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"mavericktjj"},"content":"//        assertNotNull(duke);","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"mavericktjj"},"content":"//        assertNotNull(duke.ui);","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"mavericktjj"},"content":"//        assertNotNull(duke.taskList);","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"mavericktjj"},"content":"//        assertNotNull(duke.storage);","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"mavericktjj"},"content":"//    }","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"mavericktjj"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"mavericktjj"},"content":"    public void testCommandParsing() {","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"mavericktjj"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"mavericktjj"},"content":"        Command todoCommand \u003d Parser.parse(\"todo taskExample\");","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"mavericktjj"},"content":"        assertNotNull(todoCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"mavericktjj"},"content":"        assertInstanceOf(AddTaskCommand.class, todoCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"mavericktjj"},"content":"        todoCommand.execute(taskList, new Ui(), new Storage(\"\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"mavericktjj"},"content":"        assertEquals( 1, taskList.size());","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"mavericktjj"},"content":"        Command eventCommand \u003d Parser.parse(\"event eventExample /from 12/12/2020 1200 /to 12/12/2020 1600\");","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"mavericktjj"},"content":"        assertNotNull(eventCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"mavericktjj"},"content":"        assertInstanceOf(AddTaskCommand.class, eventCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"mavericktjj"},"content":"        eventCommand.execute(taskList, new Ui(), new Storage(\"\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"mavericktjj"},"content":"        assertEquals(2, taskList.size());","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"mavericktjj"},"content":"        Command deadlineCommand \u003d Parser.parse(\"deadline deadlineExample /by 12/12/2020 1200\");","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"mavericktjj"},"content":"        assertNotNull(deadlineCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"mavericktjj"},"content":"        assertInstanceOf(AddTaskCommand.class, deadlineCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"mavericktjj"},"content":"        deadlineCommand.execute(taskList, new Ui(), new Storage(\"\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"mavericktjj"},"content":"        assertEquals(3,taskList.size());","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"mavericktjj"},"content":"        Command listCommand \u003d Parser.parse(\"list\");","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"mavericktjj"},"content":"        assertNotNull(listCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"mavericktjj"},"content":"        assertInstanceOf(ListCommand.class, listCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"mavericktjj"},"content":"        Command deleteCommand \u003d Parser.parse(\"delete 3\");","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"mavericktjj"},"content":"        assertNotNull(deleteCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"mavericktjj"},"content":"        assertInstanceOf(DeleteTaskCommand.class, deleteCommand);","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"mavericktjj"},"content":"        deleteCommand.execute(taskList, new Ui(), new Storage(\"\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"mavericktjj"},"content":"        assertEquals(2,taskList.size());","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"mavericktjj"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"mavericktjj"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"mavericktjj"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"mavericktjj":56}}]
