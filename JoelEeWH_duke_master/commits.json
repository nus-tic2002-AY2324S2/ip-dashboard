{"authorDailyContributionsMap":{"JoelEeWH":[{"date":"2024-01-31","commitResults":[{"hash":"52ba52aa8ece3a67f6dd0f9adee83858822eac6b","isMergeCommit":false,"messageTitle":"Level - 0 Implementation (1) Assigned a variable to hold chatbot name (2) Create 2 print statements (3) Call System exit","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}},{"hash":"463f2c7e385e81360e8e0581162c8f5bc922954b","isMergeCommit":false,"messageTitle":"Level 1 Implementation (1) Created Gui class to handle I/O operations (1a) Method welcome(): Command list contains (1) List, (2) Bye","messageBody":"(2) Edited Duke class - Removed I/O operations from Duke class\n(2a) Created a Gui object\n(2b) Call welcome method from Gui object\n(2c) Store userinput into a string\n(2d) Switch case to handle the userinput commands\n\nNote: To slice userinput to extract the command string from the rest of the syntax\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":10}}}]},{"date":"2024-02-01","commitResults":[{"hash":"8f3e4181c7bd1f8848ab0c77f0ac3f27dff9282c","isMergeCommit":false,"messageTitle":"Level 2 Implementation Duke.java (1) Moved execution of program to programExecution() (2) Created a while true loop for continual program execution until bye command is given (3) Create Constructor to initialise objects (gui, tasklist) (4) List of commands supported [ADD - to add task (string) to a tasklist object, LIST - to print task list, BYE - End program execution]","messageBody":"Gui.java\n(1) Seperate commands list from welcome message\n(2) Add Command included in printCommands()\n\nTaskList.java\n(1) Created TaskList class to manage the list of task\n(2) printTaskList() -\u003e Print task list\n(3) insertTask() -\u003e Insert a task (string) into a ArrayList\u003cstring\u003e\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":10}}},{"hash":"219813b696024ac40714dadd3fe070812b55d77a","isMergeCommit":false,"messageTitle":"Level 3 Implementation Create Task Class (1) Status modifier method (markAsDone(), markAsNotDone()) (2) Getter method (statusCheck(), taskDescription())","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":0}}},{"hash":"60c3ecd7fab008e7c4e37a581b56fb8cfa56c08e","isMergeCommit":false,"messageTitle":"Level-3 Implementation Duke.java (1) Amended Add command to create and to add task object to the tasklist","messageBody":"TaskList.java\n(1) Amended ArrayList to take in task object instead of string object\n(2) Modified printTaskList() to print task description\n(3) modify insertTask() to print task description\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":6}}},{"hash":"ae2607f88e9ecabd035e56926177a515df11150c","isMergeCommit":false,"messageTitle":"Level-3 Implementation Duke.java (1) Add Status command to modify status of task Gui.java (1) Add instructions for Status command TaskList.java (1) Modify print task to show status of task (2) Add new method updateTask() to update the status of the task based on specified index and input boolean","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":4}}}]},{"date":"2024-02-09","commitResults":[{"hash":"02ef00c5c5880cb334c26a97f2a7b75dcf99041c","isMergeCommit":false,"messageTitle":"Level 4 -Implementation","messageBody":"Task.java\n(1) Create method to return a string that contains the description of task and status icon\n\nTaskList.java\n(1) Edit printTaskList to print out task list by using the method created in Task.java\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":3}}},{"hash":"2dd260b4395965700095df5349967a186bee6f5f","isMergeCommit":false,"messageTitle":"Level 4 - Implementation","messageBody":"Duke.java\n(1) Added switch case to handle deadline command and instruction\n\nGui.java\n(1) Added GUI output for deadline instructions\n\nDeadline.java\n(1) Created a deadline class extended from task class\n","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":0}}},{"hash":"063f5578acf983d5bb2cf3239b7febd9af8df6d0","isMergeCommit":false,"messageTitle":"Level 4 - Implementation","messageBody":"Duke.java\n(1)  Add case to handle EVENT instruction\n(2) Modify ADD case to ToDo instruction\n\nGui.java\n(1) Add syntax and commands for Event and ToDo\n\nEvent.java\n(1) Create an event class\n\nToDo.java\n(1) Create a ToDo class\n","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":7}}}]},{"date":"2024-02-11","commitResults":[{"hash":"acc45eb12496a3f74caff51fe581e476215ebc5c","isMergeCommit":false,"messageTitle":"Level 5 - Implementation Error/Exception","messageBody":"DukeException.java\n(1) Create a new class to return an error message when exception occurs\n\nTask.java\n(1) Implemented exception handling for empty input. (e.g. TODO command without anything after it) This will be propogated to all Task objects\n\nDuke.java\n(1) Temp commented out all cases except TODO -\u003e To do testing\n(2) Handle userinput for\n     (a) User enter bye/list with :\n     (b) User enter command with semi colon but nothing after it\n(3) Change variable name (instruction -\u003e input)\n","fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":18}}},{"hash":"d618daa52f77eb74b1abd275ffa9e392fea30cf4","isMergeCommit":false,"messageTitle":"Level 5 - Implementation","messageBody":"Duke.java\n(1) Exception handling for event command moved into event class\n\nEvent.java\n(1) Exception handling in the event user does not give 3 parameters (task, start, end)\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":8}}},{"hash":"b634c9791332abec539e2b9862ff364beb07ec33","isMergeCommit":false,"messageTitle":"Level 5 - Implementation","messageBody":"Deadline.java\n(1) Exception handling for user input - Accept only 2 parameters\n\nDuke.java\n(1) Move splitting of string to Deadline class to conduct exception handling\n(2) Remove redundant try-catch loop for TODO switch case\n\nEvent.java\n(1) Remove redundant variable splitInput\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":19}}},{"hash":"75ff9dc5a39c2b7814390722a0bde742a85e066a","isMergeCommit":false,"messageTitle":"Level 5 - Implementation","messageBody":"DukeException.java\n(1) Create helper functions to check validate user inputs\n\nDeadline.java/Event.java/\n(1) Replace number of parameter validation with helper function checkNumParameters()\n\nDuke.java\n(1) Move exception handling for Status command to tasklist class -\u003e updateTask() method\n\nTaskList.java\n(1) Handle user input for update task method\n","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":95,"deletions":10}}}]},{"date":"2024-02-13","commitResults":[{"hash":"640fad24dff90b4e7fef25321214346a5b748258","isMergeCommit":false,"messageTitle":"Level 6 - Implementation","messageBody":"Duke.java\n(1) Added delete command\n\nGUI.java\n(1) Added delete command syntax\n\nTaskList.java\n(1) Impemented method deleteTask() to delete task based on index\n","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":4}}}]},{"date":"2024-02-26","commitResults":[{"hash":"676df1f981bad753f6943f9909d1234712b30243","isMergeCommit":false,"messageTitle":"Level-7 Implementation","messageBody":"(1) Java Packages\nduke package - Contains all the classess\nexception package - Contains DukeException\ntasks package - Contains Deadline, Event,Task, ToDo, TaskList\ngui package - Contains Gui\n","fileTypesAndContributionMap":{"java":{"insertions":56,"deletions":23}}}]},{"date":"2024-02-28","commitResults":[{"hash":"10c61897e849e8ddf4e03153e2e3b665e8f3a267","isMergeCommit":false,"messageTitle":"Level 7 - Implementation","messageBody":"(1) Edited Syntax of displayed task to aid writing and loading from database\n\nStorage.java\n(1) To manage I/O operation to the database file\n\nDuke.java\n(1) Remove SAVE command\n(2) Automatically save task list to database file when adding/deleting/editing task\n(3) Automatically load task list when program start up\n","fileTypesAndContributionMap":{"java":{"insertions":184,"deletions":10}}},{"hash":"83e480c75ed4869a6a0c6f527311b67a92f90b24","isMergeCommit":false,"messageTitle":"Level7- Implementation","messageBody":"(1) Rename Gui -\u003e Ui\n\n(2) Created Command and Parser class from exisiting code. Move relevant code into each class\n\n(3) Create run method in duke.java\n","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":126,"deletions":88}}}]}]},"authorFileTypeContributionMap":{"JoelEeWH":{"java":662,"md":0,"fxml":0,"sh":0,"bat":0,"gradle":0,"txt":0}},"authorContributionVariance":{"JoelEeWH":5508.6655},"authorDisplayNameMap":{"JoelEeWH":"JOEL.. HAO"}}
