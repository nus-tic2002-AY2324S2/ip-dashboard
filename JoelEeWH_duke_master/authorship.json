[{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"public class Command {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"\tprivate String commandType;","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"\tprivate String commandInput;","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"\tprivate boolean exit;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"\tpublic Command(String commandType, String commandInput) throws DukeException {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"\t\tthis.commandType \u003d commandType;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"\t\tthis.commandInput \u003d commandInput;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"\t\tthis.exit \u003d false;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"\t/**","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"\t * Based on the command given, method will execute a series of operations","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"\t *","lastModifiedDate":"2024-03-27","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"\t * @param tasklist object that contains tasks in memory","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"\t */","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"\tpublic void execute(TaskList tasklist) throws DukeException {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"\t\tassert tasklist !\u003d null : \"execute requires tasklist object\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"\t\tswitch (commandType) {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"\t\tcase \"UPDATE\":","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"\t\t\ttasklist.updateTaskDescription(commandInput);","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tStorage.save(tasklist);","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tbreak;","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"\t\tcase \"FIND\":","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"\t\t\ttasklist.findTask(commandInput);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tbreak;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"\t\tcase \"CHECK\":","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"\t\t\ttasklist.checkDate(commandInput);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tbreak;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JoelEeWH"},"content":"\t\tcase \"DELETE\":","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JoelEeWH"},"content":"\t\t\ttasklist.deleteTask(commandInput);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tStorage.save(tasklist);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tbreak;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JoelEeWH"},"content":"\t\tcase \"EVENT\":","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tEvent event \u003d new Event(commandInput);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JoelEeWH"},"content":"\t\t\ttasklist.insertTask(event);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tStorage.save(tasklist);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tbreak;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JoelEeWH"},"content":"\t\tcase \"DEADLINE\":","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tDeadline deadline \u003d new Deadline(commandInput);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JoelEeWH"},"content":"\t\t\ttasklist.insertTask(deadline);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tStorage.save(tasklist);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tbreak;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JoelEeWH"},"content":"\t\tcase \"STATUS\":","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JoelEeWH"},"content":"\t\t\ttasklist.updateTaskStatus(commandInput);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tStorage.save(tasklist);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tbreak;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JoelEeWH"},"content":"\t\tcase \"TODO\":","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tToDo todo \u003d new ToDo(commandInput);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JoelEeWH"},"content":"\t\t\ttasklist.insertTask(todo);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tStorage.save(tasklist);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tbreak;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JoelEeWH"},"content":"\t\tcase \"LIST\":","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JoelEeWH"},"content":"\t\t\ttasklist.printTaskList();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tbreak;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JoelEeWH"},"content":"\t\tcase \"BYE\":","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tthis.exit \u003d true;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tbreak;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JoelEeWH"},"content":"\t\tdefault:","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tthrow new DukeException(\"Invalid Command! Please try again!\");","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JoelEeWH"},"content":"\t\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JoelEeWH"},"content":"\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JoelEeWH"},"content":"\t/**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JoelEeWH"},"content":"\t * Check if the command is an exit command. Print bye message if it is exit command","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JoelEeWH"},"content":"\t */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JoelEeWH"},"content":"\tpublic boolean isExit() {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JoelEeWH"},"content":"\t\tif (this.exit) {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tUi.printExitStatement();","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JoelEeWH"},"content":"\t\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JoelEeWH"},"content":"\t\treturn this.exit;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JoelEeWH"},"content":"\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-28","isFullCredit":false}],"authorContributionMap":{"JoelEeWH":87}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke;","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"    private static Ui ui;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"    private static TaskList tasklist;","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"     * Constructor","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"     * Initialise gui and task list object","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"    public Duke() {","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"        tasklist \u003d new TaskList();","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"     * Start the chat bot application","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"    public void run() throws DukeException {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"        ui.welcome();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"        tasklist \u003d Storage.load();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"        while(!isExit){","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"            try {","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"                ui.printCommands();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"                Command c \u003d Parser.parser(ui.userInput().trim()); //Takes in user input","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"                c.execute(tasklist);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"            }catch (DukeException error){","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"                System.out.println(error);","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"            }","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JoelEeWH"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JoelEeWH"},"content":"        new Duke().run();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29","isFullCredit":false}],"authorContributionMap":{"JoelEeWH":43,"-":3}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.exception;","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"public class DukeException  extends Exception{","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"    public DukeException(String error){","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"        super(error);","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"     * Helper method to check if string input is number","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"     * isInteger() method will check input if it is an Integer","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"     * Reference: https://stackoverflow.com/questions/1102891/how-to-check-if-a-string-is-numeric-in-java","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"    public static boolean isInteger(String input){","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"        try{","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"            return true;","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"        }catch (NumberFormatException e){","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"            return false;","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"     * Helper method to check if string input is boolean","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"     * isBoolean() method will check input if it is a boolean","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"    */","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"    public static boolean isBoolean(String input) throws DukeException {","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"        input \u003d input.toLowerCase();","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"        if (input.contains(\"false\") || input.contains(\"true\")){","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"            return input.equals(\"true\");","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"        }else{","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"            throw new DukeException(\"Enter either true or false values. True - Task completed.\");","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"     * Helper method to check if the number of parameters in the command is correct","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"    public static void checkNumParameters(String input, int num) throws DukeException {","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"        if (input.split(\"_\").length !\u003d num){","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JoelEeWH"},"content":"            throw new DukeException(String.format(\"Command expects \" + num + \" parameters\"));","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JoelEeWH"},"content":"     * Helper method to check if the index to be updated is valid. If it is, return that index.","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JoelEeWH"},"content":"    public static int checkIndex(String inputSplit, int maxIndex) throws DukeException {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JoelEeWH"},"content":"        int index;","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JoelEeWH"},"content":"        if (!DukeException.isInteger(inputSplit.trim())){","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JoelEeWH"},"content":"            throw new DukeException(\"Parameter must be an integer!\");","lastModifiedDate":"2024-02-13","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JoelEeWH"},"content":"        index \u003d Integer.parseInt(inputSplit.trim()) - 1;","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JoelEeWH"},"content":"        if (maxIndex \u003c 0){","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JoelEeWH"},"content":"            throw new DukeException(\"Error! There are no task in the list\");","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JoelEeWH"},"content":"        if (index \u003e maxIndex){","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JoelEeWH"},"content":"            throw new DukeException(\"Index not found! Choose a valid index!\");","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JoelEeWH"},"content":"        return index;","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-11","isFullCredit":false}],"authorContributionMap":{"JoelEeWH":66}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.parser;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.Command;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"public class Parser {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"\tpublic Parser() {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"\t/**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"\t * Parse user input and break it up and store it in Command object.","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"\t * Conduct input validation on the user input syntax","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"\t */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"\tpublic static Command parser(String userinput) throws DukeException {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"\t\tassert userinput !\u003d null : \"parser requires a string input\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"\t\tString command;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"\t\tString input \u003d \"\";","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"\t\tboolean BYE_COMMAND \u003d userinput.split(\":\")[0].trim().equals(\"BYE\");","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"\t\tboolean LIST_COMMAND \u003d userinput.split(\":\")[0].trim().equals(\"LIST\");","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"\t\tif ((userinput.contains(\":\")) \u0026\u0026 !BYE_COMMAND \u0026\u0026 !LIST_COMMAND) {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tString[] userInputArray \u003d userinput.split(\":\");","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tif (userInputArray.length \u003c\u003d 1) {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\tthrow new DukeException(\"[SYNTAX ERROR] Please input task instructions after \u0027:\u0027\\n\");","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tcommand \u003d userinput.split(\":\")[0].trim();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tinput \u003d userinput.split(\":\")[1].trim();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"\t\t} else if (((userinput.contains(\":\")) \u0026\u0026 (BYE_COMMAND || LIST_COMMAND))) {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tthrow new DukeException(\"[SYNTAX ERROR] \u0027BYE\u0027 and \u0027LIST\u0027 should not be followed with \u0027:\u0027 \\n\");","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"\t\t} else {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tcommand \u003d userinput.trim();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"\t\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"\t\tSystem.out.println(\"Command is:\" + command); //Prints out command","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"\t\treturn new Command(command, input);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-28","isFullCredit":false}],"authorContributionMap":{"JoelEeWH":40}},{"path":"src/main/java/duke/parser/TimeDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.parser;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.Task;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"public class TimeDate {","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"    //Date and Time format accepted by application","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"    private static final DateTimeFormatter YYYY_MM_DD_HHMM \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"    //Date format that is used by CHECK command","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"    private static final DateTimeFormatter YYYY_MM_DD \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"    //Display format for user to view","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"    private static final DateTimeFormatter MMM_DD_YYYY_HHMM \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"\tpublic TimeDate(){","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"     * Validate the input if it is in the current date time format","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"    public static LocalDateTime valiDate(String datetime) throws DukeException {","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"        assert datetime !\u003d null : \"valiDate requires a string as input\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"        try{","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"            return LocalDateTime.parse(datetime, YYYY_MM_DD_HHMM);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"        }catch (DateTimeParseException e){","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"            throw new DukeException(\"Wrong Date Time format! Use yyyy-MM-dd HHmm \");","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"     * Validate the input if it is in the current date format","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"    public static LocalDate valiDate(String date, boolean x) throws DukeException {","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"        assert date !\u003d null : \"valiDate requires a string as input\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JoelEeWH"},"content":"        try{","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JoelEeWH"},"content":"            return LocalDate.parse(date, YYYY_MM_DD);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JoelEeWH"},"content":"        }catch (DateTimeParseException e){","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JoelEeWH"},"content":"            throw new DukeException(\"Wrong Date format! Use yyyy-MM-dd\");","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JoelEeWH"},"content":"     * Validate user input and convert date to a string using standard format","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JoelEeWH"},"content":"\t */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JoelEeWH"},"content":"    public static String checkFormat(String datetime) throws DukeException {","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JoelEeWH"},"content":"        assert datetime !\u003d null : \"checkFormat requires a string as input\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JoelEeWH"},"content":"        return valiDate(datetime).format(YYYY_MM_DD_HHMM);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JoelEeWH"},"content":"     * Validate user input and convert date to a string using display format","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JoelEeWH"},"content":"    public static String displayFormat(String datetime) throws DukeException {","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JoelEeWH"},"content":"        assert datetime !\u003d null : \"displayFormat requires a string as input\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JoelEeWH"},"content":"        return valiDate(datetime).format(MMM_DD_YYYY_HHMM);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JoelEeWH"},"content":"     * This method check if the Deadline and Event object has date that falls on or between user input date","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JoelEeWH"},"content":"    public static boolean isTaskOnDate(Task task, String targetDate) throws DukeException {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JoelEeWH"},"content":"        assert task !\u003d null : \"isTaskOnDate requires a Task object as 1st input\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JoelEeWH"},"content":"        assert targetDate !\u003d null : \"isTaskOnDate requires a string as 2nd input\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JoelEeWH"},"content":"        LocalDate targetDateFormat \u003d valiDate(targetDate, true);","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JoelEeWH"},"content":"        if (task instanceof Deadline){","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JoelEeWH"},"content":"            String deadline \u003d ((Deadline) task).getDeadline();","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JoelEeWH"},"content":"            LocalDate deadlineFormat \u003d valiDate(deadline).toLocalDate();","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JoelEeWH"},"content":"            return deadlineFormat.equals(targetDateFormat);","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JoelEeWH"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JoelEeWH"},"content":"            String start \u003d ((Event) task).getStart();","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JoelEeWH"},"content":"            String end \u003d ((Event) task).getEnd();","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JoelEeWH"},"content":"            LocalDate startFormat \u003d valiDate(start).toLocalDate();","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JoelEeWH"},"content":"            LocalDate endFormat \u003d valiDate(end).toLocalDate();","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JoelEeWH"},"content":"            boolean startDateEqualUserInputDate \u003d targetDateFormat.isEqual(startFormat);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JoelEeWH"},"content":"            boolean endDateEqualUserInputDate \u003d targetDateFormat.isEqual(endFormat);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JoelEeWH"},"content":"            boolean userInputDateBetweenStartAndEndDate \u003d targetDateFormat.isAfter(startFormat) \u0026\u0026","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JoelEeWH"},"content":"                    targetDateFormat.isBefore(endFormat);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JoelEeWH"},"content":"            return ( startDateEqualUserInputDate || endDateEqualUserInputDate ) || userInputDateBetweenStartAndEndDate;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JoelEeWH"},"content":"        return false;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-29","isFullCredit":false}],"authorContributionMap":{"JoelEeWH":97}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.storage;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"import duke.parser.TimeDate;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.*; //Usage of all the classes in tasks (Deadline, Event, Task, TaskList, ToDo)","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"import java.io.File;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"public class Storage {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"\tprivate static final String SEPARATOR \u003d File.separator;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"\tprivate static final String DB_PATH \u003d System.getProperty(\"user.dir\") + SEPARATOR + \"database\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"\tprivate static final String DATABASE_TXT \u003d \"database.txt\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"\tprivate static final File DB_OBJECT \u003d new File(DB_PATH);","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"\tprivate static final File DB_FILE_PATH \u003d new File(DB_PATH + SEPARATOR + DATABASE_TXT);","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"\tpublic Storage() {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"\t/**","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"\t * Load the task list from the database file and input into TaskList object for runtime usage","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"\t */","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"\tpublic static TaskList load() throws DukeException {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"\t\tTaskList tasklist \u003d new TaskList();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"\t\tinitialise();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"\t\ttry {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tScanner scan \u003d new Scanner(DB_FILE_PATH);","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"\t\t\twhile (scan.hasNext()) {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\tString taskLine \u003d scan.nextLine();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\tString[] taskElement \u003d taskLine.split(\"\\\\|\");","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\tString taskType \u003d taskElement[1].trim();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\tString taskStatus \u003d taskElement[3].trim();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\tString taskDescription \u003d taskElement[4].trim();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\tswitch (taskType) {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\tcase \"T\":","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tSystem.out.println(\"Loading ... \");","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tSystem.out.println(\"Todo \" + taskStatus + \" \" + taskDescription);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tToDo toTask \u003d new ToDo(taskDescription);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tcheckTaskStatus(taskStatus, toTask);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\ttasklist.insertTask(toTask);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tbreak;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\tcase \"E\":","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tString space \u003d \" \";","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tString[] durationSplit \u003d taskElement[5].trim().split(\" \");","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tString start \u003d durationSplit[1].trim() + space + durationSplit[2].trim();","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tString end \u003d durationSplit[4].trim() + space + durationSplit[5].trim();","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tSystem.out.println(\"Loading ... \");","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tSystem.out.println(\"Event \" + taskStatus + \" \" + taskDescription","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\t\t\t+ \" Start: \" + TimeDate.displayFormat(start) + \" End: \" + TimeDate.displayFormat(end));","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tEvent eventTask \u003d new Event(taskDescription + \"_\" + start + \"_\" + end);","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tcheckTaskStatus(taskStatus, eventTask);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\ttasklist.insertTask(eventTask);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tbreak;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\tcase \"D\":","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tString[] deadlineSplit \u003d taskElement[5].trim().split(\"\u003d\");","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tString by \u003d deadlineSplit[1].trim();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tSystem.out.println(\"Loading ... \");","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tSystem.out.println(\"Deadlline \" + taskStatus + \" \" + taskDescription","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\t\t\t+ \" by: \" + TimeDate.displayFormat(by));","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tDeadline deadlineTask \u003d new Deadline(taskDescription + \"_\" + by);","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tcheckTaskStatus(taskStatus, deadlineTask);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\ttasklist.insertTask(deadlineTask);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tbreak;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\tdefault:","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\tthrow new DukeException(\"Task type is invalid. Only accept \u0027T\u0027, \u0027D\u0027, \u0027E\u0027\");","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JoelEeWH"},"content":"\t\t} catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tthrow new RuntimeException(e);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JoelEeWH"},"content":"\t\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JoelEeWH"},"content":"\t\treturn tasklist;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JoelEeWH"},"content":"\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JoelEeWH"},"content":"\t/**","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JoelEeWH"},"content":"\t * Check the status of the task and if it is completed, mark that task as completed","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JoelEeWH"},"content":"\t */","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JoelEeWH"},"content":"\tprivate static void checkTaskStatus(String taskStatus, Task task) throws DukeException {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JoelEeWH"},"content":"\t\tassert taskStatus !\u003d null : \"checkTaskStatus requires a String as 1st input\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JoelEeWH"},"content":"\t\tassert task !\u003d null : \"checkTaskStatus requires a task object as 2nd input\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JoelEeWH"},"content":"\t\tif (taskStatus.contains(\"Completed\")) {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JoelEeWH"},"content":"\t\t\ttask.markAsDone();","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JoelEeWH"},"content":"\t\t} else if (!taskStatus.contains(\"Progress\")) {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tthrow new DukeException(\"Task Status is invalid. Only accept Task Completed \" +","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\t\t\"or Task in Progress\");","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JoelEeWH"},"content":"\t\t}","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JoelEeWH"},"content":"\t}","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JoelEeWH"},"content":"\t/**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JoelEeWH"},"content":"\t * Iterate through the task list and write the task into a database","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JoelEeWH"},"content":"\t */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JoelEeWH"},"content":"\tpublic static void save(TaskList list) throws DukeException {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JoelEeWH"},"content":"\t\tassert list !\u003d null : \"save requires a tasklist object as input\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JoelEeWH"},"content":"\t\tinitialise();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JoelEeWH"},"content":"\t\ttry {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tFileWriter file \u003d new FileWriter(DB_FILE_PATH);","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tfor (int i \u003d 0; i \u003c list.getTaskListSize(); i++) {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\tSystem.out.println(\"writing to db: \" + list.getTask(i));","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\tfile.write(list.getTask(i).toString());","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\tfile.write(System.lineSeparator());","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tfile.close();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JoelEeWH"},"content":"\t\t} catch (IOException e) {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tthrow new RuntimeException(e);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JoelEeWH"},"content":"\t\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JoelEeWH"},"content":"\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JoelEeWH"},"content":"\t/**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JoelEeWH"},"content":"\t * Check the file path and if the database file exist","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JoelEeWH"},"content":"\t * If they do not exist, this method will create them","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JoelEeWH"},"content":"\t */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JoelEeWH"},"content":"\tpublic static void initialise() throws DukeException {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JoelEeWH"},"content":"\t\tif (!DB_OBJECT.exists()) {","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tDB_OBJECT.mkdirs();","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tSystem.out.println(\"Database directory don\u0027t exist. Creating directory: \" + DB_OBJECT);","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JoelEeWH"},"content":"\t\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JoelEeWH"},"content":"\t\tif (!DB_FILE_PATH.exists()) {","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JoelEeWH"},"content":"\t\t\ttry {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\tDB_FILE_PATH.createNewFile();","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\tSystem.out.println(\"Database file does not exist. Created DB file at : \" + DB_FILE_PATH);","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t} catch (IOException error) {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\tthrow new RuntimeException(error);","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JoelEeWH"},"content":"\t\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JoelEeWH"},"content":"\t}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28","isFullCredit":false}],"authorContributionMap":{"JoelEeWH":151}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"import duke.parser.TimeDate;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"    protected String by;","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"     * Constructor with exception handling to ensure user input 2 parameters for this command","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"     * Handles date time input validation","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"    public Deadline(String input) throws DukeException {","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"        super(input.split(\"_\")[0].trim());","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"        DukeException.checkNumParameters(input,2);","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"        this.by \u003d input.split(\"_\")[1].trim();","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"        this.by \u003d TimeDate.checkFormat(by);","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"     * return deadline string","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"    public String getDeadline(){","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"        return this.by;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"     * Return a string format to include task type -\u003e deadline","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"    @Override","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"        return \"|D|\" + super.toString() + \" |by\u003d \" + by + \"|\";","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"     * Return string format for display - Change the date format","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"    @Override","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JoelEeWH"},"content":"    public String toDisplay() {","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JoelEeWH"},"content":"        try {","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JoelEeWH"},"content":"            return \"|D|\" + super.toString() + \" |by\u003d \" + TimeDate.displayFormat(by) + \"|\";","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JoelEeWH"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JoelEeWH"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JoelEeWH"},"content":"     * Return class type","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JoelEeWH"},"content":"    @Override","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JoelEeWH"},"content":"    public String classType(){","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JoelEeWH"},"content":"        return \"Deadline\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-09","isFullCredit":false}],"authorContributionMap":{"JoelEeWH":58}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"import duke.parser.TimeDate;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"    protected String start;","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"    protected String end;","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"     * Constructor with exception handling to ensure user input 3 parameters for this command","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"    public Event(String input) throws DukeException {","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"        super(input.split(\"_\")[0].trim());","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"        DukeException.checkNumParameters(input,3);","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"        String start \u003d input.split(\"_\")[1].trim();","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"        String end \u003d input.split(\"_\")[2].trim();","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"        this.start \u003d TimeDate.checkFormat(start);","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"        this.end \u003d TimeDate.checkFormat(end);","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"     * Return a string format to include task type -\u003e event","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"    @Override","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"        return \"|E|\" + super.toString() + \" |from \" + start + \" to \"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"                + end + \" |\";","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"     * Return string format for display - Change the date format","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"    @Override","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"    public String toDisplay() {","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"        try {","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"            return \"|E|\" + super.toString() + \" |from \" + TimeDate.displayFormat(start) + \" to \"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"                    + TimeDate.displayFormat(end) + \" |\";","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JoelEeWH"},"content":"     * Return start time","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JoelEeWH"},"content":"    public String getStart(){","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JoelEeWH"},"content":"        return this.start;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JoelEeWH"},"content":"     * Return end time","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JoelEeWH"},"content":"    public String getEnd(){","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JoelEeWH"},"content":"        return this.end;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JoelEeWH"},"content":"     * Return class type","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JoelEeWH"},"content":"    @Override","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JoelEeWH"},"content":"    public String classType(){","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JoelEeWH"},"content":"        return \"Event\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-09","isFullCredit":false}],"authorContributionMap":{"JoelEeWH":67}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"public abstract class Task {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"    protected String description;","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"     * Constructor with exception handling","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"    public Task(String description) throws DukeException {","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"        if (description.isEmpty()){","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"            throw new DukeException(\"Please input task!\");","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"     * Check if task is completed","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"     * @return string \"Task Completed\" if true else string \"Task in Progress\"","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"        return (isDone ? \"Task Completed\" : \"Task in Progress\");","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"     * Update the task description","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"     * @param string description of task","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"    public void updateTaskDescription(String task) throws DukeException{","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"        if (task.isEmpty()){","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"            throw new DukeException(\"Description of task cannot be empty.Please input task!\\n\");","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"        this.description \u003d task;","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"Updated task description: \" + task);","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"     * Return a string format to include task type","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JoelEeWH"},"content":"    public String toString(){","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JoelEeWH"},"content":"        return \" |\" + getStatusIcon() + \"| \" + this.description;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JoelEeWH"},"content":"     * Abstract method for child classes to display task base on requirement","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JoelEeWH"},"content":"    public abstract String toDisplay();","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JoelEeWH"},"content":"     * Mark task as done","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JoelEeWH"},"content":"    public void markAsDone(){","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JoelEeWH"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JoelEeWH"},"content":"     * Mark task as not done","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JoelEeWH"},"content":"    public void markAsNotDone(){","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JoelEeWH"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JoelEeWH"},"content":"     * Return status of task","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JoelEeWH"},"content":"    public boolean statusCheck(){","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JoelEeWH"},"content":"        return isDone;","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JoelEeWH"},"content":"     * Return description of task","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JoelEeWH"},"content":"    public String taskDescription(){","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JoelEeWH"},"content":"        return description;","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JoelEeWH"},"content":"     * Return class type","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JoelEeWH"},"content":"    public String classType(){","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JoelEeWH"},"content":"        return \"Task\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-01","isFullCredit":false}],"authorContributionMap":{"JoelEeWH":91}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"import duke.parser.TimeDate;","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"/**","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":" * This class manages the list of task","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":" */","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"    private final ArrayList\u003cTask\u003e TASK_LIST; //Create an attribute to hold a list of task","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"     * Constructor","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"    public TaskList(){","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"        this.TASK_LIST \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"     * Iterate through task list and print it out","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"    public void printTaskList(){","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"*******************Task List******************\");","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"******[Index]-- [Task Type] [Status] [Task description]******\\n\");","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"        for(int i \u003d 0; i \u003c this.TASK_LIST.size(); i++){","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"            Task task \u003d this.TASK_LIST.get(i);","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"            System.out.println(i+1 + \"--\" + task.toDisplay() + \"\\n\" );","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"\\n*******************Task List******************\\n\");","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"     * Print out the task that falls on the user defined date","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"    public void checkDate(String date) throws DukeException {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"        assert date !\u003d null : \"checkDate requires a string as an input\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"*******************Task List on \" + date + \" ******************\");","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"******[Index]-- [Task Type] [Status] [Task description]******\\n\");","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JoelEeWH"},"content":"        for(int i \u003d 0; i \u003c this.TASK_LIST.size(); i++){","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JoelEeWH"},"content":"            Task task \u003d this.TASK_LIST.get(i);","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JoelEeWH"},"content":"            if (TimeDate.isTaskOnDate(task, date)){","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JoelEeWH"},"content":"                System.out.println(i+1 + \"--\" + task.toDisplay() + \"\\n\" );","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JoelEeWH"},"content":"            }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"\\n*******************Task List******************\\n\");","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JoelEeWH"},"content":"     * Print out the tasks that contain user input keyword","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JoelEeWH"},"content":"    public void findTask(String keyword) {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JoelEeWH"},"content":"        assert keyword !\u003d null : \"findTask requires a string as an input\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"*******************Task List ******************\");","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"******[Index]-- [Task Type] [Status] [Task description]******\\n\");","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JoelEeWH"},"content":"        for(int i \u003d 0; i \u003c this.TASK_LIST.size(); i++){","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JoelEeWH"},"content":"            Task task \u003d this.TASK_LIST.get(i);","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JoelEeWH"},"content":"            if (task.taskDescription().contains(keyword)){","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JoelEeWH"},"content":"                System.out.println(i+1 + \"--\" + task.toDisplay() + \"\\n\" );","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JoelEeWH"},"content":"            }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"\\n*******************Task List******************\\n\");","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JoelEeWH"},"content":"     * Detect duplicate task. Return true if task is already in task list","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JoelEeWH"},"content":"     * Improvement -\u003e Same task description but different task type is accepted","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JoelEeWH"},"content":"    public boolean detectDuplicate(Task inputTask) {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JoelEeWH"},"content":"        assert inputTask !\u003d null : \"detectDuplicate requires a task object as an input\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JoelEeWH"},"content":"        String inputTaskDescription \u003d inputTask.taskDescription();","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JoelEeWH"},"content":"\t\tfor (Task task : this.TASK_LIST) {","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JoelEeWH"},"content":"            boolean sameTaskDescription \u003d task.taskDescription().equals(inputTaskDescription);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":76,"author":{"gitId":"JoelEeWH"},"content":"            boolean sameTaskType \u003d task.classType().equals(inputTask.classType());","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":77,"author":{"gitId":"JoelEeWH"},"content":"\t\t\tif (sameTaskDescription \u0026\u0026 sameTaskType ) {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":78,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t\treturn true;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":79,"author":{"gitId":"JoelEeWH"},"content":"\t\t\t}","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":80,"author":{"gitId":"JoelEeWH"},"content":"\t\t}","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":81,"author":{"gitId":"JoelEeWH"},"content":"        return false;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":82,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":83,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":84,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":85,"author":{"gitId":"JoelEeWH"},"content":"     * Insert a task into the task list","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":86,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":87,"author":{"gitId":"JoelEeWH"},"content":"    public void insertTask(Task task) throws DukeException {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":88,"author":{"gitId":"JoelEeWH"},"content":"        assert task !\u003d null : \"insertTask requires a task object as an input\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":89,"author":{"gitId":"JoelEeWH"},"content":"        if(detectDuplicate(task)){","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":90,"author":{"gitId":"JoelEeWH"},"content":"            throw new DukeException(\"[Duplicated task] Task is already entered into task list!\");","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":91,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":92,"author":{"gitId":"JoelEeWH"},"content":"        this.TASK_LIST.add(task);","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":93,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"Added task: \" + task.taskDescription() + \" to the task list.\\n\\n\");","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":94,"author":{"gitId":"JoelEeWH"},"content":"        this.printTaskList();","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":95,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":96,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":97,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":98,"author":{"gitId":"JoelEeWH"},"content":"     * Update task status in array","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":99,"author":{"gitId":"JoelEeWH"},"content":"     * @param index of task object to be modified","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":100,"author":{"gitId":"JoelEeWH"},"content":"     * @param status - True \u003d done, False \u003d not done","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":101,"author":{"gitId":"JoelEeWH"},"content":"     * Error handling","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":102,"author":{"gitId":"JoelEeWH"},"content":"     * (1) Check if command have 2 parameters","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":103,"author":{"gitId":"JoelEeWH"},"content":"     * (2) Check if 1st parameter is a valid index in task list","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":104,"author":{"gitId":"JoelEeWH"},"content":"     *               -Check if parameter is an integer","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":105,"author":{"gitId":"JoelEeWH"},"content":"     *               -Check if that integer is a valid index","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":106,"author":{"gitId":"JoelEeWH"},"content":"     * (3) Check if 2nd parameter is a boolean","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":107,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":108,"author":{"gitId":"JoelEeWH"},"content":"    public void updateTaskStatus(String input) throws DukeException {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":109,"author":{"gitId":"JoelEeWH"},"content":"        assert input !\u003d null : \"updateTaskStatus requires a string as an input\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":110,"author":{"gitId":"JoelEeWH"},"content":"        DukeException.checkNumParameters(input,2);","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":111,"author":{"gitId":"JoelEeWH"},"content":"        String[] inputSplit \u003d input.split(\"_\");","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":112,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":113,"author":{"gitId":"JoelEeWH"},"content":"        int maxIndex \u003d this.TASK_LIST.size() -1;","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":114,"author":{"gitId":"JoelEeWH"},"content":"        int index \u003d DukeException.checkIndex(inputSplit[0], maxIndex);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":115,"author":{"gitId":"JoelEeWH"},"content":"        boolean status \u003d DukeException.isBoolean(inputSplit[1]);","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":116,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":117,"author":{"gitId":"JoelEeWH"},"content":"        if (status){","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":118,"author":{"gitId":"JoelEeWH"},"content":"            this.TASK_LIST.get(index).markAsDone();","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":119,"author":{"gitId":"JoelEeWH"},"content":"        }else{","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":120,"author":{"gitId":"JoelEeWH"},"content":"            this.TASK_LIST.get(index).markAsNotDone();","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":121,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":122,"author":{"gitId":"JoelEeWH"},"content":"        this.printTaskList();","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":123,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":124,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":125,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-13","isFullCredit":false},{"lineNumber":126,"author":{"gitId":"JoelEeWH"},"content":"     * Delete task based on index given","lastModifiedDate":"2024-02-13","isFullCredit":false},{"lineNumber":127,"author":{"gitId":"JoelEeWH"},"content":"     * @param input string","lastModifiedDate":"2024-02-13","isFullCredit":false},{"lineNumber":128,"author":{"gitId":"JoelEeWH"},"content":"     * @throws DukeException if input is not integer or not in task list","lastModifiedDate":"2024-02-13","isFullCredit":false},{"lineNumber":129,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-13","isFullCredit":false},{"lineNumber":130,"author":{"gitId":"JoelEeWH"},"content":"    public void deleteTask(String input) throws DukeException {","lastModifiedDate":"2024-02-13","isFullCredit":false},{"lineNumber":131,"author":{"gitId":"JoelEeWH"},"content":"        assert input !\u003d null : \"deleteTask requires a string as an input\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":132,"author":{"gitId":"JoelEeWH"},"content":"        int maxIndex \u003d this.TASK_LIST.size() -1;","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":133,"author":{"gitId":"JoelEeWH"},"content":"        int index \u003d DukeException.checkIndex(input, maxIndex);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":134,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"Deleting task: \" + this.TASK_LIST.get(index).taskDescription());","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":135,"author":{"gitId":"JoelEeWH"},"content":"        this.TASK_LIST.remove(index);","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":136,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"Remaining task in the list: \" + this.TASK_LIST.size() + \"\\n\");","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":137,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-13","isFullCredit":false},{"lineNumber":138,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":139,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":140,"author":{"gitId":"JoelEeWH"},"content":"     * Update task description task based on index given","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":141,"author":{"gitId":"JoelEeWH"},"content":"     * @param input string","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":142,"author":{"gitId":"JoelEeWH"},"content":"     * @throws DukeException if input is not integer or not in task list","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":143,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":144,"author":{"gitId":"JoelEeWH"},"content":"    public void updateTaskDescription(String input) throws DukeException {","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":145,"author":{"gitId":"JoelEeWH"},"content":"        assert input !\u003d null : \"updateTaskDescription requires an index\";","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":146,"author":{"gitId":"JoelEeWH"},"content":"        DukeException.checkNumParameters(input,2);","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":147,"author":{"gitId":"JoelEeWH"},"content":"        String[] inputSplit \u003d input.split(\"_\");","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":148,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":149,"author":{"gitId":"JoelEeWH"},"content":"        int maxIndex \u003d this.TASK_LIST.size() -1;","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":150,"author":{"gitId":"JoelEeWH"},"content":"        int index \u003d DukeException.checkIndex(inputSplit[0], maxIndex);","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":151,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"Updating task description: \" + this.TASK_LIST.get(index).taskDescription());","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":152,"author":{"gitId":"JoelEeWH"},"content":"        this.TASK_LIST.get(index).updateTaskDescription(inputSplit[1]);","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":153,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"New task description: \" + this.TASK_LIST.get(index).taskDescription());","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":154,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":155,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":156,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":157,"author":{"gitId":"JoelEeWH"},"content":"     * @return size of task list","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":158,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":159,"author":{"gitId":"JoelEeWH"},"content":"    public int getTaskListSize(){","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":160,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":161,"author":{"gitId":"JoelEeWH"},"content":"        return this.TASK_LIST.size();","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":162,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":163,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":164,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":165,"author":{"gitId":"JoelEeWH"},"content":"     * @return task of specific index from task list","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":166,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":167,"author":{"gitId":"JoelEeWH"},"content":"    public Task getTask(int index){","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":168,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":169,"author":{"gitId":"JoelEeWH"},"content":"        return this.TASK_LIST.get(index);","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":170,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":171,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":172,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-01","isFullCredit":false}],"authorContributionMap":{"JoelEeWH":172}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"     * Constructor","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2024-02-11","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"        super(description);","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"     * Return a string format","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"    @Override","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"        return \"|T|\" + super.toString();","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"     * Return string format for display","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"    @Override","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"    public String toDisplay() {","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"        return \"|T|\" + super.toString();","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"     * Return class type","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"    @Override","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"    public String classType(){","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"        return \"ToDo\";","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-09","isFullCredit":false}],"authorContributionMap":{"JoelEeWH":37}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.ui;","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-26","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"/**","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":" * This class is to provide \"GUI\" like features","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":" */","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"public class Ui {","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"    private static Scanner usrinput;","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"     * Constructor that will initialize a scanner object","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"    public Ui(){","lastModifiedDate":"2024-02-28","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"        usrinput \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"     * This method will","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"     * (1) Print initial message","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"    public void welcome() {","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"Welcome! I\u0027m Sid \\nWhat can I do for you?\\n\");","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"     * (1) Provide a list of commands for user to input","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"    public void printCommands(){","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"\\n\\nThese are the possible commands you can input:\\n\" +","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"                \"[COMMAND SYNTAX] | EXAMPLE | Description\\n\");","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"******Commands List******\");","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"[TODO:\u003cInput Task\u003e] | TODO:read a book | Task without date/time\");","lastModifiedDate":"2024-02-09","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"[DEADLINE:\u003cInput Task\u003e_\u003cDeadline\u003e] | DEADLINE:return a book_2022-01-01 2200 \" +","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JoelEeWH"},"content":"                \"| Task to be completed by\");","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"[Event:\u003cInput Task\u003e_\u003cStart Time\u003e_\u003cEnd Time] | \" +","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JoelEeWH"},"content":"                \"Event:project meeting_2022-01-01 2200 _ 2022-02-01 2300 | Task with a duration\");","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"[CHECK:\u003cdate\u003e | CHECK:2022-01-01 | Return all task on that date\");","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"[FIND:\u003ckeyword\u003e | FIND:book | Return all task containing book\");","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"[LIST] | LIST | Print out task list\");","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"[DELETE:\u003cIndex\u003e] | DELETE:2 | DELETE TASK 2\");","lastModifiedDate":"2024-02-13","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"[STATUS:\u003cIndex\u003e_\u003ctrue/false\u003e] | STATUS:2_false | Indicate if task is done (true/false)\");","lastModifiedDate":"2024-02-29","isFullCredit":false},{"lineNumber":51,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"[UPDATE:\u003cIndex\u003e_\u003cNew Description\u003e] | UPDATE:2_NEW TASK NAME | Change task ID 2 description\");","lastModifiedDate":"2024-03-22","isFullCredit":false},{"lineNumber":52,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"[BYE] | BYE | To exit \u003d(\");","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":53,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"******Commands List******\\n\");","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":54,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"Please input commands:\");","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":55,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":56,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":57,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":58,"author":{"gitId":"JoelEeWH"},"content":"     * This method will wait for user input","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":59,"author":{"gitId":"JoelEeWH"},"content":"     * @return a string that contains user input","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":60,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":61,"author":{"gitId":"JoelEeWH"},"content":"    public String userInput(){","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":62,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":63,"author":{"gitId":"JoelEeWH"},"content":"        return usrinput.nextLine().toUpperCase();","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":64,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":65,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":66,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":67,"author":{"gitId":"JoelEeWH"},"content":"     * This method will","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":68,"author":{"gitId":"JoelEeWH"},"content":"     * (1) Print an exit message","lastModifiedDate":"2024-02-01","isFullCredit":false},{"lineNumber":69,"author":{"gitId":"JoelEeWH"},"content":"     * (2) End the program","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":70,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":71,"author":{"gitId":"JoelEeWH"},"content":"    public static void printExitStatement() {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":72,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":73,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"Farewell!! Till we meet again.............\");","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":74,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-01-31","isFullCredit":false},{"lineNumber":75,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-01-31","isFullCredit":false}],"authorContributionMap":{"JoelEeWH":75}},{"path":"src/test/java/duke/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"public class CommandTest {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"    TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"    Command byeCommand \u003d new Command(\"BYE\", \"\");","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"    Command invalidCommand \u003d new Command(\"HI\", \"\");","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"    public CommandTest() throws DukeException {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"     * Test if bye command is executed correctly","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"    @Test","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"    public void byeCommandTest() throws DukeException {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"        byeCommand.execute(taskList);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"        // Bye command is executed so method will return true","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"        assertTrue(byeCommand.isExit());","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"     * Test for invalid user input command","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"    @Test","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"    public void invalidCommandTest() throws DukeException{","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"        try{","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"            //Invalid command given an exception will be thrown","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"            invalidCommand.execute(taskList);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"        }catch (DukeException e){","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"            assertEquals(\"Invalid Command! Please try again!\", e.getMessage());","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-03-01","isFullCredit":false}],"authorContributionMap":{"JoelEeWH":41}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.parser;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"public class ParserTest {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"    public ParserTest() throws DukeException {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"     * Test for user inputs","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"    @Test","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"    public void parserUserInputTest() {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"        try{","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"            //Invalid user input for bye command which will result in exception","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"            Parser.parser(\"BYE:\");","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"            fail();","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"        }catch (DukeException e){","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"            assertEquals(\"[SYNTAX ERROR] \u0027BYE\u0027 and \u0027LIST\u0027 should not be followed with \u0027:\u0027 \\n\", e.getMessage());","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"        try{","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"            //No additional instruction given after event command which will result in exception","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"            Parser.parser(\"EVENT:\");","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"            fail();","lastModifiedDate":"2024-03-20","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"        }catch (DukeException e){","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"            assertEquals(\"[SYNTAX ERROR] Please input task instructions after \u0027:\u0027\\n\", e.getMessage());","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-03-01","isFullCredit":false}],"authorContributionMap":{"JoelEeWH":37}},{"path":"src/test/java/duke/parser/TimeDateTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.parser;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"public class TimeDateTest {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"     * Test methods for various date time user input","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"    @Test","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"    public void dateTimeInputTest() {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"        try{","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"            //Testing if the wrong year format is used","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"            TimeDate.valiDate(\"22-22-01\", true);","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"        }catch (DukeException e){","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"            assertEquals(\"Wrong Date format! Use yyyy-MM-dd\", e.getMessage());","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"        try{","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"            //Testing if the wrong year format is used","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"            TimeDate.valiDate(\"22-22-01\");","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"        }catch (DukeException e){","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"            assertEquals(\"Wrong Date Time format! Use yyyy-MM-dd HHmm \", e.getMessage());","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"     * Test  method to check dates in both event and deadline class","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"    @Test","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"    public void eventOnDateTest() throws DukeException {","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"        Deadline deadlineObject \u003d new Deadline(\"Task_2023-01-01 0000\");","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"        Event eventObject \u003d new Event(\"Task_2023-01-01 0000 _ 2023-01-30 0000\");","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":42,"author":{"gitId":"JoelEeWH"},"content":"        //Deadline fall on user input date return true","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":43,"author":{"gitId":"JoelEeWH"},"content":"        assertTrue(TimeDate.isTaskOnDate(deadlineObject, \"2023-01-01\"));","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":44,"author":{"gitId":"JoelEeWH"},"content":"        //Event date fall within user input date return true","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":45,"author":{"gitId":"JoelEeWH"},"content":"        assertTrue(TimeDate.isTaskOnDate(eventObject, \"2023-01-02\"));","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":46,"author":{"gitId":"JoelEeWH"},"content":"        //Event date fall outside user input date return false","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":47,"author":{"gitId":"JoelEeWH"},"content":"        assertFalse(TimeDate.isTaskOnDate(eventObject, \"2023-05-02\"));","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":48,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":49,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-03-01","isFullCredit":false},{"lineNumber":50,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-03-01","isFullCredit":false}],"authorContributionMap":{"JoelEeWH":50}}]
