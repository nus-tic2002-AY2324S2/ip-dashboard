[{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"public class Command {","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"    private final String commandType;","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"    private final String commandInput;","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"    private boolean exit;","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"    public Command(String commandType, String commandInput) throws DukeException {","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"        this.commandInput \u003d commandInput;","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"        this.exit \u003d false;","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"     * Execute the command","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"     * @param tasklist","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"     * @throws DukeException","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"    public void execute(TaskList tasklist) throws DukeException {","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"        switch(commandType) {","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"            case \"DELETE\":","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"                tasklist.deleteTask(commandInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"                Storage.save(tasklist);","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"                break;","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"            case \"EVENT\":","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"                Event event \u003d new Event(commandInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"                tasklist.insertTask(event);","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"                Storage.save(tasklist);","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"                break;","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"            case \"DEADLINE\":","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"                Deadline deadline \u003d new Deadline(commandInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"JoelEeWH"},"content":"                tasklist.insertTask(deadline);","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"JoelEeWH"},"content":"                Storage.save(tasklist);","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"JoelEeWH"},"content":"                break;","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"JoelEeWH"},"content":"            case \"STATUS\":","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"JoelEeWH"},"content":"                tasklist.updateTask(commandInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"JoelEeWH"},"content":"                Storage.save(tasklist);","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"JoelEeWH"},"content":"                break;","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"JoelEeWH"},"content":"            case \"TODO\":","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"JoelEeWH"},"content":"                ToDo todo \u003d new ToDo(commandInput);","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"JoelEeWH"},"content":"                tasklist.insertTask(todo);","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"JoelEeWH"},"content":"                Storage.save(tasklist);","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"JoelEeWH"},"content":"                break;","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"JoelEeWH"},"content":"            case \"LIST\":","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"JoelEeWH"},"content":"                tasklist.printTaskList();","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"JoelEeWH"},"content":"                break;","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"JoelEeWH"},"content":"            case \"BYE\":","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"JoelEeWH"},"content":"                this.exit \u003d true;","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"JoelEeWH"},"content":"                break;","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"JoelEeWH"},"content":"            default:","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"JoelEeWH"},"content":"                throw new DukeException(\"Invalid Command! Please try again!\");","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"JoelEeWH"},"content":"    public boolean isExit(){","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"JoelEeWH"},"content":"        if (this.exit){","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"JoelEeWH"},"content":"            Ui.bye();","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"JoelEeWH"},"content":"        return this.exit;","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"JoelEeWH":73}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"import duke.parser.Parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"import duke.storage.Storage;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"import duke.ui.Ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"    private static Ui ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"    private static TaskList tasklist;","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"     * Constructor","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"     * Initialise gui and tasklist object","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"    public Duke() {","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"        tasklist \u003d new TaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"    public void run() throws DukeException {","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"        ui.welcome();","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"        tasklist \u003d Storage.load();","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"        while(!isExit){","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"            try {","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"                ui.printCommands();","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"                Command c \u003d Parser.parser(ui.userInput().trim()); //Takes in user input","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"                c.execute(tasklist);","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"            }catch (DukeException error){","lastModifiedDate":"2024-02-11"},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"                System.out.println(error);","lastModifiedDate":"2024-02-11"},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"            }","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"JoelEeWH"},"content":"        new Duke().run();","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JoelEeWH":41,"-":3}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.exception;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"public class DukeException  extends Exception{","lastModifiedDate":"2024-02-11"},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"    public DukeException(String error){","lastModifiedDate":"2024-02-11"},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"        super(error);","lastModifiedDate":"2024-02-11"},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"     * Helper method to check if string input is number","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"     * isInteger() method will check input if it is an Integer","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"     * Reference: https://stackoverflow.com/questions/1102891/how-to-check-if-a-string-is-numeric-in-java","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"    public static boolean isInteger(String input){","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"        try{","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"            return true;","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"        }catch (NumberFormatException e){","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"            return false;","lastModifiedDate":"2024-02-11"},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"     * Helper method to check if string input is boolean","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"     * isBoolean() method will check input if it is a boolean","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"    */","lastModifiedDate":"2024-02-11"},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"    public static boolean isBoolean(String input) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"        input \u003d input.toLowerCase();","lastModifiedDate":"2024-02-11"},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"        if (input.contains(\"false\") || input.contains(\"true\")){","lastModifiedDate":"2024-02-11"},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"            return input.equals(\"true\");","lastModifiedDate":"2024-02-11"},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"        }else{","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"            throw new DukeException(\"Enter either true or false values. True - Task completed.\");","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"     * Helper method to check if the number of parameters in the command is correct","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"    public static void checkNumParameters(String input, int num) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"        if (input.split(\"-\").length !\u003d num){","lastModifiedDate":"2024-02-11"},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"            throw new DukeException(String.format(\"Command expects \" + String.valueOf(num) + \" parameters\"));","lastModifiedDate":"2024-02-11"},{"lineNumber":42,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":43,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":44,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":45,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"JoelEeWH"},"content":"     * Helper method to check if the index to be updated is valid","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":48,"author":{"gitId":"JoelEeWH"},"content":"    public static int getIndex(String inputSplit, int maxIndex) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":49,"author":{"gitId":"JoelEeWH"},"content":"        int index;","lastModifiedDate":"2024-02-11"},{"lineNumber":50,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":51,"author":{"gitId":"JoelEeWH"},"content":"        if (!DukeException.isInteger(inputSplit.trim())){","lastModifiedDate":"2024-02-11"},{"lineNumber":52,"author":{"gitId":"JoelEeWH"},"content":"            throw new DukeException(\"Parameter must be an integer!\");","lastModifiedDate":"2024-02-13"},{"lineNumber":53,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":54,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":55,"author":{"gitId":"JoelEeWH"},"content":"        index \u003d Integer.parseInt(inputSplit.trim()) - 1;","lastModifiedDate":"2024-02-11"},{"lineNumber":56,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":57,"author":{"gitId":"JoelEeWH"},"content":"        if (maxIndex \u003c 0){","lastModifiedDate":"2024-02-11"},{"lineNumber":58,"author":{"gitId":"JoelEeWH"},"content":"            throw new DukeException(\"Error! There are no task in the list\");","lastModifiedDate":"2024-02-11"},{"lineNumber":59,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"JoelEeWH"},"content":"        if (index \u003e maxIndex){","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"JoelEeWH"},"content":"            throw new DukeException(\"Index not found! Choose a valid index!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"JoelEeWH"},"content":"        return index;","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-11"}],"authorContributionMap":{"JoelEeWH":65}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.parser;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.Command;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"public class Parser {","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"    ","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"    public Parser(){","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"        ","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"    ","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"    public static Command parser(String userinput) throws DukeException {","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"        String command;","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"        String input \u003d \"\";","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"        ","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"        if (userinput.contains(\":\")){","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"            String[] userInputArray \u003d userinput.split(\":\");","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"            if (userInputArray.length \u003c\u003d 1){","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"                throw new DukeException(\"[SYNTAX ERROR] Please input task instructions after \u0027:\u0027\\n\");","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"            command \u003d userinput.split(\":\")[0].trim();","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"            input \u003d userinput.split(\":\")[1].trim();","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"        }else{","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"            command \u003d userinput.trim();","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"Command is:\" + command); //Prints out user input","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"        ","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"        return new Command(command, input);","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"JoelEeWH":31}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.storage;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-28"},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2024-02-28"},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2024-02-28"},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.Event;","lastModifiedDate":"2024-02-28"},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2024-02-28"},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"import java.io.File;","lastModifiedDate":"2024-02-28"},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-02-28"},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"import java.io.IOException;","lastModifiedDate":"2024-02-28"},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-28"},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"public class Storage {","lastModifiedDate":"2024-02-28"},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"    private static final String separator \u003d File.separator;","lastModifiedDate":"2024-02-28"},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"    private static final String dbPath \u003d System.getProperty(\"user.dir\") + separator + \"database\";","lastModifiedDate":"2024-02-28"},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"    private static final String dbName \u003d \"database.txt\";","lastModifiedDate":"2024-02-28"},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"    private static File dbDir \u003d new File(dbPath);","lastModifiedDate":"2024-02-28"},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"    private static File dbFilePath \u003d new File(dbPath + separator + dbName);","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"     * Constructor for DbProcessor","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"     * Initialised 2 objects - dbDir and dbFilePath","lastModifiedDate":"2024-02-28"},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"    public Storage(){","lastModifiedDate":"2024-02-28"},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"     * Load the task list from the database file","lastModifiedDate":"2024-02-28"},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"     *","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"    public static TaskList load() throws DukeException{","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"        TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"        initialise();","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"        try{","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"            Scanner scan \u003d new Scanner(dbFilePath);","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"            while (scan.hasNext()){","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"                String taskLine \u003d scan.nextLine();","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"JoelEeWH"},"content":"                String [] taskElement \u003d taskLine.split(\"\\\\|\");","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"JoelEeWH"},"content":"                String taskType \u003d taskElement[1].trim();","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"JoelEeWH"},"content":"                String taskStatus \u003d taskElement[3].trim();","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"JoelEeWH"},"content":"                String taskDescription \u003d taskElement[4].trim();","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":47,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":48,"author":{"gitId":"JoelEeWH"},"content":"                switch(taskType){","lastModifiedDate":"2024-02-28"},{"lineNumber":49,"author":{"gitId":"JoelEeWH"},"content":"                    case \"T\":","lastModifiedDate":"2024-02-28"},{"lineNumber":50,"author":{"gitId":"JoelEeWH"},"content":"                        System.out.println(\"Loading ... \");","lastModifiedDate":"2024-02-28"},{"lineNumber":51,"author":{"gitId":"JoelEeWH"},"content":"                        System.out.println(\"Todo \" + taskStatus + \" \" + taskDescription);","lastModifiedDate":"2024-02-28"},{"lineNumber":52,"author":{"gitId":"JoelEeWH"},"content":"                        ToDo toTask \u003d new ToDo(taskDescription);","lastModifiedDate":"2024-02-28"},{"lineNumber":53,"author":{"gitId":"JoelEeWH"},"content":"                        if (taskStatus.contains(\"Completed\")){","lastModifiedDate":"2024-02-28"},{"lineNumber":54,"author":{"gitId":"JoelEeWH"},"content":"                            toTask.markAsDone();","lastModifiedDate":"2024-02-28"},{"lineNumber":55,"author":{"gitId":"JoelEeWH"},"content":"                        } else if (!taskStatus.contains(\"Progress\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":56,"author":{"gitId":"JoelEeWH"},"content":"                            throw new DukeException(\"Task Status is invalid. Only accept Task Completed \" +","lastModifiedDate":"2024-02-28"},{"lineNumber":57,"author":{"gitId":"JoelEeWH"},"content":"                                    \"or Task in Progress\");","lastModifiedDate":"2024-02-28"},{"lineNumber":58,"author":{"gitId":"JoelEeWH"},"content":"                        }","lastModifiedDate":"2024-02-28"},{"lineNumber":59,"author":{"gitId":"JoelEeWH"},"content":"                        tasklist.insertTask(toTask);","lastModifiedDate":"2024-02-28"},{"lineNumber":60,"author":{"gitId":"JoelEeWH"},"content":"                        break;","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":62,"author":{"gitId":"JoelEeWH"},"content":"                    case \"E\":","lastModifiedDate":"2024-02-28"},{"lineNumber":63,"author":{"gitId":"JoelEeWH"},"content":"                        String [] durationSplit \u003d taskElement[5].trim().split(\" \");","lastModifiedDate":"2024-02-28"},{"lineNumber":64,"author":{"gitId":"JoelEeWH"},"content":"                        String start \u003d durationSplit[1].trim();","lastModifiedDate":"2024-02-28"},{"lineNumber":65,"author":{"gitId":"JoelEeWH"},"content":"                        String end \u003d durationSplit[3].trim();","lastModifiedDate":"2024-02-28"},{"lineNumber":66,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"JoelEeWH"},"content":"                        System.out.println(\"Loading ... \");","lastModifiedDate":"2024-02-28"},{"lineNumber":68,"author":{"gitId":"JoelEeWH"},"content":"                        System.out.println(\"Event \" + taskStatus + \" \" + taskDescription","lastModifiedDate":"2024-02-28"},{"lineNumber":69,"author":{"gitId":"JoelEeWH"},"content":"                                + \" Start: \" + start + \" End: \" + end);","lastModifiedDate":"2024-02-28"},{"lineNumber":70,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":71,"author":{"gitId":"JoelEeWH"},"content":"                        Event eventTask \u003d new Event(taskDescription+\"-\"+start+\"-\"+end);","lastModifiedDate":"2024-02-28"},{"lineNumber":72,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":73,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":74,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"JoelEeWH"},"content":"                        if (taskStatus.contains(\"Completed\")){","lastModifiedDate":"2024-02-28"},{"lineNumber":76,"author":{"gitId":"JoelEeWH"},"content":"                            eventTask.markAsDone();","lastModifiedDate":"2024-02-28"},{"lineNumber":77,"author":{"gitId":"JoelEeWH"},"content":"                        } else if (!taskStatus.contains(\"Progress\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":78,"author":{"gitId":"JoelEeWH"},"content":"                            throw new DukeException(\"Task Status is invalid. Only accept Task Completed \" +","lastModifiedDate":"2024-02-28"},{"lineNumber":79,"author":{"gitId":"JoelEeWH"},"content":"                                    \"or Task in Progress\");","lastModifiedDate":"2024-02-28"},{"lineNumber":80,"author":{"gitId":"JoelEeWH"},"content":"                        }","lastModifiedDate":"2024-02-28"},{"lineNumber":81,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":82,"author":{"gitId":"JoelEeWH"},"content":"                        tasklist.insertTask(eventTask);","lastModifiedDate":"2024-02-28"},{"lineNumber":83,"author":{"gitId":"JoelEeWH"},"content":"                        break;","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":85,"author":{"gitId":"JoelEeWH"},"content":"                    case \"D\":","lastModifiedDate":"2024-02-28"},{"lineNumber":86,"author":{"gitId":"JoelEeWH"},"content":"                        String [] deadlineSplit \u003d taskElement[5].trim().split(\":\");","lastModifiedDate":"2024-02-28"},{"lineNumber":87,"author":{"gitId":"JoelEeWH"},"content":"                        String by \u003d deadlineSplit[1].trim();","lastModifiedDate":"2024-02-28"},{"lineNumber":88,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":89,"author":{"gitId":"JoelEeWH"},"content":"                        System.out.println(\"Loading ... \");","lastModifiedDate":"2024-02-28"},{"lineNumber":90,"author":{"gitId":"JoelEeWH"},"content":"                        System.out.println(\"Deadlline \" + taskStatus + \" \" + taskDescription","lastModifiedDate":"2024-02-28"},{"lineNumber":91,"author":{"gitId":"JoelEeWH"},"content":"                                + \" by: \" + by);","lastModifiedDate":"2024-02-28"},{"lineNumber":92,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":93,"author":{"gitId":"JoelEeWH"},"content":"                        Deadline deadlineTask \u003d new Deadline(taskDescription+\"-\"+by);","lastModifiedDate":"2024-02-28"},{"lineNumber":94,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":95,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":96,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":97,"author":{"gitId":"JoelEeWH"},"content":"                        if (taskStatus.contains(\"Completed\")){","lastModifiedDate":"2024-02-28"},{"lineNumber":98,"author":{"gitId":"JoelEeWH"},"content":"                            deadlineTask.markAsDone();","lastModifiedDate":"2024-02-28"},{"lineNumber":99,"author":{"gitId":"JoelEeWH"},"content":"                        } else if (!taskStatus.contains(\"Progress\")) {","lastModifiedDate":"2024-02-28"},{"lineNumber":100,"author":{"gitId":"JoelEeWH"},"content":"                            throw new DukeException(\"Task Status is invalid. Only accept Task Completed \" +","lastModifiedDate":"2024-02-28"},{"lineNumber":101,"author":{"gitId":"JoelEeWH"},"content":"                                    \"or Task in Progress\");","lastModifiedDate":"2024-02-28"},{"lineNumber":102,"author":{"gitId":"JoelEeWH"},"content":"                        }","lastModifiedDate":"2024-02-28"},{"lineNumber":103,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":104,"author":{"gitId":"JoelEeWH"},"content":"                        tasklist.insertTask(deadlineTask);","lastModifiedDate":"2024-02-28"},{"lineNumber":105,"author":{"gitId":"JoelEeWH"},"content":"                        break;","lastModifiedDate":"2024-02-28"},{"lineNumber":106,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":107,"author":{"gitId":"JoelEeWH"},"content":"                    default:","lastModifiedDate":"2024-02-28"},{"lineNumber":108,"author":{"gitId":"JoelEeWH"},"content":"                        throw new DukeException(\"Task type is invalid. Only accept \u0027T\u0027, \u0027D\u0027, \u0027E\u0027\");","lastModifiedDate":"2024-02-28"},{"lineNumber":109,"author":{"gitId":"JoelEeWH"},"content":"                }","lastModifiedDate":"2024-02-28"},{"lineNumber":110,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":111,"author":{"gitId":"JoelEeWH"},"content":"                System.out.println(\"END OF LINE\");","lastModifiedDate":"2024-02-28"},{"lineNumber":112,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":113,"author":{"gitId":"JoelEeWH"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":114,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":115,"author":{"gitId":"JoelEeWH"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":116,"author":{"gitId":"JoelEeWH"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-28"},{"lineNumber":117,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":118,"author":{"gitId":"JoelEeWH"},"content":"        return tasklist;","lastModifiedDate":"2024-02-28"},{"lineNumber":119,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":120,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":121,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":122,"author":{"gitId":"JoelEeWH"},"content":"    public static void save(TaskList list) throws DukeException{","lastModifiedDate":"2024-02-28"},{"lineNumber":123,"author":{"gitId":"JoelEeWH"},"content":"        initialise();","lastModifiedDate":"2024-02-28"},{"lineNumber":124,"author":{"gitId":"JoelEeWH"},"content":"        try{","lastModifiedDate":"2024-02-28"},{"lineNumber":125,"author":{"gitId":"JoelEeWH"},"content":"            FileWriter file \u003d new FileWriter(dbFilePath);","lastModifiedDate":"2024-02-28"},{"lineNumber":126,"author":{"gitId":"JoelEeWH"},"content":"            for(int i \u003d 0; i \u003c list.getTaskListSize(); i++){","lastModifiedDate":"2024-02-28"},{"lineNumber":127,"author":{"gitId":"JoelEeWH"},"content":"                System.out.println(\"writing to db: \" + list.getTask(i));","lastModifiedDate":"2024-02-28"},{"lineNumber":128,"author":{"gitId":"JoelEeWH"},"content":"                file.write(list.getTask(i).toString());","lastModifiedDate":"2024-02-28"},{"lineNumber":129,"author":{"gitId":"JoelEeWH"},"content":"                file.write(System.lineSeparator());","lastModifiedDate":"2024-02-28"},{"lineNumber":130,"author":{"gitId":"JoelEeWH"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":131,"author":{"gitId":"JoelEeWH"},"content":"            file.close();","lastModifiedDate":"2024-02-28"},{"lineNumber":132,"author":{"gitId":"JoelEeWH"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-02-28"},{"lineNumber":133,"author":{"gitId":"JoelEeWH"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-02-28"},{"lineNumber":134,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":135,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":136,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":137,"author":{"gitId":"JoelEeWH"},"content":"    public static void initialise() throws DukeException{","lastModifiedDate":"2024-02-28"},{"lineNumber":138,"author":{"gitId":"JoelEeWH"},"content":"        if (!dbDir.exists()){","lastModifiedDate":"2024-02-28"},{"lineNumber":139,"author":{"gitId":"JoelEeWH"},"content":"            dbDir.mkdirs();","lastModifiedDate":"2024-02-28"},{"lineNumber":140,"author":{"gitId":"JoelEeWH"},"content":"            System.out.println(\"Database directory don\u0027t exist. Creating directory: \" + dbDir);","lastModifiedDate":"2024-02-28"},{"lineNumber":141,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":142,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":143,"author":{"gitId":"JoelEeWH"},"content":"        if (!dbFilePath.exists()){","lastModifiedDate":"2024-02-28"},{"lineNumber":144,"author":{"gitId":"JoelEeWH"},"content":"            try{","lastModifiedDate":"2024-02-28"},{"lineNumber":145,"author":{"gitId":"JoelEeWH"},"content":"                dbFilePath.createNewFile();","lastModifiedDate":"2024-02-28"},{"lineNumber":146,"author":{"gitId":"JoelEeWH"},"content":"                System.out.println(\"Database file does not exist. Created DB file at : \" + dbFilePath);","lastModifiedDate":"2024-02-28"},{"lineNumber":147,"author":{"gitId":"JoelEeWH"},"content":"            } catch (IOException error){","lastModifiedDate":"2024-02-28"},{"lineNumber":148,"author":{"gitId":"JoelEeWH"},"content":"                throw new RuntimeException(error);","lastModifiedDate":"2024-02-28"},{"lineNumber":149,"author":{"gitId":"JoelEeWH"},"content":"            }","lastModifiedDate":"2024-02-28"},{"lineNumber":150,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-28"},{"lineNumber":151,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":152,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":153,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-28"},{"lineNumber":154,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"}],"authorContributionMap":{"JoelEeWH":154}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"    protected String by;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"     * Constructor with exception handling to ensure user input 2 parameters for this command","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"    public Deadline(String input) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"        super(input.split(\"-\")[0].trim());","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"        DukeException.checkNumParameters(input,2);","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"        this.by \u003d input.split(\"-\")[1].trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"        return \"|D|\" + super.toString() + \" |by: \" + by + \"|\";","lastModifiedDate":"2024-02-28"},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"JoelEeWH":22}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"    protected String start;","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"    protected String end;","lastModifiedDate":"2024-02-09"},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"     * Constructor with exception handling to ensure user input 3 parameters for this command","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"    public Event(String input) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"        super(input.split(\"-\")[0].trim());","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"        DukeException.checkNumParameters(input,3);","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"        String start \u003d input.split(\"-\")[1].trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"        String end \u003d input.split(\"-\")[2].trim();","lastModifiedDate":"2024-02-11"},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-02-09"},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"        return \"|E|\" + super.toString() + \" |from: \" + start + \" to: \" + end + \" |\";","lastModifiedDate":"2024-02-28"},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"JoelEeWH":26}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"public class Task {","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"    protected String description;","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"     * Constructor with exception handling","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-11"},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"    public Task(String description) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"        if (description.isEmpty()){","lastModifiedDate":"2024-02-11"},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"            throw new DukeException(\"Please input task!\");","lastModifiedDate":"2024-02-11"},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"     * Check if task is completed","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"     * @return string \"Task Completed\" if true else string \"Task in Progress\"","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-01"},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"        return (isDone ? \"Task Completed\" : \"Task in Progress\");","lastModifiedDate":"2024-02-01"},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"     * Update the task description","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"     * @param string description of task","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"    public void updateTaskDescription(String task) throws DukeException{","lastModifiedDate":"2024-02-11"},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"        if (task.isEmpty()){","lastModifiedDate":"2024-02-11"},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"            throw new DukeException(\"Description of task cannot be empty.Please input task!\\n\");","lastModifiedDate":"2024-02-11"},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"        this.description \u003d task;","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"Updated task description: \" + task);","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"    public String toString(){","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"        return \" |\" + getStatusIcon() + \"| \" + this.description;","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":44,"author":{"gitId":"JoelEeWH"},"content":"     * Mark task as done","lastModifiedDate":"2024-02-01"},{"lineNumber":45,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"JoelEeWH"},"content":"    public void markAsDone(){","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"JoelEeWH"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"JoelEeWH"},"content":"     * Mark task as not done","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"JoelEeWH"},"content":"    public void markAsNotDone(){","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"JoelEeWH"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"JoelEeWH"},"content":"     * Return status of task","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":60,"author":{"gitId":"JoelEeWH"},"content":"    public boolean statusCheck(){","lastModifiedDate":"2024-02-01"},{"lineNumber":61,"author":{"gitId":"JoelEeWH"},"content":"        return isDone;","lastModifiedDate":"2024-02-01"},{"lineNumber":62,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":63,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":65,"author":{"gitId":"JoelEeWH"},"content":"     * Return description of task","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":67,"author":{"gitId":"JoelEeWH"},"content":"    public String taskDescription(){","lastModifiedDate":"2024-02-01"},{"lineNumber":68,"author":{"gitId":"JoelEeWH"},"content":"        return description;","lastModifiedDate":"2024-02-01"},{"lineNumber":69,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":70,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"JoelEeWH":71}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-01"},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"/**","lastModifiedDate":"2024-02-01"},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":" * This class manages the list of task","lastModifiedDate":"2024-02-01"},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":" */","lastModifiedDate":"2024-02-01"},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"public class TaskList {","lastModifiedDate":"2024-02-01"},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"    private final ArrayList\u003cTask\u003e tasklist; //Create an attribute to hold a list of task","lastModifiedDate":"2024-02-28"},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"     * Constructor","lastModifiedDate":"2024-02-01"},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"    public TaskList(){","lastModifiedDate":"2024-02-01"},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"        this.tasklist \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2024-02-01"},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"     * Iterate through task list and print it out","lastModifiedDate":"2024-02-01"},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"    public void printTaskList(){","lastModifiedDate":"2024-02-01"},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"*******************Task List******************\");","lastModifiedDate":"2024-02-09"},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"******[Index]-- [Task Type] [Status] [Task description]******\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"        for(int i \u003d 0; i \u003c this.tasklist.size(); i++){","lastModifiedDate":"2024-02-01"},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"            Task task \u003d this.tasklist.get(i);","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"            System.out.println(i+1 + \"--\" + task.toString() + \"\\n\" );","lastModifiedDate":"2024-02-09"},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"\\n*******************Task List******************\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"     * @return size of task list","lastModifiedDate":"2024-02-28"},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"    public int getTaskListSize(){","lastModifiedDate":"2024-02-28"},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"        return this.tasklist.size();","lastModifiedDate":"2024-02-28"},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-28"},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"     * @return task of specific index from task list","lastModifiedDate":"2024-02-28"},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-28"},{"lineNumber":42,"author":{"gitId":"JoelEeWH"},"content":"    public Task getTask(int index){","lastModifiedDate":"2024-02-28"},{"lineNumber":43,"author":{"gitId":"JoelEeWH"},"content":"        return this.tasklist.get(index);","lastModifiedDate":"2024-02-28"},{"lineNumber":44,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-28"},{"lineNumber":45,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":46,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":47,"author":{"gitId":"JoelEeWH"},"content":"     * Insert a task into the task list","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"JoelEeWH"},"content":"    public void insertTask(Task task){","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"JoelEeWH"},"content":"        this.tasklist.add(task);","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"Added task: \" + task.taskDescription() + \" to the task list.\\n\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":52,"author":{"gitId":"JoelEeWH"},"content":"        this.printTaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":53,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":54,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":55,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":56,"author":{"gitId":"JoelEeWH"},"content":"     * Update task object in array","lastModifiedDate":"2024-02-01"},{"lineNumber":57,"author":{"gitId":"JoelEeWH"},"content":"     * @param index of task object to be modified","lastModifiedDate":"2024-02-01"},{"lineNumber":58,"author":{"gitId":"JoelEeWH"},"content":"     * @param status - True \u003d done, False \u003d not done","lastModifiedDate":"2024-02-01"},{"lineNumber":59,"author":{"gitId":"JoelEeWH"},"content":"     * Error handling","lastModifiedDate":"2024-02-11"},{"lineNumber":60,"author":{"gitId":"JoelEeWH"},"content":"     * (1) Check if command have 2 parameters","lastModifiedDate":"2024-02-11"},{"lineNumber":61,"author":{"gitId":"JoelEeWH"},"content":"     * (2) Check if 1st parameter is a valid index in task list","lastModifiedDate":"2024-02-11"},{"lineNumber":62,"author":{"gitId":"JoelEeWH"},"content":"     *               -Check if parameter is an integer","lastModifiedDate":"2024-02-11"},{"lineNumber":63,"author":{"gitId":"JoelEeWH"},"content":"     *               -Check if that integer is a valid index","lastModifiedDate":"2024-02-11"},{"lineNumber":64,"author":{"gitId":"JoelEeWH"},"content":"     * (3) Check if 2nd parameter is a boolean","lastModifiedDate":"2024-02-11"},{"lineNumber":65,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":66,"author":{"gitId":"JoelEeWH"},"content":"    public void updateTask(String input) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":67,"author":{"gitId":"JoelEeWH"},"content":"        DukeException.checkNumParameters(input,2);","lastModifiedDate":"2024-02-11"},{"lineNumber":68,"author":{"gitId":"JoelEeWH"},"content":"        String[] inputSplit \u003d input.split(\"-\");","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"JoelEeWH"},"content":"        int maxIndex \u003d this.tasklist.size() -1;","lastModifiedDate":"2024-02-11"},{"lineNumber":70,"author":{"gitId":"JoelEeWH"},"content":"        int index \u003d DukeException.getIndex(inputSplit[0], maxIndex);","lastModifiedDate":"2024-02-11"},{"lineNumber":71,"author":{"gitId":"JoelEeWH"},"content":"        boolean status \u003d DukeException.isBoolean(inputSplit[1]);","lastModifiedDate":"2024-02-11"},{"lineNumber":72,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":73,"author":{"gitId":"JoelEeWH"},"content":"        if (status){","lastModifiedDate":"2024-02-01"},{"lineNumber":74,"author":{"gitId":"JoelEeWH"},"content":"            this.tasklist.get(index).markAsDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":75,"author":{"gitId":"JoelEeWH"},"content":"        }else{","lastModifiedDate":"2024-02-01"},{"lineNumber":76,"author":{"gitId":"JoelEeWH"},"content":"            this.tasklist.get(index).markAsNotDone();","lastModifiedDate":"2024-02-01"},{"lineNumber":77,"author":{"gitId":"JoelEeWH"},"content":"        }","lastModifiedDate":"2024-02-01"},{"lineNumber":78,"author":{"gitId":"JoelEeWH"},"content":"        this.printTaskList();","lastModifiedDate":"2024-02-01"},{"lineNumber":79,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":80,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":81,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-13"},{"lineNumber":82,"author":{"gitId":"JoelEeWH"},"content":"     * Delete task based on index given","lastModifiedDate":"2024-02-13"},{"lineNumber":83,"author":{"gitId":"JoelEeWH"},"content":"     * @param input string","lastModifiedDate":"2024-02-13"},{"lineNumber":84,"author":{"gitId":"JoelEeWH"},"content":"     * @throws DukeException if input is not integer or not in task list","lastModifiedDate":"2024-02-13"},{"lineNumber":85,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-13"},{"lineNumber":86,"author":{"gitId":"JoelEeWH"},"content":"    public void deleteTask(String input) throws DukeException {","lastModifiedDate":"2024-02-13"},{"lineNumber":87,"author":{"gitId":"JoelEeWH"},"content":"        int maxIndex \u003d this.tasklist.size() -1;","lastModifiedDate":"2024-02-13"},{"lineNumber":88,"author":{"gitId":"JoelEeWH"},"content":"        int index \u003d DukeException.getIndex(input, maxIndex);","lastModifiedDate":"2024-02-13"},{"lineNumber":89,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"Deleting task: \" + this.tasklist.get(index).taskDescription());","lastModifiedDate":"2024-02-13"},{"lineNumber":90,"author":{"gitId":"JoelEeWH"},"content":"        this.tasklist.remove(index);","lastModifiedDate":"2024-02-13"},{"lineNumber":91,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"Remaining task in the list: \" + this.tasklist.size() + \"\\n\");","lastModifiedDate":"2024-02-13"},{"lineNumber":92,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-13"},{"lineNumber":93,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-11"},{"lineNumber":94,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-01"}],"authorContributionMap":{"JoelEeWH":94}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.tasks;","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"public class ToDo extends Task {","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":"     * Constructor","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2024-02-11"},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"        super(description);","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"    @Override","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"    public String toString() {","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"        return \"|T|\" + super.toString();","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"JoelEeWH":16}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoelEeWH"},"content":"package duke.ui;","lastModifiedDate":"2024-02-28"},{"lineNumber":2,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"JoelEeWH"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-01-31"},{"lineNumber":4,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":5,"author":{"gitId":"JoelEeWH"},"content":"/**","lastModifiedDate":"2024-01-31"},{"lineNumber":6,"author":{"gitId":"JoelEeWH"},"content":" * This class is to provide \"GUI\" like features","lastModifiedDate":"2024-01-31"},{"lineNumber":7,"author":{"gitId":"JoelEeWH"},"content":" */","lastModifiedDate":"2024-01-31"},{"lineNumber":8,"author":{"gitId":"JoelEeWH"},"content":"public class Ui {","lastModifiedDate":"2024-02-28"},{"lineNumber":9,"author":{"gitId":"JoelEeWH"},"content":"    private static Scanner usrinput;","lastModifiedDate":"2024-01-31"},{"lineNumber":10,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":11,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":12,"author":{"gitId":"JoelEeWH"},"content":"     * Constructor that will initialize a scanner object","lastModifiedDate":"2024-01-31"},{"lineNumber":13,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":14,"author":{"gitId":"JoelEeWH"},"content":"    public Ui(){","lastModifiedDate":"2024-02-28"},{"lineNumber":15,"author":{"gitId":"JoelEeWH"},"content":"        usrinput \u003d new Scanner(System.in);","lastModifiedDate":"2024-01-31"},{"lineNumber":16,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":17,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":18,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":19,"author":{"gitId":"JoelEeWH"},"content":"     * This method will","lastModifiedDate":"2024-01-31"},{"lineNumber":20,"author":{"gitId":"JoelEeWH"},"content":"     * (1) Print initial message","lastModifiedDate":"2024-01-31"},{"lineNumber":21,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":22,"author":{"gitId":"JoelEeWH"},"content":"    public void welcome() {","lastModifiedDate":"2024-01-31"},{"lineNumber":23,"author":{"gitId":"JoelEeWH"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":24,"author":{"gitId":"JoelEeWH"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":25,"author":{"gitId":"JoelEeWH"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":26,"author":{"gitId":"JoelEeWH"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2024-01-31"},{"lineNumber":27,"author":{"gitId":"JoelEeWH"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2024-01-31"},{"lineNumber":28,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":29,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2024-01-31"},{"lineNumber":30,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"Welcome! I\u0027m Sid \\nWhat can I do for you?\\n\");","lastModifiedDate":"2024-01-31"},{"lineNumber":31,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-02-01"},{"lineNumber":32,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-02-01"},{"lineNumber":33,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-02-01"},{"lineNumber":34,"author":{"gitId":"JoelEeWH"},"content":"     * (1) Provide a list of commands for user to input","lastModifiedDate":"2024-02-01"},{"lineNumber":35,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-02-01"},{"lineNumber":36,"author":{"gitId":"JoelEeWH"},"content":"    public void printCommands(){","lastModifiedDate":"2024-02-01"},{"lineNumber":37,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"These are the possible commands you can input:\\n\" +","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"JoelEeWH"},"content":"                \"[COMMAND SYNTAX] | EXAMPLE | Description\\n\");","lastModifiedDate":"2024-02-09"},{"lineNumber":39,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"******Commands List******\");","lastModifiedDate":"2024-02-09"},{"lineNumber":40,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"[TODO:\u003cInput Task\u003e] | TODO:read a book | Task without date/time\");","lastModifiedDate":"2024-02-09"},{"lineNumber":41,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"[DEADLINE:\u003cInput Task\u003e-\u003cDeadline\u003e] | DEADLINE:return a book-Sunday | \" +","lastModifiedDate":"2024-02-09"},{"lineNumber":42,"author":{"gitId":"JoelEeWH"},"content":"                \"Task to be completed by\");","lastModifiedDate":"2024-02-09"},{"lineNumber":43,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"[Event:\u003cInput Task\u003e-\u003cStart Time\u003e-\u003cEnd Time] | Event:project meeting-Sunday-Wed | \" +","lastModifiedDate":"2024-02-09"},{"lineNumber":44,"author":{"gitId":"JoelEeWH"},"content":"                \"Task with a duration\");","lastModifiedDate":"2024-02-09"},{"lineNumber":45,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"[LIST] | LIST | Print out task list\");","lastModifiedDate":"2024-02-01"},{"lineNumber":46,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"[DELETE:\u003cIndex\u003e] | DELETE:2 | DELETE TASK 2\");","lastModifiedDate":"2024-02-13"},{"lineNumber":47,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"[STATUS:\u003cIndex\u003e-\u003ctrue/false\u003e] | STATUS:2-false | Indicate if task is done (true/false)\");","lastModifiedDate":"2024-02-01"},{"lineNumber":48,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"[BYE] | BYE | To exit \u003d(\");","lastModifiedDate":"2024-02-01"},{"lineNumber":49,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"******Commands List******\\n\");","lastModifiedDate":"2024-02-01"},{"lineNumber":50,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"Please input commands:\");","lastModifiedDate":"2024-02-01"},{"lineNumber":51,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":52,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":53,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":54,"author":{"gitId":"JoelEeWH"},"content":"     * This method will wait for user input","lastModifiedDate":"2024-01-31"},{"lineNumber":55,"author":{"gitId":"JoelEeWH"},"content":"     * @return a string that contains user input","lastModifiedDate":"2024-01-31"},{"lineNumber":56,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":57,"author":{"gitId":"JoelEeWH"},"content":"    public String userInput(){","lastModifiedDate":"2024-01-31"},{"lineNumber":58,"author":{"gitId":"JoelEeWH"},"content":"        return usrinput.nextLine().toUpperCase();","lastModifiedDate":"2024-01-31"},{"lineNumber":59,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":60,"author":{"gitId":"JoelEeWH"},"content":"","lastModifiedDate":"2024-01-31"},{"lineNumber":61,"author":{"gitId":"JoelEeWH"},"content":"    /**","lastModifiedDate":"2024-01-31"},{"lineNumber":62,"author":{"gitId":"JoelEeWH"},"content":"     * This method will","lastModifiedDate":"2024-01-31"},{"lineNumber":63,"author":{"gitId":"JoelEeWH"},"content":"     * (1) Print an exit message","lastModifiedDate":"2024-02-01"},{"lineNumber":64,"author":{"gitId":"JoelEeWH"},"content":"     * (2) End the program","lastModifiedDate":"2024-01-31"},{"lineNumber":65,"author":{"gitId":"JoelEeWH"},"content":"     */","lastModifiedDate":"2024-01-31"},{"lineNumber":66,"author":{"gitId":"JoelEeWH"},"content":"    public static void bye() {","lastModifiedDate":"2024-02-28"},{"lineNumber":67,"author":{"gitId":"JoelEeWH"},"content":"        System.out.println(\"Farewell!! Till we meet again.............\");","lastModifiedDate":"2024-01-31"},{"lineNumber":68,"author":{"gitId":"JoelEeWH"},"content":"    }","lastModifiedDate":"2024-01-31"},{"lineNumber":69,"author":{"gitId":"JoelEeWH"},"content":"}","lastModifiedDate":"2024-01-31"}],"authorContributionMap":{"JoelEeWH":69}}]
