[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"# duke.Duke project template","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-04-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jelemii":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"jelemii"},"content":"    mainClass.set(\"Duke\")","lastModifiedDate":"2024-04-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jelemii":1,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"[T][X] zasd","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"[D][ ] a (by: a)","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"[D][ ] z (by: b)","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":"[D][ ] a (by: a)","lastModifiedDate":"2024-04-22"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":"[T][ ] asd","lastModifiedDate":"2024-04-22"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"[D][ ] f (by: Apr 22 2024 11:42)","lastModifiedDate":"2024-04-23"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"[D][ ] c (by: Dec 1 2024 11:59pm)","lastModifiedDate":"2024-04-23"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":"[D][ ] dsa (by: Dec 2 2024 12:00am)","lastModifiedDate":"2024-04-23"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":"[D][ ] sdfa (by: Dec 1 2024 12:00am)","lastModifiedDate":"2024-04-23"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":"[D][ ] asdfa (by: Dec 1 2025 01:00pm)","lastModifiedDate":"2024-04-23"}],"authorContributionMap":{"jelemii":10}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"# duke.Duke User Guide","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"jelemii":1,"-":29}},{"path":"src/main/java/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package commands;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"import storage.Storage;","lastModifiedDate":"2024-04-22"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":"import tasks.Deadline;","lastModifiedDate":"2024-04-22"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":"import tasks.Task;","lastModifiedDate":"2024-04-22"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-04-22"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"import ui.Ui;","lastModifiedDate":"2024-04-22"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-22"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":" * The command to add a new deadline task into the task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2024-04-22"},{"lineNumber":15,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"    private final String description;","lastModifiedDate":"2024-04-22"},{"lineNumber":17,"author":{"gitId":"jelemii"},"content":"    private final String by;","lastModifiedDate":"2024-04-22"},{"lineNumber":18,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":19,"author":{"gitId":"jelemii"},"content":"    public AddDeadlineCommand(String description, String by) {","lastModifiedDate":"2024-04-22"},{"lineNumber":20,"author":{"gitId":"jelemii"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-04-22"},{"lineNumber":21,"author":{"gitId":"jelemii"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-04-22"},{"lineNumber":22,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-22"},{"lineNumber":23,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":24,"author":{"gitId":"jelemii"},"content":"    @Override","lastModifiedDate":"2024-04-22"},{"lineNumber":25,"author":{"gitId":"jelemii"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-04-22"},{"lineNumber":26,"author":{"gitId":"jelemii"},"content":"        Task task \u003d new Deadline(description, by);","lastModifiedDate":"2024-04-22"},{"lineNumber":27,"author":{"gitId":"jelemii"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-04-22"},{"lineNumber":28,"author":{"gitId":"jelemii"},"content":"        Ui.showTaskAdded(task, tasks.getSize());","lastModifiedDate":"2024-04-22"},{"lineNumber":29,"author":{"gitId":"jelemii"},"content":"        storage.saveTaskToFile(tasks.getAllTasks());","lastModifiedDate":"2024-04-22"},{"lineNumber":30,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"jelemii":31}},{"path":"src/main/java/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package commands;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"import commands.Command;","lastModifiedDate":"2024-04-22"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":"import storage.Storage;","lastModifiedDate":"2024-04-22"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":"import tasks.Event;","lastModifiedDate":"2024-04-22"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"import tasks.Task;","lastModifiedDate":"2024-04-22"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-04-22"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":"import ui.Ui;","lastModifiedDate":"2024-04-22"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-22"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":" * The command to add a new event task into the task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":15,"author":{"gitId":"jelemii"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2024-04-22"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"    private final String description;","lastModifiedDate":"2024-04-22"},{"lineNumber":17,"author":{"gitId":"jelemii"},"content":"    private final String from;","lastModifiedDate":"2024-04-22"},{"lineNumber":18,"author":{"gitId":"jelemii"},"content":"    private final String to;","lastModifiedDate":"2024-04-22"},{"lineNumber":19,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":20,"author":{"gitId":"jelemii"},"content":"    public AddEventCommand(String description, String from, String to) {","lastModifiedDate":"2024-04-22"},{"lineNumber":21,"author":{"gitId":"jelemii"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-04-22"},{"lineNumber":22,"author":{"gitId":"jelemii"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-04-22"},{"lineNumber":23,"author":{"gitId":"jelemii"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-04-22"},{"lineNumber":24,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-22"},{"lineNumber":25,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":26,"author":{"gitId":"jelemii"},"content":"    @Override","lastModifiedDate":"2024-04-22"},{"lineNumber":27,"author":{"gitId":"jelemii"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-04-22"},{"lineNumber":28,"author":{"gitId":"jelemii"},"content":"        Task task \u003d new Event(description, from, to);","lastModifiedDate":"2024-04-22"},{"lineNumber":29,"author":{"gitId":"jelemii"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-04-22"},{"lineNumber":30,"author":{"gitId":"jelemii"},"content":"        Ui.showTaskAdded(task, tasks.getSize());","lastModifiedDate":"2024-04-22"},{"lineNumber":31,"author":{"gitId":"jelemii"},"content":"        storage.saveTaskToFile(tasks.getAllTasks());","lastModifiedDate":"2024-04-22"},{"lineNumber":32,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"jelemii":33}},{"path":"src/main/java/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package commands;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"import commands.Command;","lastModifiedDate":"2024-04-22"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":"import storage.Storage;","lastModifiedDate":"2024-04-22"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":"import tasks.Task;","lastModifiedDate":"2024-04-22"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-04-22"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"import tasks.Todo;","lastModifiedDate":"2024-04-22"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":"import ui.Ui;","lastModifiedDate":"2024-04-22"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-22"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":" * The command to add a new to-do task into the task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":15,"author":{"gitId":"jelemii"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2024-04-22"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"    private final String description;","lastModifiedDate":"2024-04-22"},{"lineNumber":17,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":18,"author":{"gitId":"jelemii"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2024-04-22"},{"lineNumber":19,"author":{"gitId":"jelemii"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-04-22"},{"lineNumber":20,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-22"},{"lineNumber":21,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":22,"author":{"gitId":"jelemii"},"content":"    @Override","lastModifiedDate":"2024-04-22"},{"lineNumber":23,"author":{"gitId":"jelemii"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-04-22"},{"lineNumber":24,"author":{"gitId":"jelemii"},"content":"        Task task \u003d new Todo(description);","lastModifiedDate":"2024-04-22"},{"lineNumber":25,"author":{"gitId":"jelemii"},"content":"        tasks.addTask(task);","lastModifiedDate":"2024-04-22"},{"lineNumber":26,"author":{"gitId":"jelemii"},"content":"        Ui.showTaskAdded(task, tasks.getSize());","lastModifiedDate":"2024-04-22"},{"lineNumber":27,"author":{"gitId":"jelemii"},"content":"        storage.saveTaskToFile(tasks.getAllTasks());","lastModifiedDate":"2024-04-22"},{"lineNumber":28,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"jelemii":29}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package commands;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"import duke.DukeException;","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"import storage.Storage;","lastModifiedDate":"2024-04-22"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-04-22"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":"import ui.Ui;","lastModifiedDate":"2024-04-22"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-22"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":" * An abstract class which is extended by all command types in the application. \\","lastModifiedDate":"2024-04-24"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":" * Represents a command to be executed such as actions and modifications on the tasks and task lists.","lastModifiedDate":"2024-04-24"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":"public abstract class Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":15,"author":{"gitId":"jelemii"},"content":"     * Converts a string command to uppercase and match it to its enum CommandType.","lastModifiedDate":"2024-04-24"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"     * @param command The string command to be converted.","lastModifiedDate":"2024-04-24"},{"lineNumber":17,"author":{"gitId":"jelemii"},"content":"     * @return The CommandType enum which matches the command.","lastModifiedDate":"2024-04-24"},{"lineNumber":18,"author":{"gitId":"jelemii"},"content":"     * @throws DukeException If the string command does not match to any of the CommandType enum.","lastModifiedDate":"2024-04-24"},{"lineNumber":19,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":20,"author":{"gitId":"jelemii"},"content":"    public static CommandType commands(String command) throws DukeException {","lastModifiedDate":"2024-04-22"},{"lineNumber":21,"author":{"gitId":"jelemii"},"content":"        try {","lastModifiedDate":"2024-04-22"},{"lineNumber":22,"author":{"gitId":"jelemii"},"content":"            return CommandType.valueOf(command.toUpperCase());","lastModifiedDate":"2024-04-22"},{"lineNumber":23,"author":{"gitId":"jelemii"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-22"},{"lineNumber":24,"author":{"gitId":"jelemii"},"content":"            throw new DukeException(\"Invalid command. Please try again.\"","lastModifiedDate":"2024-04-22"},{"lineNumber":25,"author":{"gitId":"jelemii"},"content":"                    + \" Remember to leave a space after each command.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":26,"author":{"gitId":"jelemii"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-22"},{"lineNumber":28,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":29,"author":{"gitId":"jelemii"},"content":"    public abstract void executeCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2024-04-22"},{"lineNumber":30,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":31,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":32,"author":{"gitId":"jelemii"},"content":"     * A default exit boolean set as false for the application to continue the interaction loop.","lastModifiedDate":"2024-04-24"},{"lineNumber":33,"author":{"gitId":"jelemii"},"content":"     * @return false as long as the command is not to exit the application.","lastModifiedDate":"2024-04-24"},{"lineNumber":34,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":35,"author":{"gitId":"jelemii"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-04-22"},{"lineNumber":36,"author":{"gitId":"jelemii"},"content":"        return false;","lastModifiedDate":"2024-04-22"},{"lineNumber":37,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-22"},{"lineNumber":38,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":39,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":40,"author":{"gitId":"jelemii"},"content":"     * Represents all possible commands to be used in the application.","lastModifiedDate":"2024-04-24"},{"lineNumber":41,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":42,"author":{"gitId":"jelemii"},"content":"    public enum CommandType {","lastModifiedDate":"2024-04-22"},{"lineNumber":43,"author":{"gitId":"jelemii"},"content":"        TODO,","lastModifiedDate":"2024-04-22"},{"lineNumber":44,"author":{"gitId":"jelemii"},"content":"        DEADLINE,","lastModifiedDate":"2024-04-22"},{"lineNumber":45,"author":{"gitId":"jelemii"},"content":"        EVENT,","lastModifiedDate":"2024-04-22"},{"lineNumber":46,"author":{"gitId":"jelemii"},"content":"        DELETE,","lastModifiedDate":"2024-04-22"},{"lineNumber":47,"author":{"gitId":"jelemii"},"content":"        MARK,","lastModifiedDate":"2024-04-22"},{"lineNumber":48,"author":{"gitId":"jelemii"},"content":"        UNMARK,","lastModifiedDate":"2024-04-22"},{"lineNumber":49,"author":{"gitId":"jelemii"},"content":"        LIST,","lastModifiedDate":"2024-04-22"},{"lineNumber":50,"author":{"gitId":"jelemii"},"content":"        BYE","lastModifiedDate":"2024-04-22"},{"lineNumber":51,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-22"},{"lineNumber":52,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-04-22"},{"lineNumber":53,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"}],"authorContributionMap":{"jelemii":53}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package commands;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"import commands.Command;","lastModifiedDate":"2024-04-22"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":"import storage.Storage;","lastModifiedDate":"2024-04-22"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-04-22"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"import ui.Ui;","lastModifiedDate":"2024-04-22"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-22"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":" * The command to delete a task in the task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2024-04-22"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":"    private final int index;","lastModifiedDate":"2024-04-22"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":15,"author":{"gitId":"jelemii"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2024-04-22"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-04-22"},{"lineNumber":17,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-22"},{"lineNumber":18,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":19,"author":{"gitId":"jelemii"},"content":"    @Override","lastModifiedDate":"2024-04-22"},{"lineNumber":20,"author":{"gitId":"jelemii"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2024-04-22"},{"lineNumber":21,"author":{"gitId":"jelemii"},"content":"        Ui.showTaskDeleted(tasks.getTask(index), tasks.getSize());","lastModifiedDate":"2024-04-22"},{"lineNumber":22,"author":{"gitId":"jelemii"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2024-04-22"},{"lineNumber":23,"author":{"gitId":"jelemii"},"content":"        storage.saveTaskToFile(tasks.getAllTasks());","lastModifiedDate":"2024-04-22"},{"lineNumber":24,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"jelemii":25}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package commands;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"import commands.Command;","lastModifiedDate":"2024-04-22"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":"import storage.Storage;","lastModifiedDate":"2024-04-22"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-04-22"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"import ui.Ui;","lastModifiedDate":"2024-04-22"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":" * The command to exit the application.","lastModifiedDate":"2024-04-24"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2024-04-22"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":"    @Override","lastModifiedDate":"2024-04-22"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-04-22"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":"        ui.showGoodbyeMessage();","lastModifiedDate":"2024-04-22"},{"lineNumber":15,"author":{"gitId":"jelemii"},"content":"        isExit();","lastModifiedDate":"2024-04-22"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-22"},{"lineNumber":17,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":18,"author":{"gitId":"jelemii"},"content":"    @Override","lastModifiedDate":"2024-04-22"},{"lineNumber":19,"author":{"gitId":"jelemii"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-04-22"},{"lineNumber":20,"author":{"gitId":"jelemii"},"content":"        return true;","lastModifiedDate":"2024-04-22"},{"lineNumber":21,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-22"},{"lineNumber":22,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"jelemii":22}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package commands;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"import commands.Command;","lastModifiedDate":"2024-04-22"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":"import storage.Storage;","lastModifiedDate":"2024-04-22"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-04-22"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"import ui.Ui;","lastModifiedDate":"2024-04-22"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":" * The command to display all tasks in the task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2024-04-22"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":"    @Override","lastModifiedDate":"2024-04-22"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2024-04-22"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":"        ui.showList(tasks);","lastModifiedDate":"2024-04-22"},{"lineNumber":15,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-22"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"jelemii":16}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package commands;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"import commands.Command;","lastModifiedDate":"2024-04-22"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":"import duke.DukeException;","lastModifiedDate":"2024-04-22"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":"import storage.Storage;","lastModifiedDate":"2024-04-22"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"import tasks.Task;","lastModifiedDate":"2024-04-22"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-04-22"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":"import ui.Ui;","lastModifiedDate":"2024-04-22"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-22"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":" * The command to mark a task in the task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-04-22"},{"lineNumber":15,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"    private final int index;","lastModifiedDate":"2024-04-22"},{"lineNumber":17,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":18,"author":{"gitId":"jelemii"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2024-04-22"},{"lineNumber":19,"author":{"gitId":"jelemii"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-04-22"},{"lineNumber":20,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-22"},{"lineNumber":21,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":22,"author":{"gitId":"jelemii"},"content":"    @Override","lastModifiedDate":"2024-04-22"},{"lineNumber":23,"author":{"gitId":"jelemii"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2024-04-22"},{"lineNumber":24,"author":{"gitId":"jelemii"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-04-22"},{"lineNumber":25,"author":{"gitId":"jelemii"},"content":"        task.markAsDone();","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"jelemii"},"content":"        ui.showTaskMarked(task);","lastModifiedDate":"2024-04-22"},{"lineNumber":27,"author":{"gitId":"jelemii"},"content":"        storage.saveTaskToFile(tasks.getAllTasks());","lastModifiedDate":"2024-04-22"},{"lineNumber":28,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"jelemii":29}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package commands;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"import commands.Command;","lastModifiedDate":"2024-04-22"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":"import duke.DukeException;","lastModifiedDate":"2024-04-22"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":"import storage.Storage;","lastModifiedDate":"2024-04-22"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"import tasks.Task;","lastModifiedDate":"2024-04-22"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-04-22"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":"import ui.Ui;","lastModifiedDate":"2024-04-22"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-22"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":" * The command to unmark a task in the task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2024-04-22"},{"lineNumber":15,"author":{"gitId":"jelemii"},"content":"    private final int index;","lastModifiedDate":"2024-04-22"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":17,"author":{"gitId":"jelemii"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2024-04-22"},{"lineNumber":18,"author":{"gitId":"jelemii"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-04-22"},{"lineNumber":19,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-22"},{"lineNumber":20,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":21,"author":{"gitId":"jelemii"},"content":"    @Override","lastModifiedDate":"2024-04-22"},{"lineNumber":22,"author":{"gitId":"jelemii"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2024-04-22"},{"lineNumber":23,"author":{"gitId":"jelemii"},"content":"        Task task \u003d tasks.getTask(index);","lastModifiedDate":"2024-04-22"},{"lineNumber":24,"author":{"gitId":"jelemii"},"content":"        task.unmarkAsDone();","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"jelemii"},"content":"        ui.showTaskUnmarked(task);","lastModifiedDate":"2024-04-22"},{"lineNumber":26,"author":{"gitId":"jelemii"},"content":"        storage.saveTaskToFile(tasks.getAllTasks());","lastModifiedDate":"2024-04-22"},{"lineNumber":27,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"jelemii":28}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package duke;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"import commands.Command;","lastModifiedDate":"2024-04-22"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":"import parser.Parser;","lastModifiedDate":"2024-04-22"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":"import storage.Storage;","lastModifiedDate":"2024-04-22"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-04-22"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"import ui.Ui;","lastModifiedDate":"2024-04-22"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-10"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-02-10"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":" * The main class which consist of the main method to run the Duke application.","lastModifiedDate":"2024-04-24"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"    private final Storage storage;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"jelemii"},"content":"    private final TaskList tasks;","lastModifiedDate":"2024-04-22"},{"lineNumber":18,"author":{"gitId":"jelemii"},"content":"    private final Ui ui;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"jelemii"},"content":"    private final Parser parser;","lastModifiedDate":"2024-04-22"},{"lineNumber":20,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":22,"author":{"gitId":"jelemii"},"content":"     * Loads tasks from the file path given by the main method","lastModifiedDate":"2024-04-24"},{"lineNumber":23,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":24,"author":{"gitId":"jelemii"},"content":"     * @param filePath the path to the file which stores all the saved tasks","lastModifiedDate":"2024-04-24"},{"lineNumber":25,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":26,"author":{"gitId":"jelemii"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"jelemii"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"jelemii"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"jelemii"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-04-22"},{"lineNumber":30,"author":{"gitId":"jelemii"},"content":"        parser \u003d new Parser(tasks);","lastModifiedDate":"2024-04-22"},{"lineNumber":31,"author":{"gitId":"jelemii"},"content":"        try {","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"jelemii"},"content":"            tasks.loadTasks(storage.loadFileContents());","lastModifiedDate":"2024-04-22"},{"lineNumber":33,"author":{"gitId":"jelemii"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"jelemii"},"content":"            ui.fileNotFoundError();","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"jelemii"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"jelemii"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-04-22"},{"lineNumber":39,"author":{"gitId":"jelemii"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2024-04-22"},{"lineNumber":40,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-22"},{"lineNumber":41,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":42,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":43,"author":{"gitId":"jelemii"},"content":"     * runs the main loop of the application","lastModifiedDate":"2024-04-24"},{"lineNumber":44,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":45,"author":{"gitId":"jelemii"},"content":"    public void run() {","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"jelemii"},"content":"        ui.greetUser();","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"jelemii"},"content":"        boolean isNotExit \u003d true;","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"jelemii"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-04-22"},{"lineNumber":49,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"jelemii"},"content":"        while (isNotExit) {","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"jelemii"},"content":"            String input \u003d scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2024-04-22"},{"lineNumber":53,"author":{"gitId":"jelemii"},"content":"            try {","lastModifiedDate":"2024-04-22"},{"lineNumber":54,"author":{"gitId":"jelemii"},"content":"                Command command \u003d parser.parseInput(input);","lastModifiedDate":"2024-04-22"},{"lineNumber":55,"author":{"gitId":"jelemii"},"content":"                command.executeCommand(tasks, ui, storage);","lastModifiedDate":"2024-04-22"},{"lineNumber":56,"author":{"gitId":"jelemii"},"content":"                isNotExit \u003d !(command.isExit());","lastModifiedDate":"2024-04-22"},{"lineNumber":57,"author":{"gitId":"jelemii"},"content":"            } catch (IOException | DukeException e) {","lastModifiedDate":"2024-04-22"},{"lineNumber":58,"author":{"gitId":"jelemii"},"content":"                ui.showErrorMessage(e.getMessage());","lastModifiedDate":"2024-04-22"},{"lineNumber":59,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"jelemii"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"jelemii"},"content":"        scanner.close();","lastModifiedDate":"2024-04-22"},{"lineNumber":63,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":64,"author":{"gitId":"jelemii"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"jelemii"},"content":"            storage.saveTaskToFile(tasks.getAllTasks());","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"jelemii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"jelemii"},"content":"            ui.showErrorMessage(\"Error saving tasks to file.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":68,"author":{"gitId":"jelemii"},"content":"        }","lastModifiedDate":"2024-02-11"},{"lineNumber":69,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jelemii":68,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package duke;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":" * Handles exceptions specific to Duke application such as validating user input and file input format","lastModifiedDate":"2024-04-24"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":"        super(message);","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"jelemii":10}},{"path":"src/main/java/parser/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package parser;","lastModifiedDate":"2024-04-23"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-23"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"import duke.DukeException;","lastModifiedDate":"2024-04-23"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-23"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-23"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-23"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-23"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-23"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-23"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":"import java.util.List;","lastModifiedDate":"2024-04-23"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-23"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":" * A date parser class which takes in input from deadline and event commands which requires dates and time input.","lastModifiedDate":"2024-04-24"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":" * It will take these input and parse in date format.","lastModifiedDate":"2024-04-24"},{"lineNumber":15,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-24"},{"lineNumber":17,"author":{"gitId":"jelemii"},"content":"public class DateParser {","lastModifiedDate":"2024-04-23"},{"lineNumber":18,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":19,"author":{"gitId":"jelemii"},"content":"     * A list of acceptable date time formats to be considered valid","lastModifiedDate":"2024-04-24"},{"lineNumber":20,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":21,"author":{"gitId":"jelemii"},"content":"    private static final List\u003cDateTimeFormatter\u003e DATE_TIME_FORMATS \u003d Arrays.asList(","lastModifiedDate":"2024-04-23"},{"lineNumber":22,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":23,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":24,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":25,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":26,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":27,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":28,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":29,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":30,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":31,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d HH:mm\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":32,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/M/d HHmm\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":33,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/M/d HH:mm\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":34,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":35,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy HH:mm\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":36,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":37,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy HH:mm\")","lastModifiedDate":"2024-04-23"},{"lineNumber":38,"author":{"gitId":"jelemii"},"content":"    );","lastModifiedDate":"2024-04-23"},{"lineNumber":39,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":40,"author":{"gitId":"jelemii"},"content":"     * A list of acceptable date formats to be considered valid","lastModifiedDate":"2024-04-24"},{"lineNumber":41,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":42,"author":{"gitId":"jelemii"},"content":"    private static final List\u003cDateTimeFormatter\u003e DATE_FORMATS \u003d Arrays.asList(","lastModifiedDate":"2024-04-23"},{"lineNumber":43,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":44,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":45,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":46,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":47,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-M-d\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":48,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"yyyy/M/d\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":49,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"d-M-yyyy\"),","lastModifiedDate":"2024-04-23"},{"lineNumber":50,"author":{"gitId":"jelemii"},"content":"            DateTimeFormatter.ofPattern(\"d/M/yyyy\")","lastModifiedDate":"2024-04-23"},{"lineNumber":51,"author":{"gitId":"jelemii"},"content":"    );","lastModifiedDate":"2024-04-23"},{"lineNumber":52,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-23"},{"lineNumber":53,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":54,"author":{"gitId":"jelemii"},"content":"     * Tries to parse the input as date time format, if input format is invalid,","lastModifiedDate":"2024-04-24"},{"lineNumber":55,"author":{"gitId":"jelemii"},"content":"     * Try again by parsing as only date. If input is only date, 23:59 is assumed to be the time of the deadline","lastModifiedDate":"2024-04-24"},{"lineNumber":56,"author":{"gitId":"jelemii"},"content":"     * If input fails again, throw a DukeException.","lastModifiedDate":"2024-04-24"},{"lineNumber":57,"author":{"gitId":"jelemii"},"content":"     * All input in an acceptable valid format will be reformatted as (\"MMM d yyyy hh:mma\") to be outputted","lastModifiedDate":"2024-04-24"},{"lineNumber":58,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":59,"author":{"gitId":"jelemii"},"content":"     * @param dateInput contains the input datetime or only date to be reformatted","lastModifiedDate":"2024-04-24"},{"lineNumber":60,"author":{"gitId":"jelemii"},"content":"     * @return the reformatted input in (\"MMM d yyyy hh:mma\") format","lastModifiedDate":"2024-04-24"},{"lineNumber":61,"author":{"gitId":"jelemii"},"content":"     * @throws DukeException input is not in an acceptable valid format and cannot be parsed","lastModifiedDate":"2024-04-24"},{"lineNumber":62,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":63,"author":{"gitId":"jelemii"},"content":"    public static String formatDateInput(String dateInput) throws DukeException {","lastModifiedDate":"2024-04-23"},{"lineNumber":64,"author":{"gitId":"jelemii"},"content":"        try {","lastModifiedDate":"2024-04-23"},{"lineNumber":65,"author":{"gitId":"jelemii"},"content":"            LocalDateTime dateTime \u003d parseDateTime(dateInput);","lastModifiedDate":"2024-04-23"},{"lineNumber":66,"author":{"gitId":"jelemii"},"content":"            return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mma\"));","lastModifiedDate":"2024-04-23"},{"lineNumber":67,"author":{"gitId":"jelemii"},"content":"        } catch (DukeException tryOnlyDate) {","lastModifiedDate":"2024-04-23"},{"lineNumber":68,"author":{"gitId":"jelemii"},"content":"            //If dateTime is invalid then try parsing it as only date","lastModifiedDate":"2024-04-23"},{"lineNumber":69,"author":{"gitId":"jelemii"},"content":"            try {","lastModifiedDate":"2024-04-23"},{"lineNumber":70,"author":{"gitId":"jelemii"},"content":"                LocalDate date \u003d parseDate(dateInput);","lastModifiedDate":"2024-04-23"},{"lineNumber":71,"author":{"gitId":"jelemii"},"content":"                //if no time is given, assume deadline time to be 23:59","lastModifiedDate":"2024-04-23"},{"lineNumber":72,"author":{"gitId":"jelemii"},"content":"                return date.atTime(23, 59).format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mma\"));","lastModifiedDate":"2024-04-23"},{"lineNumber":73,"author":{"gitId":"jelemii"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-04-23"},{"lineNumber":74,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"Invalid date/time input format. Please use a valid format, e.g., dd-MM-yyyy HH:mm or dd-MM-yyyy\");","lastModifiedDate":"2024-04-23"},{"lineNumber":75,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-04-23"},{"lineNumber":76,"author":{"gitId":"jelemii"},"content":"        }","lastModifiedDate":"2024-04-23"},{"lineNumber":77,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-23"},{"lineNumber":78,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-23"},{"lineNumber":79,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":80,"author":{"gitId":"jelemii"},"content":"     * Tries to parse the date input in a LocalDateTime through the list of predefined valid date time formats.","lastModifiedDate":"2024-04-24"},{"lineNumber":81,"author":{"gitId":"jelemii"},"content":"     * Loop through the list, ignore parse exceptions to unmatched format until it matches a valid format in the list.","lastModifiedDate":"2024-04-24"},{"lineNumber":82,"author":{"gitId":"jelemii"},"content":"     * Once a valid format matches, return the parsed input.","lastModifiedDate":"2024-04-24"},{"lineNumber":83,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":84,"author":{"gitId":"jelemii"},"content":"     * @param dateInput contains the input datetime","lastModifiedDate":"2024-04-24"},{"lineNumber":85,"author":{"gitId":"jelemii"},"content":"     * @return the parsed input","lastModifiedDate":"2024-04-24"},{"lineNumber":86,"author":{"gitId":"jelemii"},"content":"     * @throws DukeException input is not in an acceptable valid datetime format and cannot be parsed","lastModifiedDate":"2024-04-24"},{"lineNumber":87,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":88,"author":{"gitId":"jelemii"},"content":"    public static LocalDateTime parseDateTime(String dateInput) throws DukeException {","lastModifiedDate":"2024-04-24"},{"lineNumber":89,"author":{"gitId":"jelemii"},"content":"        for (DateTimeFormatter formatter : DATE_TIME_FORMATS) {","lastModifiedDate":"2024-04-24"},{"lineNumber":90,"author":{"gitId":"jelemii"},"content":"            try {","lastModifiedDate":"2024-04-23"},{"lineNumber":91,"author":{"gitId":"jelemii"},"content":"                return LocalDateTime.parse(dateInput, formatter);","lastModifiedDate":"2024-04-24"},{"lineNumber":92,"author":{"gitId":"jelemii"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-04-23"},{"lineNumber":93,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-23"},{"lineNumber":94,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-04-23"},{"lineNumber":95,"author":{"gitId":"jelemii"},"content":"        }","lastModifiedDate":"2024-04-23"},{"lineNumber":96,"author":{"gitId":"jelemii"},"content":"        throw new DukeException(\"Invalid date-time format. Please input a valid format. e.g. dd-MM-yyyy HH:mm\");","lastModifiedDate":"2024-04-24"},{"lineNumber":97,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-23"},{"lineNumber":98,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-23"},{"lineNumber":99,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":100,"author":{"gitId":"jelemii"},"content":"     * Tries to parse the date input in a LocalDate through the list of predefined valid date time formats.","lastModifiedDate":"2024-04-24"},{"lineNumber":101,"author":{"gitId":"jelemii"},"content":"     * Loop through the list, ignore parse exceptions to unmatched format until it matches a valid format in the list.","lastModifiedDate":"2024-04-24"},{"lineNumber":102,"author":{"gitId":"jelemii"},"content":"     * Once a valid format matches, return the parsed input.","lastModifiedDate":"2024-04-24"},{"lineNumber":103,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":104,"author":{"gitId":"jelemii"},"content":"     * @param dateInput contains the input date","lastModifiedDate":"2024-04-24"},{"lineNumber":105,"author":{"gitId":"jelemii"},"content":"     * @return the parsed input","lastModifiedDate":"2024-04-24"},{"lineNumber":106,"author":{"gitId":"jelemii"},"content":"     * @throws DukeException input is not in an acceptable valid date format and cannot be parsed","lastModifiedDate":"2024-04-24"},{"lineNumber":107,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":108,"author":{"gitId":"jelemii"},"content":"    public static LocalDate parseDate(String dateInput) throws DukeException {","lastModifiedDate":"2024-04-24"},{"lineNumber":109,"author":{"gitId":"jelemii"},"content":"        for (DateTimeFormatter formatter : DATE_FORMATS) {","lastModifiedDate":"2024-04-24"},{"lineNumber":110,"author":{"gitId":"jelemii"},"content":"            try {","lastModifiedDate":"2024-04-23"},{"lineNumber":111,"author":{"gitId":"jelemii"},"content":"                return LocalDate.parse(dateInput, formatter);","lastModifiedDate":"2024-04-24"},{"lineNumber":112,"author":{"gitId":"jelemii"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2024-04-23"},{"lineNumber":113,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-23"},{"lineNumber":114,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-04-23"},{"lineNumber":115,"author":{"gitId":"jelemii"},"content":"        }","lastModifiedDate":"2024-04-23"},{"lineNumber":116,"author":{"gitId":"jelemii"},"content":"        throw new DukeException(\"Invalid date format. Please input a valid format. e.g. dd-MM-yyyy\");","lastModifiedDate":"2024-04-24"},{"lineNumber":117,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-23"},{"lineNumber":118,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-24"},{"lineNumber":119,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-04-23"}],"authorContributionMap":{"jelemii":119}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package parser;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"import commands.*;","lastModifiedDate":"2024-04-22"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":"import duke.DukeException;","lastModifiedDate":"2024-04-22"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":"import tasks.*;","lastModifiedDate":"2024-04-22"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":" * A parser class that takes in a string line from a file and convert it to tasks.","lastModifiedDate":"2024-04-24"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":" * It can also take in string input from user and parse it as a command to be executed.","lastModifiedDate":"2024-04-24"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":"public class Parser {","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-04-22"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":"    public Parser(TaskList taskList) {","lastModifiedDate":"2024-04-22"},{"lineNumber":15,"author":{"gitId":"jelemii"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2024-04-22"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-22"},{"lineNumber":17,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":18,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":19,"author":{"gitId":"jelemii"},"content":"     * Parse a string line from a file which contains the task type and contents","lastModifiedDate":"2024-04-24"},{"lineNumber":20,"author":{"gitId":"jelemii"},"content":"     * and reconstruct the correct task type.","lastModifiedDate":"2024-04-24"},{"lineNumber":21,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":22,"author":{"gitId":"jelemii"},"content":"     * @param line A string from the file which contains the tasks type and contents of the task","lastModifiedDate":"2024-04-24"},{"lineNumber":23,"author":{"gitId":"jelemii"},"content":"     * @return The task that is reconstructed from the string line","lastModifiedDate":"2024-04-24"},{"lineNumber":24,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":25,"author":{"gitId":"jelemii"},"content":"    public static Task parseTaskFromFile(String line) {","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"jelemii"},"content":"        String type \u003d line.substring(1, 2);","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"jelemii"},"content":"        boolean isDone \u003d line.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"jelemii"},"content":"        switch (type) {","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"jelemii"},"content":"        case \"T\" -\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"jelemii"},"content":"            String description \u003d line.substring(7);","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"jelemii"},"content":"            Task todo \u003d new Todo(description);","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"jelemii"},"content":"            if (isDone) {","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"jelemii"},"content":"                todo.markAsDone();","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"jelemii"},"content":"            return todo;","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"jelemii"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"jelemii"},"content":"        case \"D\" -\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"jelemii"},"content":"            int descEndIndex \u003d line.indexOf(\u0027 \u0027, 7);","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"jelemii"},"content":"            String description \u003d line.substring(7, descEndIndex);","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"jelemii"},"content":"            int byIndex \u003d line.indexOf(\"(by: \");","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"jelemii"},"content":"            String by \u003d line.substring(byIndex + 5, line.indexOf(\u0027)\u0027, byIndex));","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"jelemii"},"content":"            Task deadline \u003d new Deadline(description, by);","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"jelemii"},"content":"            if (isDone) {","lastModifiedDate":"2024-04-22"},{"lineNumber":45,"author":{"gitId":"jelemii"},"content":"                deadline.markAsDone();","lastModifiedDate":"2024-04-22"},{"lineNumber":46,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-04-22"},{"lineNumber":47,"author":{"gitId":"jelemii"},"content":"            return deadline;","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"jelemii"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"jelemii"},"content":"        case \"E\" -\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"jelemii"},"content":"            int descEndIndex \u003d line.indexOf(\u0027 \u0027, 7);","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"jelemii"},"content":"            String description \u003d line.substring(7, descEndIndex);","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"jelemii"},"content":"            int fromIndex \u003d line.indexOf(\"(from: \");","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"jelemii"},"content":"            int toIndex \u003d line.indexOf(\"to: \");","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"jelemii"},"content":"            String from \u003d line.substring(fromIndex + 7, line.indexOf(\"to:\", fromIndex));","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"jelemii"},"content":"            String to \u003d line.substring(toIndex + 4, line.indexOf(\u0027)\u0027, fromIndex));","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"jelemii"},"content":"            Task event \u003d new Event(description, from, to);","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"jelemii"},"content":"            if (isDone) {","lastModifiedDate":"2024-04-22"},{"lineNumber":58,"author":{"gitId":"jelemii"},"content":"                event.markAsDone();","lastModifiedDate":"2024-04-22"},{"lineNumber":59,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-04-22"},{"lineNumber":60,"author":{"gitId":"jelemii"},"content":"            return event;","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"jelemii"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"jelemii"},"content":"        default -\u003e throw new IllegalStateException(\"Unexpected value: \" + type);","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"jelemii"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":68,"author":{"gitId":"jelemii"},"content":"     * Parse the input from the user to interpret the command to be executed.","lastModifiedDate":"2024-04-24"},{"lineNumber":69,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":70,"author":{"gitId":"jelemii"},"content":"     * @param input The input by the user","lastModifiedDate":"2024-04-24"},{"lineNumber":71,"author":{"gitId":"jelemii"},"content":"     * @return The command to be executed.","lastModifiedDate":"2024-04-24"},{"lineNumber":72,"author":{"gitId":"jelemii"},"content":"     * @throws DukeException When the user inputs an invalid command, missing input or incorrect format.","lastModifiedDate":"2024-04-24"},{"lineNumber":73,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":74,"author":{"gitId":"jelemii"},"content":"    public Command parseInput(String input) throws DukeException {","lastModifiedDate":"2024-04-22"},{"lineNumber":75,"author":{"gitId":"jelemii"},"content":"        String[] parts \u003d input.trim().split(\"\\\\s+\", 2); //https://stackoverflow.com/a/225360","lastModifiedDate":"2024-04-22"},{"lineNumber":76,"author":{"gitId":"jelemii"},"content":"        Command.CommandType commandType \u003d Command.commands(parts[0]);","lastModifiedDate":"2024-04-22"},{"lineNumber":77,"author":{"gitId":"jelemii"},"content":"        String arguments \u003d parts.length \u003e 1 ? parts[1] : \"\"; //use ternary operator to check if there is a 2nd part, assign argument to parts[1]","lastModifiedDate":"2024-04-22"},{"lineNumber":78,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":79,"author":{"gitId":"jelemii"},"content":"        switch (commandType) {","lastModifiedDate":"2024-04-22"},{"lineNumber":80,"author":{"gitId":"jelemii"},"content":"        case TODO:","lastModifiedDate":"2024-04-22"},{"lineNumber":81,"author":{"gitId":"jelemii"},"content":"            if (arguments.isBlank()) {","lastModifiedDate":"2024-04-22"},{"lineNumber":82,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"Input task is empty. Input the task you want to add \"","lastModifiedDate":"2024-04-22"},{"lineNumber":83,"author":{"gitId":"jelemii"},"content":"                        + \"after the \\\"todo\\\" command. e.g. \\\"todo task\\\"\");","lastModifiedDate":"2024-04-22"},{"lineNumber":84,"author":{"gitId":"jelemii"},"content":"            } else if (taskList.isDuplicate(arguments)) {","lastModifiedDate":"2024-04-22"},{"lineNumber":85,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"This task already exists in the list.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":86,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-04-22"},{"lineNumber":87,"author":{"gitId":"jelemii"},"content":"            return new AddTodoCommand(arguments);","lastModifiedDate":"2024-04-22"},{"lineNumber":88,"author":{"gitId":"jelemii"},"content":"        case DEADLINE:","lastModifiedDate":"2024-04-22"},{"lineNumber":89,"author":{"gitId":"jelemii"},"content":"            if (arguments.isBlank()) {","lastModifiedDate":"2024-04-22"},{"lineNumber":90,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"Input task is empty. Input the task you want to add \"","lastModifiedDate":"2024-04-22"},{"lineNumber":91,"author":{"gitId":"jelemii"},"content":"                        + \"after the \\\"deadline\\\" command.\\n\"","lastModifiedDate":"2024-04-22"},{"lineNumber":92,"author":{"gitId":"jelemii"},"content":"                        + \"e.g. \\\"deadline task /by date\\\"\");","lastModifiedDate":"2024-04-22"},{"lineNumber":93,"author":{"gitId":"jelemii"},"content":"            } else if (!arguments.contains(\"/by\")) {","lastModifiedDate":"2024-04-22"},{"lineNumber":94,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"Invalid format. Please add a \\\"/by\\\" for deadline tasks.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":95,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":97,"author":{"gitId":"jelemii"},"content":"            String[] deadlineParts \u003d arguments.split(\"/by\", 2);","lastModifiedDate":"2024-04-22"},{"lineNumber":98,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":99,"author":{"gitId":"jelemii"},"content":"            if (deadlineParts.length \u003c 2 || deadlineParts[0].isBlank() || deadlineParts[1].isBlank()) {","lastModifiedDate":"2024-04-22"},{"lineNumber":100,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"\"\"","lastModifiedDate":"2024-04-24"},{"lineNumber":101,"author":{"gitId":"jelemii"},"content":"                        Task or date is empty. Input a task and a date for the","lastModifiedDate":"2024-04-24"},{"lineNumber":102,"author":{"gitId":"jelemii"},"content":"                        deadline you want after the \"/by\" command.","lastModifiedDate":"2024-04-24"},{"lineNumber":103,"author":{"gitId":"jelemii"},"content":"                        e.g. \"deadline task /by date\\\"\"\"\");","lastModifiedDate":"2024-04-24"},{"lineNumber":104,"author":{"gitId":"jelemii"},"content":"            } else if (taskList.isDuplicate(deadlineParts[0])) {","lastModifiedDate":"2024-04-22"},{"lineNumber":105,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"This task already exists in the list.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":106,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-04-22"},{"lineNumber":107,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-23"},{"lineNumber":108,"author":{"gitId":"jelemii"},"content":"            String byDate \u003d DateParser.formatDateInput(deadlineParts[1].trim());","lastModifiedDate":"2024-04-23"},{"lineNumber":109,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-23"},{"lineNumber":110,"author":{"gitId":"jelemii"},"content":"            return new AddDeadlineCommand(deadlineParts[0].trim(), byDate);","lastModifiedDate":"2024-04-23"},{"lineNumber":111,"author":{"gitId":"jelemii"},"content":"        case EVENT:","lastModifiedDate":"2024-04-22"},{"lineNumber":112,"author":{"gitId":"jelemii"},"content":"            if (arguments.isBlank()) {","lastModifiedDate":"2024-04-22"},{"lineNumber":113,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"Input task is empty. Input the task you want to add \"","lastModifiedDate":"2024-04-22"},{"lineNumber":114,"author":{"gitId":"jelemii"},"content":"                        + \"after the \\\"event\\\" command\\n\"","lastModifiedDate":"2024-04-22"},{"lineNumber":115,"author":{"gitId":"jelemii"},"content":"                        + \"e.g. \\\"event task /from start-date /to end-date\\\"\");","lastModifiedDate":"2024-04-22"},{"lineNumber":116,"author":{"gitId":"jelemii"},"content":"            } else if (!(arguments.contains(\"/from\") \u0026\u0026 arguments.contains(\"/to\"))) {","lastModifiedDate":"2024-04-22"},{"lineNumber":117,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"Invalid format. Please add a \\\"/from\\\" and \\\"/to\\\" \"","lastModifiedDate":"2024-04-22"},{"lineNumber":118,"author":{"gitId":"jelemii"},"content":"                        + \"for event tasks.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":119,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":121,"author":{"gitId":"jelemii"},"content":"            int fromIndex \u003d arguments.indexOf(\"/from\");","lastModifiedDate":"2024-04-22"},{"lineNumber":122,"author":{"gitId":"jelemii"},"content":"            int toIndex \u003d arguments.indexOf(\"/to\");","lastModifiedDate":"2024-04-22"},{"lineNumber":123,"author":{"gitId":"jelemii"},"content":"            String description \u003d arguments.substring(0, fromIndex).trim();","lastModifiedDate":"2024-04-22"},{"lineNumber":124,"author":{"gitId":"jelemii"},"content":"            String from \u003d arguments.substring(fromIndex + 5, toIndex).trim();","lastModifiedDate":"2024-04-22"},{"lineNumber":125,"author":{"gitId":"jelemii"},"content":"            String to \u003d arguments.substring(toIndex + 3).trim();","lastModifiedDate":"2024-04-22"},{"lineNumber":126,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":127,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":128,"author":{"gitId":"jelemii"},"content":"            if (description.isEmpty() || from.isEmpty() || to.isEmpty()) {","lastModifiedDate":"2024-04-22"},{"lineNumber":129,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"\"\"","lastModifiedDate":"2024-04-22"},{"lineNumber":130,"author":{"gitId":"jelemii"},"content":"                        Task, start-date-time or end-date-time is empty. Input a task and 2 dates for","lastModifiedDate":"2024-04-22"},{"lineNumber":131,"author":{"gitId":"jelemii"},"content":"                        the start-date and end-date you want for the task after the \"/event\" command.","lastModifiedDate":"2024-04-22"},{"lineNumber":132,"author":{"gitId":"jelemii"},"content":"                         e.g. \"event task /from start-date-time /to end-date-time\\\"\"\"\");","lastModifiedDate":"2024-04-22"},{"lineNumber":133,"author":{"gitId":"jelemii"},"content":"            } else if (taskList.isDuplicate(description)) {","lastModifiedDate":"2024-04-22"},{"lineNumber":134,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"This task already exists in the list.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":135,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-04-22"},{"lineNumber":136,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-23"},{"lineNumber":137,"author":{"gitId":"jelemii"},"content":"            String fromDate \u003d DateParser.formatDateInput(from);","lastModifiedDate":"2024-04-23"},{"lineNumber":138,"author":{"gitId":"jelemii"},"content":"            String toDate \u003d DateParser.formatDateInput(to);","lastModifiedDate":"2024-04-23"},{"lineNumber":139,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-23"},{"lineNumber":140,"author":{"gitId":"jelemii"},"content":"            return new AddEventCommand(description, fromDate, toDate);","lastModifiedDate":"2024-04-23"},{"lineNumber":141,"author":{"gitId":"jelemii"},"content":"        case DELETE:","lastModifiedDate":"2024-04-22"},{"lineNumber":142,"author":{"gitId":"jelemii"},"content":"            if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2024-04-22"},{"lineNumber":143,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"Task list is currently empty. Please add a task first.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":144,"author":{"gitId":"jelemii"},"content":"            } else if (arguments.isBlank()) {","lastModifiedDate":"2024-04-22"},{"lineNumber":145,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"No index found. Please input the index of the task\"","lastModifiedDate":"2024-04-22"},{"lineNumber":146,"author":{"gitId":"jelemii"},"content":"                        + \" you want to delete.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":147,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":148,"author":{"gitId":"jelemii"},"content":"            try {","lastModifiedDate":"2024-04-22"},{"lineNumber":149,"author":{"gitId":"jelemii"},"content":"                int getIndex \u003d (Integer.parseInt(arguments.trim()) - 1);","lastModifiedDate":"2024-04-22"},{"lineNumber":150,"author":{"gitId":"jelemii"},"content":"                if (getIndex \u003c 0 || getIndex \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2024-04-22"},{"lineNumber":151,"author":{"gitId":"jelemii"},"content":"                    throw new IndexOutOfBoundsException();","lastModifiedDate":"2024-04-22"},{"lineNumber":152,"author":{"gitId":"jelemii"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":153,"author":{"gitId":"jelemii"},"content":"                return new DeleteCommand(getIndex);","lastModifiedDate":"2024-04-22"},{"lineNumber":154,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":155,"author":{"gitId":"jelemii"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-22"},{"lineNumber":156,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"Please enter a valid number.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":157,"author":{"gitId":"jelemii"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-22"},{"lineNumber":158,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"Index does not exist.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":159,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-04-22"},{"lineNumber":160,"author":{"gitId":"jelemii"},"content":"        case MARK:","lastModifiedDate":"2024-04-22"},{"lineNumber":161,"author":{"gitId":"jelemii"},"content":"            if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2024-04-22"},{"lineNumber":162,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"Task list is currently empty. Please add a task first.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":163,"author":{"gitId":"jelemii"},"content":"            } else if (arguments.isBlank()) {","lastModifiedDate":"2024-04-22"},{"lineNumber":164,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"No index found. Please input the index of the task\"","lastModifiedDate":"2024-04-22"},{"lineNumber":165,"author":{"gitId":"jelemii"},"content":"                        + \" you want to mark.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":166,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":167,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":168,"author":{"gitId":"jelemii"},"content":"            try {","lastModifiedDate":"2024-04-22"},{"lineNumber":169,"author":{"gitId":"jelemii"},"content":"                int getIndex \u003d (Integer.parseInt(arguments.trim()) - 1);","lastModifiedDate":"2024-04-22"},{"lineNumber":170,"author":{"gitId":"jelemii"},"content":"                Task task \u003d taskList.getTask(getIndex);","lastModifiedDate":"2024-04-22"},{"lineNumber":171,"author":{"gitId":"jelemii"},"content":"                if (getIndex \u003c 0 || getIndex \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2024-04-22"},{"lineNumber":172,"author":{"gitId":"jelemii"},"content":"                    throw new DukeException(\"Index does not exist.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":173,"author":{"gitId":"jelemii"},"content":"                } else if (task.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2024-04-22"},{"lineNumber":174,"author":{"gitId":"jelemii"},"content":"                    throw new DukeException(\"Task is currently marked already.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":175,"author":{"gitId":"jelemii"},"content":"                }","lastModifiedDate":"2024-04-22"},{"lineNumber":176,"author":{"gitId":"jelemii"},"content":"                return new MarkCommand(getIndex);","lastModifiedDate":"2024-04-22"},{"lineNumber":177,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":178,"author":{"gitId":"jelemii"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-22"},{"lineNumber":179,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"Please enter a valid number.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":180,"author":{"gitId":"jelemii"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-22"},{"lineNumber":181,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"Index does not exist.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":182,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":183,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":184,"author":{"gitId":"jelemii"},"content":"        case UNMARK:","lastModifiedDate":"2024-04-22"},{"lineNumber":185,"author":{"gitId":"jelemii"},"content":"            if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2024-04-22"},{"lineNumber":186,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"Task list is currently empty. Please add a task first.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":187,"author":{"gitId":"jelemii"},"content":"            } else if (arguments.isBlank()) {","lastModifiedDate":"2024-04-22"},{"lineNumber":188,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"No index found. Please input the index of the task\"","lastModifiedDate":"2024-04-22"},{"lineNumber":189,"author":{"gitId":"jelemii"},"content":"                        + \" you want to unmark.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":190,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":191,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":192,"author":{"gitId":"jelemii"},"content":"            try {","lastModifiedDate":"2024-04-22"},{"lineNumber":193,"author":{"gitId":"jelemii"},"content":"                int getIndex \u003d (Integer.parseInt(arguments.trim()) - 1);","lastModifiedDate":"2024-04-22"},{"lineNumber":194,"author":{"gitId":"jelemii"},"content":"                Task task \u003d taskList.getTask(getIndex);","lastModifiedDate":"2024-04-22"},{"lineNumber":195,"author":{"gitId":"jelemii"},"content":"                if (getIndex \u003c 0 || getIndex \u003e\u003d taskList.getSize()) {","lastModifiedDate":"2024-04-22"},{"lineNumber":196,"author":{"gitId":"jelemii"},"content":"                    throw new DukeException(\"Index does not exist.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":197,"author":{"gitId":"jelemii"},"content":"                } else if (task.getStatusIcon().trim().isEmpty()) {","lastModifiedDate":"2024-04-22"},{"lineNumber":198,"author":{"gitId":"jelemii"},"content":"                    throw new DukeException(\"Task is currently unmarked already.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":199,"author":{"gitId":"jelemii"},"content":"                }","lastModifiedDate":"2024-04-22"},{"lineNumber":200,"author":{"gitId":"jelemii"},"content":"                return new UnmarkCommand(getIndex);","lastModifiedDate":"2024-04-22"},{"lineNumber":201,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":202,"author":{"gitId":"jelemii"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-22"},{"lineNumber":203,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"Please enter a valid number.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":204,"author":{"gitId":"jelemii"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-22"},{"lineNumber":205,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"Index does not exist.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":206,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-04-22"},{"lineNumber":207,"author":{"gitId":"jelemii"},"content":"        case LIST:","lastModifiedDate":"2024-04-22"},{"lineNumber":208,"author":{"gitId":"jelemii"},"content":"            if (taskList.getSize() \u003d\u003d 0) {","lastModifiedDate":"2024-04-22"},{"lineNumber":209,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"List is empty. Please add a task first.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":210,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-04-22"},{"lineNumber":211,"author":{"gitId":"jelemii"},"content":"            return new ListCommand();","lastModifiedDate":"2024-04-22"},{"lineNumber":212,"author":{"gitId":"jelemii"},"content":"        case BYE:","lastModifiedDate":"2024-04-22"},{"lineNumber":213,"author":{"gitId":"jelemii"},"content":"            return new ExitCommand();","lastModifiedDate":"2024-04-22"},{"lineNumber":214,"author":{"gitId":"jelemii"},"content":"        default:","lastModifiedDate":"2024-04-22"},{"lineNumber":215,"author":{"gitId":"jelemii"},"content":"            throw new DukeException(\"Invalid command. Please try again.\"","lastModifiedDate":"2024-04-22"},{"lineNumber":216,"author":{"gitId":"jelemii"},"content":"                    + \" Remember to leave a space after each command.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":217,"author":{"gitId":"jelemii"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":218,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":219,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":220,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":221,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":222,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"jelemii":222}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package storage;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"import duke.DukeException;","lastModifiedDate":"2024-04-22"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":"import parser.Parser;","lastModifiedDate":"2024-04-22"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":"import tasks.Task;","lastModifiedDate":"2024-04-22"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"import java.io.File;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":15,"author":{"gitId":"jelemii"},"content":" * A storage class which handles storing of tasks. It loads file contents or save tasks to the file.","lastModifiedDate":"2024-04-24"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":17,"author":{"gitId":"jelemii"},"content":"public class Storage {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"jelemii"},"content":"    private final String filePath;","lastModifiedDate":"2024-04-22"},{"lineNumber":19,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"jelemii"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"jelemii"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":25,"author":{"gitId":"jelemii"},"content":"     * Loads tasks from the file path.","lastModifiedDate":"2024-04-24"},{"lineNumber":26,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":27,"author":{"gitId":"jelemii"},"content":"     * @return the list of tasks loaded from the file. If file is empty, return null.","lastModifiedDate":"2024-04-24"},{"lineNumber":28,"author":{"gitId":"jelemii"},"content":"     * @throws DukeException If file does not exist in the file path or there is an error reading the file.","lastModifiedDate":"2024-04-24"},{"lineNumber":29,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":30,"author":{"gitId":"jelemii"},"content":"    public ArrayList\u003cTask\u003e loadFileContents() throws DukeException {","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"jelemii"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"jelemii"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2024-04-22"},{"lineNumber":33,"author":{"gitId":"jelemii"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"jelemii"},"content":"            if (!file.exists()) {","lastModifiedDate":"2024-04-22"},{"lineNumber":35,"author":{"gitId":"jelemii"},"content":"                throw new DukeException(\"File not found.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":36,"author":{"gitId":"jelemii"},"content":"            } else if (file.length() \u003d\u003d 0) {","lastModifiedDate":"2024-04-22"},{"lineNumber":37,"author":{"gitId":"jelemii"},"content":"                System.out.println(\"An empty file exist. tasks.Task will be added to this file.\\n\");","lastModifiedDate":"2024-04-22"},{"lineNumber":38,"author":{"gitId":"jelemii"},"content":"                return null;","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"jelemii"},"content":"            System.out.println(\"An existing file exist. Loading task from file...\\n\");","lastModifiedDate":"2024-04-22"},{"lineNumber":41,"author":{"gitId":"jelemii"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2024-04-22"},{"lineNumber":42,"author":{"gitId":"jelemii"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2024-04-22"},{"lineNumber":43,"author":{"gitId":"jelemii"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2024-04-22"},{"lineNumber":44,"author":{"gitId":"jelemii"},"content":"                Task task \u003d Parser.parseTaskFromFile(line);","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"jelemii"},"content":"                taskList.add(task);","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"jelemii"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"jelemii"},"content":"            throw new DukeException(\"File not found.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":49,"author":{"gitId":"jelemii"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"jelemii"},"content":"        return taskList;","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":54,"author":{"gitId":"jelemii"},"content":"     * Saves the tasks which contains in an array list to the file.","lastModifiedDate":"2024-04-24"},{"lineNumber":55,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":56,"author":{"gitId":"jelemii"},"content":"     * @param tasks The list of tasks to save into the file.","lastModifiedDate":"2024-04-24"},{"lineNumber":57,"author":{"gitId":"jelemii"},"content":"     * @throws IOException When a task cannot be saved into the file or there is a problem with the file.","lastModifiedDate":"2024-04-24"},{"lineNumber":58,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":59,"author":{"gitId":"jelemii"},"content":"    public void saveTaskToFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"jelemii"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"jelemii"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-04-22"},{"lineNumber":62,"author":{"gitId":"jelemii"},"content":"            fw.write(task.toString() + \"\\n\");","lastModifiedDate":"2024-04-22"},{"lineNumber":63,"author":{"gitId":"jelemii"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"jelemii"},"content":"        fw.close();","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"jelemii":66}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package tasks;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":" * Represents a deadline task in a task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":"    private String by;","lastModifiedDate":"2024-04-23"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":"        super(description);","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"jelemii"},"content":"    @Override","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"    public String toString() {","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"jelemii"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"jelemii":19}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package tasks;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":" * Represents an event task in a task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"public class Event extends Task {","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":"    private String from;","lastModifiedDate":"2024-04-24"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":"    private String to;","lastModifiedDate":"2024-04-24"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":"        super(description);","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":"        this.from \u003d from;","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":"        this.to \u003d to;","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"jelemii"},"content":"    @Override","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"jelemii"},"content":"    public String toString() {","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"jelemii"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2024-02-27"},{"lineNumber":20,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":21,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"jelemii":21}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package tasks;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":" * Represents a Task in a task list. Super class to different task type such as Todo,Deadline and Event.","lastModifiedDate":"2024-04-24"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"public class Task {","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":"    protected String description;","lastModifiedDate":"2024-02-19"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-02-19"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":"    public Task(String description) {","lastModifiedDate":"2024-02-19"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-02-19"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-19"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":15,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-02-19"},{"lineNumber":17,"author":{"gitId":"jelemii"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-02-19"},{"lineNumber":18,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":19,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":20,"author":{"gitId":"jelemii"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-02-19"},{"lineNumber":21,"author":{"gitId":"jelemii"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2024-02-19"},{"lineNumber":22,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":23,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":24,"author":{"gitId":"jelemii"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2024-02-19"},{"lineNumber":25,"author":{"gitId":"jelemii"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-02-19"},{"lineNumber":26,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-02-19"},{"lineNumber":27,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":28,"author":{"gitId":"jelemii"},"content":"    @Override","lastModifiedDate":"2024-02-27"},{"lineNumber":29,"author":{"gitId":"jelemii"},"content":"    public String toString() {","lastModifiedDate":"2024-02-27"},{"lineNumber":30,"author":{"gitId":"jelemii"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":32,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-02-19"}],"authorContributionMap":{"jelemii":32}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package tasks;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":"public class TaskList {","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2024-04-24"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":"    public TaskList() {","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-22"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":"     * Takes in a list of task to load into a task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":15,"author":{"gitId":"jelemii"},"content":"     * @param tasks The list of tasks to be added into the task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":17,"author":{"gitId":"jelemii"},"content":"    public void loadTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2024-04-22"},{"lineNumber":18,"author":{"gitId":"jelemii"},"content":"        if (tasks !\u003d null) {","lastModifiedDate":"2024-04-22"},{"lineNumber":19,"author":{"gitId":"jelemii"},"content":"            this.tasks.addAll(tasks);","lastModifiedDate":"2024-04-22"},{"lineNumber":20,"author":{"gitId":"jelemii"},"content":"        }","lastModifiedDate":"2024-04-22"},{"lineNumber":21,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":24,"author":{"gitId":"jelemii"},"content":"     * Adds a task into the task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":25,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":26,"author":{"gitId":"jelemii"},"content":"     * @param task The task to be added.","lastModifiedDate":"2024-04-24"},{"lineNumber":27,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":28,"author":{"gitId":"jelemii"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-04-22"},{"lineNumber":29,"author":{"gitId":"jelemii"},"content":"        tasks.add(task);","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":33,"author":{"gitId":"jelemii"},"content":"     * Find a task using its index in the task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":34,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":35,"author":{"gitId":"jelemii"},"content":"     * @param index The index of the task in the task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":36,"author":{"gitId":"jelemii"},"content":"     * @return The task at the index of the task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":37,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":38,"author":{"gitId":"jelemii"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2024-04-22"},{"lineNumber":39,"author":{"gitId":"jelemii"},"content":"        return tasks.get(index);","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":43,"author":{"gitId":"jelemii"},"content":"     * Get the number of tasks in the list.","lastModifiedDate":"2024-04-24"},{"lineNumber":44,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":45,"author":{"gitId":"jelemii"},"content":"     * @return The number of tasks in the task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":46,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":47,"author":{"gitId":"jelemii"},"content":"    public int getSize() {","lastModifiedDate":"2024-04-22"},{"lineNumber":48,"author":{"gitId":"jelemii"},"content":"        return tasks.size();","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":52,"author":{"gitId":"jelemii"},"content":"     * Delete a task based on its index in the task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":53,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":54,"author":{"gitId":"jelemii"},"content":"     * @param index The index number of the task to be deleted.","lastModifiedDate":"2024-04-24"},{"lineNumber":55,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":56,"author":{"gitId":"jelemii"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-04-22"},{"lineNumber":57,"author":{"gitId":"jelemii"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":61,"author":{"gitId":"jelemii"},"content":"     * Gets all tasks containing in the list.","lastModifiedDate":"2024-04-24"},{"lineNumber":62,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":63,"author":{"gitId":"jelemii"},"content":"     * @return A new array list which consist of all the tasks.","lastModifiedDate":"2024-04-24"},{"lineNumber":64,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":65,"author":{"gitId":"jelemii"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"jelemii"},"content":"        return new ArrayList\u003c\u003e(tasks);","lastModifiedDate":"2024-04-22"},{"lineNumber":67,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":70,"author":{"gitId":"jelemii"},"content":"     * Checks for duplicates in the current task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":71,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":72,"author":{"gitId":"jelemii"},"content":"     * @param arguments Contains the description of the task to be compared to the tasks in the task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":73,"author":{"gitId":"jelemii"},"content":"     * @return True if the task already exists in the list. If not, return false","lastModifiedDate":"2024-04-24"},{"lineNumber":74,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":75,"author":{"gitId":"jelemii"},"content":"    public boolean isDuplicate(String arguments) {","lastModifiedDate":"2024-04-22"},{"lineNumber":76,"author":{"gitId":"jelemii"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-04-22"},{"lineNumber":77,"author":{"gitId":"jelemii"},"content":"            if (task.description.equals(arguments)) {","lastModifiedDate":"2024-04-22"},{"lineNumber":78,"author":{"gitId":"jelemii"},"content":"                return true;","lastModifiedDate":"2024-04-22"},{"lineNumber":79,"author":{"gitId":"jelemii"},"content":"            }","lastModifiedDate":"2024-04-22"},{"lineNumber":80,"author":{"gitId":"jelemii"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"jelemii"},"content":"        return false;","lastModifiedDate":"2024-04-22"},{"lineNumber":82,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"jelemii":83}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package tasks;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":" * Represents a to-do task in a task list.","lastModifiedDate":"2024-04-24"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":"        super(description);","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":"    @Override","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":"    public String toString() {","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"jelemii":17}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"package ui;","lastModifiedDate":"2024-04-22"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":3,"author":{"gitId":"jelemii"},"content":"import tasks.Task;","lastModifiedDate":"2024-04-22"},{"lineNumber":4,"author":{"gitId":"jelemii"},"content":"import tasks.TaskList;","lastModifiedDate":"2024-04-22"},{"lineNumber":5,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":6,"author":{"gitId":"jelemii"},"content":"/**","lastModifiedDate":"2024-04-24"},{"lineNumber":7,"author":{"gitId":"jelemii"},"content":" * The Ui class manages interaction with the user","lastModifiedDate":"2024-04-24"},{"lineNumber":8,"author":{"gitId":"jelemii"},"content":" * such as displaying messages to the user.","lastModifiedDate":"2024-04-24"},{"lineNumber":9,"author":{"gitId":"jelemii"},"content":" */","lastModifiedDate":"2024-04-24"},{"lineNumber":10,"author":{"gitId":"jelemii"},"content":"public class Ui {","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":12,"author":{"gitId":"jelemii"},"content":"     * Tells the user that the task was added.","lastModifiedDate":"2024-04-24"},{"lineNumber":13,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":14,"author":{"gitId":"jelemii"},"content":"     * @param task      The new task that was added.","lastModifiedDate":"2024-04-24"},{"lineNumber":15,"author":{"gitId":"jelemii"},"content":"     * @param taskCount The total number of tasks after adding the new task.","lastModifiedDate":"2024-04-24"},{"lineNumber":16,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":17,"author":{"gitId":"jelemii"},"content":"    public static void showTaskAdded(Task task, int taskCount) {","lastModifiedDate":"2024-04-22"},{"lineNumber":18,"author":{"gitId":"jelemii"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-04-22"},{"lineNumber":19,"author":{"gitId":"jelemii"},"content":"        System.out.println(taskCount + \". \" + task);","lastModifiedDate":"2024-04-22"},{"lineNumber":20,"author":{"gitId":"jelemii"},"content":"        System.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":21,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-22"},{"lineNumber":22,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":23,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":24,"author":{"gitId":"jelemii"},"content":"     * Tells the user that the task is deleted.","lastModifiedDate":"2024-04-24"},{"lineNumber":25,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":26,"author":{"gitId":"jelemii"},"content":"     * @param task      The task that was deleted.","lastModifiedDate":"2024-04-24"},{"lineNumber":27,"author":{"gitId":"jelemii"},"content":"     * @param taskCount The total number of tasks after deletion.","lastModifiedDate":"2024-04-24"},{"lineNumber":28,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":29,"author":{"gitId":"jelemii"},"content":"    public static void showTaskDeleted(Task task, int taskCount) {","lastModifiedDate":"2024-04-22"},{"lineNumber":30,"author":{"gitId":"jelemii"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-04-22"},{"lineNumber":31,"author":{"gitId":"jelemii"},"content":"        System.out.println(task);","lastModifiedDate":"2024-04-22"},{"lineNumber":32,"author":{"gitId":"jelemii"},"content":"        System.out.println(\"Now you have \" + (taskCount - 1) + \" tasks in the list.\");","lastModifiedDate":"2024-04-22"},{"lineNumber":33,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-04-22"},{"lineNumber":34,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":35,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":36,"author":{"gitId":"jelemii"},"content":"     * Greets the user.","lastModifiedDate":"2024-04-24"},{"lineNumber":37,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":38,"author":{"gitId":"jelemii"},"content":"    public void greetUser() {","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"jelemii"},"content":"        System.out.println(\"Hello! I\u0027m jelemiiBot\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"jelemii"},"content":"                + \"What can I do for you?\\n\");","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":44,"author":{"gitId":"jelemii"},"content":"     * Display an error message to the user.","lastModifiedDate":"2024-04-24"},{"lineNumber":45,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":46,"author":{"gitId":"jelemii"},"content":"     * @param errorMessage The error message to be displayed.","lastModifiedDate":"2024-04-24"},{"lineNumber":47,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":48,"author":{"gitId":"jelemii"},"content":"    public void showErrorMessage(String errorMessage) {","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"jelemii"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":53,"author":{"gitId":"jelemii"},"content":"     * Tells the user that there is no existing file.","lastModifiedDate":"2024-04-24"},{"lineNumber":54,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":55,"author":{"gitId":"jelemii"},"content":"    public void fileNotFoundError() {","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"jelemii"},"content":"        System.out.println(\"\"\"","lastModifiedDate":"2024-04-22"},{"lineNumber":57,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"jelemii"},"content":"                Existing file not found. A new file will be created.","lastModifiedDate":"2024-04-22"},{"lineNumber":59,"author":{"gitId":"jelemii"},"content":"                Creating new file...","lastModifiedDate":"2024-04-22"},{"lineNumber":60,"author":{"gitId":"jelemii"},"content":"                \"\"\");","lastModifiedDate":"2024-04-22"},{"lineNumber":61,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":63,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":64,"author":{"gitId":"jelemii"},"content":"     * Display all the current tasks in the list.","lastModifiedDate":"2024-04-24"},{"lineNumber":65,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":66,"author":{"gitId":"jelemii"},"content":"     * @param tasks the tasks in the task list to be displayed.","lastModifiedDate":"2024-04-24"},{"lineNumber":67,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":68,"author":{"gitId":"jelemii"},"content":"    public void showList(TaskList tasks) {","lastModifiedDate":"2024-04-22"},{"lineNumber":69,"author":{"gitId":"jelemii"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"jelemii"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2024-04-22"},{"lineNumber":71,"author":{"gitId":"jelemii"},"content":"            System.out.println((i + 1) + \". \" + tasks.getTask(i).toString());","lastModifiedDate":"2024-04-22"},{"lineNumber":72,"author":{"gitId":"jelemii"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":75,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":76,"author":{"gitId":"jelemii"},"content":"     * Tells the user that the task is marked as done.","lastModifiedDate":"2024-04-24"},{"lineNumber":77,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":78,"author":{"gitId":"jelemii"},"content":"     * @param task The task that is marked done.","lastModifiedDate":"2024-04-24"},{"lineNumber":79,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":80,"author":{"gitId":"jelemii"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2024-04-22"},{"lineNumber":81,"author":{"gitId":"jelemii"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"jelemii"},"content":"        System.out.println(task);","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":85,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":86,"author":{"gitId":"jelemii"},"content":"     * Tells the user that the task is unmarked as done.","lastModifiedDate":"2024-04-24"},{"lineNumber":87,"author":{"gitId":"jelemii"},"content":"     *","lastModifiedDate":"2024-04-24"},{"lineNumber":88,"author":{"gitId":"jelemii"},"content":"     * @param task The task that is unmarked as done.","lastModifiedDate":"2024-04-24"},{"lineNumber":89,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":90,"author":{"gitId":"jelemii"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2024-04-22"},{"lineNumber":91,"author":{"gitId":"jelemii"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"jelemii"},"content":"        System.out.println(task);","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"jelemii"},"content":"","lastModifiedDate":"2024-04-22"},{"lineNumber":95,"author":{"gitId":"jelemii"},"content":"    /**","lastModifiedDate":"2024-04-24"},{"lineNumber":96,"author":{"gitId":"jelemii"},"content":"     * Display a goodbye message to the user.","lastModifiedDate":"2024-04-24"},{"lineNumber":97,"author":{"gitId":"jelemii"},"content":"     */","lastModifiedDate":"2024-04-24"},{"lineNumber":98,"author":{"gitId":"jelemii"},"content":"    public void showGoodbyeMessage() {","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"jelemii"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"jelemii"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"jelemii"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"jelemii":101}},{"path":"temp/lines.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jelemii"},"content":"first line","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"jelemii"},"content":"second line","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"jelemii":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jelemii"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-04-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jelemii":1,"-":20}}]
