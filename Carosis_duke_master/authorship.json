[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"# duke project template","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Carosis":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"    archiveBaseName \u003d \"duke.jar\"","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Carosis":2,"-":30}},{"path":"colors.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"yellow","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"blue","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"grey","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"Carosis":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"# duke User Guide","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"Carosis":1,"-":29}},{"path":"fruit.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"apple","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"pinapple","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"applepen","lastModifiedDate":"2024-01-21"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":"pineappleapplepen","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"Carosis":4}},{"path":"shapes.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"rect","lastModifiedDate":"2024-01-21"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"tri","lastModifiedDate":"2024-01-21"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"para","lastModifiedDate":"2024-01-21"}],"authorContributionMap":{"Carosis":3}},{"path":"src/main/java/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"[E][ ] aaa (From: ) (To: 24 3 2024)","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"[E][ ] aaaa (From: 23 3 2024) (To: 24 3 2024)","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"[D][ ] a (by: 26 3 2024)","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":"[D][ ] a (by: 24 3 2024)","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":"[E][ ] hhhhhh (From: 27 3 2024) (To: 28 3 2024)","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":"[D][ ] ddddddd (by: 28 3 2024)","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":"[E][ ] aaaa (From: 27-03-2024 18:00) (To: 02-04-2024 17:28)","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":"[B][ ] clear table and desk (From: 03-04-2024 20:36) (To: 06-04-2024 00:00)","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"[T][ ] aaaaaaaaa","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"[D][ ] get fish for dinner (by: 08-04-2024 00:00)","lastModifiedDate":"2024-04-08"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"[E][ ] fish festival (From: 08-04-2024 20:12) (To: 09-04-2024 20:12)","lastModifiedDate":"2024-04-08"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"[T][ ] join the festival","lastModifiedDate":"2024-04-08"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"[B][ ] become the winner (From: 08-04-2024 20:13) (To: 09-04-2024 20:13)","lastModifiedDate":"2024-04-08"}],"authorContributionMap":{"Carosis":13}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents the main class for the Duke program.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" * Manages the initialization of Duke and runs the program.","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" * @author [Your Name]","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"package duke;","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"import duke.command.Command;","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"import duke.utility.InputParser;","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"import duke.utility.UI;","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"public class Duke extends Tasks {","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"    private final Storage storage;","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"    private final UI ui;","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"    private final InputParser parser;","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"    private final String LOGO_MESSAGE \u003d \"logo\";","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"    private final String FILE_ERROR_MESSAGE \u003d \"fileError\";","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"    private final String WELCOME_MESSAGE \u003d \"welcome\";","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"    private final String LINE_SEPARATOR \u003d \"line\";","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"     * Constructs a Duke object with the specified file path.","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"     * @param filePath The file path for storing tasks.","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"        ui \u003d new UI();","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"        parser \u003d new InputParser();","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"        ui.show(LOGO_MESSAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"            ui.show(FILE_ERROR_MESSAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"     * Runs the Duke program, displaying welcome messages and handling user commands.","lastModifiedDate":"2024-04-07"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"    public void run() {","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"        ui.show(WELCOME_MESSAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"        while (!isExit) {","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"Carosis"},"content":"            try {","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Carosis"},"content":"                String userCommand \u003d ui.readCommand();","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"Carosis"},"content":"                ui.show(LINE_SEPARATOR);","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"Carosis"},"content":"                Command temp \u003d parser.parse(userCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Carosis"},"content":"                isExit \u003d temp.isExit();","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Carosis"},"content":"                temp.execute(taskList, ui, storage);","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"Carosis"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"Carosis"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"Carosis"},"content":"            } finally {","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"Carosis"},"content":"                ui.show(LINE_SEPARATOR);","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"Carosis"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"Carosis"},"content":"     * The main method to start the Duke program.","lastModifiedDate":"2024-04-07"},{"lineNumber":73,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":74,"author":{"gitId":"Carosis"},"content":"     * @param args Command-line arguments (not used in this context).","lastModifiedDate":"2024-04-07"},{"lineNumber":75,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If there are issues with Duke\u0027s initialization or running.","lastModifiedDate":"2024-04-07"},{"lineNumber":76,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":77,"author":{"gitId":"Carosis"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"Carosis"},"content":"        new Duke(\"src/main/java/duke.txt\").run();","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Carosis":80}},{"path":"src/main/java/duke/command/AddTaskFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" * This class is part of the command pattern implementation.","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" * It encapsulates all the information needed to add a new task.","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @author Zijing","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"package duke.command;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"import duke.utility.UI;","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":" * Represents a command for adding a task to the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":" * This command is executed when the user wants to add a new task to the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"public class AddTaskFunction extends Command {","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"    private final Tasks tsk;","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"    private final String SUCCESS_MESSAGE \u003d \"added\";","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"    private final String ERROR_MESSAGE_PREFIX \u003d \"Failed to save the incantation meow! : \";","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"     * Constructs an AddTaskFunction command with the specified task.","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"     * @param tsk The task to be added to the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"    public AddTaskFunction(Tasks tsk) {","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"        this.tsk\u003dtsk;","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"     * Executes the add task command.","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"     * @param tskList The task list to which the task will be added.","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"     * @param store    The storage component for saving task data.","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"    public void execute(TaskList tskList, UI ui, Storage store) {","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"        tskList.addTask(tsk);","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"        ui.show(SUCCESS_MESSAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"        ui.printIndividualTask(tsk);","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"            store.save(tskList.getAllTasks());","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"            ui.printNumberOfTask(tskList);","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"            ui.showError(ERROR_MESSAGE_PREFIX + e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"     * Checks if this command is an exit command.","lastModifiedDate":"2024-04-07"},{"lineNumber":57,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":58,"author":{"gitId":"Carosis"},"content":"     * @return Always returns false, as adding a task is not an exit command.","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":60,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Carosis"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Carosis"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"Carosis"},"content":"        return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Carosis":65}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents an abstract command class.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" * This class is part of the command pattern implementation.","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" * It encapsulates the basic execute and isExit functions for all other Commands to include.","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" * Subclasses of this class must implement the execute and isExit methods as per their specific command functionalities.","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" * @author Zijing","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"package duke.command;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"import duke.utility.UI;","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":" * Abstract class for defining command objects.","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":" * Commands are used to perform specific actions in the task management system.","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":" * Each command must implement the execute method to carry out its functionality.","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"public abstract class Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"     * Executes the command.","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"     * @param tasks   The list of tasks to which the command will be applied.","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"     * @param ui      The user interface for displaying messages or interacting with the user.","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"     * @param storage The storage component for saving and loading task data.","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If there is an error executing the command.","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"    public abstract void execute(TaskList tasks, UI ui, Storage storage) throws DukeException;","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"     * Checks if the command is an exit command.","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"     * @return true if the command is an exit command, false otherwise.","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Carosis":38}},{"path":"src/main/java/duke/command/DeleteTaskFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" * This class is part of the command pattern implementation.","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" * It encapsulates the information needed to delete a new task.","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @author Zijing","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"package duke.command;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"import duke.utility.UI;","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":" * Represents a command for deleting a task from the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":" * This command is executed when the user wants to delete a task from the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"public class DeleteTaskFunction extends Command {","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"    private final int taskNo;","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"    private final String SUCCESS_MESSAGE \u003d \"deleted\";","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"    private final String ERROR_MESSAGE_PREFIX \u003d \"Failed to remove the incantation meow!: \";","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"     * Constructs a DeleteTaskFunction command with the specified task number.","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"     * @param index The index of the task to be deleted from the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"    public DeleteTaskFunction(int index) {","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"        this.taskNo \u003d index;","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"     * Executes the delete task command.","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"     * @param tskList The task list from which the task will be deleted.","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"     * @param store    The storage component for saving task data.","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"    public void execute(TaskList tskList, UI ui, Storage store) {","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"            Tasks temp \u003d tskList.getTask(taskNo);","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"            tskList.deleteTask(taskNo);","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"            ui.printIndividualTask(temp);","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"            ui.show(SUCCESS_MESSAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"            ui.showError(ERROR_MESSAGE_PREFIX + e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"            store.save(tskList.getAllTasks());","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"Carosis"},"content":"            ui.printNumberOfTask(tskList);","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Carosis"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"Carosis"},"content":"            ui.showError(ERROR_MESSAGE_PREFIX + e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":64,"author":{"gitId":"Carosis"},"content":"     * Checks if this command is an exit command.","lastModifiedDate":"2024-04-07"},{"lineNumber":65,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":66,"author":{"gitId":"Carosis"},"content":"     * @return Always returns false, as deleting a task is not an exit command.","lastModifiedDate":"2024-04-07"},{"lineNumber":67,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":68,"author":{"gitId":"Carosis"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"Carosis"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"Carosis"},"content":"        return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Carosis":72}},{"path":"src/main/java/duke/command/FindTaskFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents a command to find tasks containing a specific keyword in the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" * This class is part of the command pattern implementation.","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" * It encapsulates the functionality needed to search for tasks based on a keyword.","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @author Zijing","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"package duke.command;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"import duke.utility.UI;","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":" * Represents a command for finding tasks containing a specific keyword in the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":" * This command is executed when the user wants to search for tasks based on a keyword.","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"public class FindTaskFunction extends Command {","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"    private final String keyword;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"    private final String NO_TASKS_FOUND_MESSAGE \u003d \"Meow? Nothing found meow!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"    private final String SEARCH_MESSAGE \u003d \"search\";","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"    private final String LINE_SEPARATOR \u003d \"line\";","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"     * Constructs a FindTaskFunction command with the specified keyword.","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"     * @param userInput The keyword to search for in the task descriptions.","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"    public FindTaskFunction(String userInput) {","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"        this.keyword \u003d userInput;","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"     * Executes the find task command.","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"     * @param tskList The task list to search for tasks.","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"     * @param store    The storage component for saving task data.","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If no tasks are found matching the keyword.","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"    public void execute(TaskList tskList, UI ui, Storage store) throws DukeException {","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"        ArrayList\u003cTasks\u003e input \u003d tskList.getAllTasks();","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"        List\u003cTasks\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"        for (Tasks t : input) {","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"            if (t.getDescription().toLowerCase().contains(keyword.toLowerCase())) {","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"                foundTasks.add(t);","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"Carosis"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"Carosis"},"content":"            throw new DukeException(NO_TASKS_FOUND_MESSAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"Carosis"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"Carosis"},"content":"            ui.show(SEARCH_MESSAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"Carosis"},"content":"            for (Tasks t : foundTasks) {","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"Carosis"},"content":"                tskList.printTask(t);","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"Carosis"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"Carosis"},"content":"        ui.show(LINE_SEPARATOR);","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":69,"author":{"gitId":"Carosis"},"content":"     * Checks if this command is an exit command.","lastModifiedDate":"2024-04-07"},{"lineNumber":70,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":71,"author":{"gitId":"Carosis"},"content":"     * @return Always returns false, as adding a task is not an exit command.","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":73,"author":{"gitId":"Carosis"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"Carosis"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"Carosis"},"content":"        return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Carosis":77}},{"path":"src/main/java/duke/command/ListTaskFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents a command to list all tasks in the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" * This class is part of the command pattern implementation.","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" * It encapsulates the functionality needed to display all tasks in the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @author Zijing","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"package duke.command;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"import duke.utility.UI;","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":" * Represents a command for listing all tasks in the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":" * This command is executed when the user wants to see all tasks in the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"public class ListTaskFunction extends Command {","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"    private final String LIST_MESSAGE \u003d \"list\";","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"    private final String ERROR_MESSAGE_PREFIX \u003d \"Failed to save the incantation meow! : \";","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"    private final int taskIndex; // Index of the task to list, -1 if listing all tasks","lastModifiedDate":"2024-04-08"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"    public ListTaskFunction() {","lastModifiedDate":"2024-04-08"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"        this.taskIndex \u003d -1; // Default to listing all tasks","lastModifiedDate":"2024-04-08"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"    public ListTaskFunction(int taskIndex) {","lastModifiedDate":"2024-04-08"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2024-04-08"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"     * Executes the list task command.","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"     * @param tskList The task list to be listed.","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"     * @param store    The storage component for saving task data.","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"    public void execute(TaskList tskList, UI ui, Storage store) {","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"        if (taskIndex \u003d\u003d -1) {","lastModifiedDate":"2024-04-08"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"            // List all tasks","lastModifiedDate":"2024-04-08"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"            ui.show(LIST_MESSAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"            ui.printTaskList(tskList);","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"        } else {","lastModifiedDate":"2024-04-08"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"            // List specific task","lastModifiedDate":"2024-04-08"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"            try {","lastModifiedDate":"2024-04-08"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"                ui.show(LIST_MESSAGE);","lastModifiedDate":"2024-04-08"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"                ui.printIndividualTask(tskList.getTask(taskIndex));","lastModifiedDate":"2024-04-08"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-08"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"                ui.showError(\"Task not found!\");","lastModifiedDate":"2024-04-08"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Carosis"},"content":"            store.save(tskList.getAllTasks());","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"Carosis"},"content":"            ui.printNumberOfTask(tskList);","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"Carosis"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Carosis"},"content":"            ui.showError(ERROR_MESSAGE_PREFIX + e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":66,"author":{"gitId":"Carosis"},"content":"     * Checks if this command is an exit command.","lastModifiedDate":"2024-04-07"},{"lineNumber":67,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":68,"author":{"gitId":"Carosis"},"content":"     * @return Always returns false, as adding a task is not an exit command.","lastModifiedDate":"2024-04-07"},{"lineNumber":69,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":70,"author":{"gitId":"Carosis"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"Carosis"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"Carosis"},"content":"        return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Carosis":74}},{"path":"src/main/java/duke/command/MarkTaskFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents a command to mark or unmark a task in the task list as done.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" * This class is part of the command pattern implementation.","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" * It encapsulates the functionality needed to mark or unmark a task.","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @author Zijing","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"package duke.command;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"import duke.utility.UI;","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":" * Represents a command for marking or unmarking a task as done in the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":" * This command is executed when the user wants to mark or unmark a task as done.","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"public class MarkTaskFunction extends Command {","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"    private final String[] userInputs;","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"    private final String MARKED_TYPE_MESSAGE \u003d \"mark\";","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"    private final String UNMARKED_TYPE_MESSAGE \u003d \"unmark\";","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"    private final String MARKED_MESSAGE \u003d \"marked\";","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"    private final String UNMARKED_MESSAGE \u003d \"unmarked\";","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"    private final String ERROR_MESSAGE_PREFIX \u003d \"Failed to remove the incantation meow! : \";","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"     * Constructs a MarkTaskFunction command with the specified user inputs.","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"     * @param userInput The user inputs, including the type of action (mark/unmark) and task index.","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"    public MarkTaskFunction(String[] userInput) {","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"        this.userInputs \u003d userInput;","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"     * Executes the mark/unmark task command.","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"     * @param tskList The task list containing the task to be marked or unmarked.","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"     * @param store    The storage component for saving task data.","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If there is an error marking or unmarking the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"    public void execute(TaskList tskList, UI ui, Storage store) throws DukeException {","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"        Tasks tsk \u003d tskList.storedTaskList.get(Integer.parseInt(userInputs[1]) - 1);","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"        if (userInputs[0].equals(MARKED_TYPE_MESSAGE)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"            ui.show(MARKED_MESSAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"            tsk.setIsDone(true);","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"        } else if (userInputs[0].equals(UNMARKED_TYPE_MESSAGE)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"            ui.show(UNMARKED_MESSAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"            tsk.setIsDone(false);","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"Carosis"},"content":"        ui.printTaskMsg(tsk.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"Carosis"},"content":"            store.save(tskList.getAllTasks());","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Carosis"},"content":"            ui.printNumberOfTask(tskList);","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Carosis"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"Carosis"},"content":"            ui.showError(ERROR_MESSAGE_PREFIX + e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":68,"author":{"gitId":"Carosis"},"content":"     * Checks if this command is an exit command.","lastModifiedDate":"2024-04-07"},{"lineNumber":69,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":70,"author":{"gitId":"Carosis"},"content":"     * @return Always returns false, as marking/unmarking a task is not an exit command.","lastModifiedDate":"2024-04-07"},{"lineNumber":71,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"Carosis"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"Carosis"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"Carosis"},"content":"        return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Carosis":76}},{"path":"src/main/java/duke/command/PrintByeFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents a command to print a goodbye message and exit the program.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" * This class is part of the command pattern implementation.","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" * It encapsulates the functionality needed to print a goodbye message and exit the program.","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @author Zijing","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"package duke.command;","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"import duke.utility.UI;","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":" * Represents a command for printing a goodbye message and exiting the program.","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":" * This command is executed when the user wants to end the program.","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"public class PrintByeFunction extends Command {","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"    private final String GOODBYE_MESSAGE \u003d \"goodbye\";","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"     * Executes the goodbye command.","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"     * @param tskList The task list (not used in this command).","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"     * @param store    The storage component (not used in this command).","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"    public void execute(TaskList tskList, UI ui, Storage store) {","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"        ui.show(GOODBYE_MESSAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"     * Checks if this command is an exit command.","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"     * @return Always returns true, as this command exits the program.","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"        return true;","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Carosis":41}},{"path":"src/main/java/duke/command/SnoozeTaskFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents a command to snooze a task in the task list by a specified duration.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" * This class is part of the command pattern implementation.","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" * It encapsulates the functionality needed to snooze a task.","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @author Zijing","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"package duke.command;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"import duke.tasks.DeadlineTask;","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"import duke.tasks.DoWithInTimeTask;","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"import duke.utility.UI;","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"import duke.utility.InputParser;","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":" * Represents a command for snoozing a task in the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":" * This command is executed when the user wants to snooze a task by a specified duration.","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"public class SnoozeTaskFunction extends Command {","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"    private final String[] userInputs;","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"    private final InputParser inputParser \u003d new InputParser();","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"    private final String INVALID_INPUT_MESSAGE \u003d \"Invalid input meow!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"    private final String INVALID_TASK_TYPE_MESSAGE \u003d \"Invalid tasks type for snoozing\";","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"     * Constructs a SnoozeTaskFunction command with the specified user inputs.","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"     * @param userInput The user inputs, including task index and snooze duration.","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"    public SnoozeTaskFunction(String[] userInput) {","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"        this.userInputs \u003d userInput;","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"     * Executes the snooze task command.","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"     * @param taskList The task list containing the task to be snoozed.","lastModifiedDate":"2024-04-07"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2024-04-07"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"     * @param storage  The storage component for saving task data.","lastModifiedDate":"2024-04-07"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If there is an error snoozing the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException {","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"        Tasks task \u003d taskList.storedTaskList.get(Integer.parseInt(userInputs[0]) - 1);","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"        String taskType \u003d task.getTaskType();","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"        String[] parseSnoozeInfo \u003d userInputs[1].split(\" \");","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"Carosis"},"content":"        String[] transferDate \u003d snoozeType(taskType, task);","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"Carosis"},"content":"        String newDT;","lastModifiedDate":"2024-04-07"},{"lineNumber":60,"author":{"gitId":"Carosis"},"content":"        switch (parseSnoozeInfo[1]) {","lastModifiedDate":"2024-04-07"},{"lineNumber":61,"author":{"gitId":"Carosis"},"content":"            case \"hrs\":","lastModifiedDate":"2024-04-07"},{"lineNumber":62,"author":{"gitId":"Carosis"},"content":"                newDT \u003d addHours(parseSnoozeInfo[0], transferDate[1]);","lastModifiedDate":"2024-04-07"},{"lineNumber":63,"author":{"gitId":"Carosis"},"content":"                break;","lastModifiedDate":"2024-04-07"},{"lineNumber":64,"author":{"gitId":"Carosis"},"content":"            case \"days\":","lastModifiedDate":"2024-04-07"},{"lineNumber":65,"author":{"gitId":"Carosis"},"content":"                newDT \u003d addDays(parseSnoozeInfo[0], transferDate[1]);","lastModifiedDate":"2024-04-07"},{"lineNumber":66,"author":{"gitId":"Carosis"},"content":"                break;","lastModifiedDate":"2024-04-07"},{"lineNumber":67,"author":{"gitId":"Carosis"},"content":"            case \"mins\":","lastModifiedDate":"2024-04-07"},{"lineNumber":68,"author":{"gitId":"Carosis"},"content":"                newDT \u003d addMinutes(parseSnoozeInfo[0], transferDate[1]);","lastModifiedDate":"2024-04-07"},{"lineNumber":69,"author":{"gitId":"Carosis"},"content":"                break;","lastModifiedDate":"2024-04-07"},{"lineNumber":70,"author":{"gitId":"Carosis"},"content":"            default:","lastModifiedDate":"2024-04-07"},{"lineNumber":71,"author":{"gitId":"Carosis"},"content":"                throw new DukeException(INVALID_INPUT_MESSAGE);","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":73,"author":{"gitId":"Carosis"},"content":"        UpdateTaskFunction updateTaskFunction \u003d new UpdateTaskFunction(new String[]{userInputs[0], transferDate[0], newDT});","lastModifiedDate":"2024-04-07"},{"lineNumber":74,"author":{"gitId":"Carosis"},"content":"        updateTaskFunction.execute(taskList, ui, storage);","lastModifiedDate":"2024-04-07"},{"lineNumber":75,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":78,"author":{"gitId":"Carosis"},"content":"     * Checks if this command is an exit command.","lastModifiedDate":"2024-04-07"},{"lineNumber":79,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":80,"author":{"gitId":"Carosis"},"content":"     * @return Always returns false, as snoozing a task is not an exit command.","lastModifiedDate":"2024-04-07"},{"lineNumber":81,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":82,"author":{"gitId":"Carosis"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"Carosis"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"Carosis"},"content":"        return false;","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":88,"author":{"gitId":"Carosis"},"content":"     * Adds the specified number of minutes to the given date and time.","lastModifiedDate":"2024-04-07"},{"lineNumber":89,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":90,"author":{"gitId":"Carosis"},"content":"     * @param minutes The number of minutes to add.","lastModifiedDate":"2024-04-07"},{"lineNumber":91,"author":{"gitId":"Carosis"},"content":"     * @param toAdd   The date and time to which minutes are added.","lastModifiedDate":"2024-04-07"},{"lineNumber":92,"author":{"gitId":"Carosis"},"content":"     * @return The updated date and time after adding minutes.","lastModifiedDate":"2024-04-07"},{"lineNumber":93,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If there is an error parsing the date and time.","lastModifiedDate":"2024-04-07"},{"lineNumber":94,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":95,"author":{"gitId":"Carosis"},"content":"    private String addMinutes(String minutes, String toAdd) throws DukeException {","lastModifiedDate":"2024-04-07"},{"lineNumber":96,"author":{"gitId":"Carosis"},"content":"        LocalDateTime temp \u003d inputParser.parseDate(toAdd);","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"Carosis"},"content":"        temp \u003d temp.plusMinutes(Integer.parseInt(minutes));","lastModifiedDate":"2024-04-07"},{"lineNumber":98,"author":{"gitId":"Carosis"},"content":"        return inputParser.formatOutput(temp);","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":102,"author":{"gitId":"Carosis"},"content":"     * Adds the specified number of hours to the given date and time.","lastModifiedDate":"2024-04-07"},{"lineNumber":103,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":104,"author":{"gitId":"Carosis"},"content":"     * @param hours The number of hours to add.","lastModifiedDate":"2024-04-07"},{"lineNumber":105,"author":{"gitId":"Carosis"},"content":"     * @param toAdd The date and time to which hours are added.","lastModifiedDate":"2024-04-07"},{"lineNumber":106,"author":{"gitId":"Carosis"},"content":"     * @return The updated date and time after adding hours.","lastModifiedDate":"2024-04-07"},{"lineNumber":107,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If there is an error parsing the date and time.","lastModifiedDate":"2024-04-07"},{"lineNumber":108,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":109,"author":{"gitId":"Carosis"},"content":"    private String addHours(String hours, String toAdd) throws DukeException {","lastModifiedDate":"2024-04-07"},{"lineNumber":110,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"Carosis"},"content":"        LocalDateTime temp \u003d inputParser.parseDate(toAdd);","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"Carosis"},"content":"        temp \u003d temp.plusMinutes(Integer.parseInt(hours));","lastModifiedDate":"2024-04-07"},{"lineNumber":113,"author":{"gitId":"Carosis"},"content":"        return inputParser.formatOutput(temp);","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":117,"author":{"gitId":"Carosis"},"content":"     * Adds the specified number of days to the given date and time.","lastModifiedDate":"2024-04-07"},{"lineNumber":118,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":119,"author":{"gitId":"Carosis"},"content":"     * @param days  The number of days to add.","lastModifiedDate":"2024-04-07"},{"lineNumber":120,"author":{"gitId":"Carosis"},"content":"     * @param toAdd The date and time to which days are added.","lastModifiedDate":"2024-04-07"},{"lineNumber":121,"author":{"gitId":"Carosis"},"content":"     * @return The updated date and time after adding days.","lastModifiedDate":"2024-04-07"},{"lineNumber":122,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If there is an error parsing the date and time.","lastModifiedDate":"2024-04-07"},{"lineNumber":123,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":124,"author":{"gitId":"Carosis"},"content":"    private String addDays(String days, String toAdd) throws DukeException {","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"Carosis"},"content":"        LocalDateTime temp \u003d inputParser.parseDate(toAdd);","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"Carosis"},"content":"        temp \u003d temp.plusDays(Integer.parseInt(days));","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"Carosis"},"content":"        return inputParser.formatOutput(temp);","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":132,"author":{"gitId":"Carosis"},"content":"     * Determines the type of task and retrieves relevant information for snoozing.","lastModifiedDate":"2024-04-07"},{"lineNumber":133,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":134,"author":{"gitId":"Carosis"},"content":"     * @param taskType The type of the task (E for EventTask, D for DeadlineTask, B for DoWithInTimeTask).","lastModifiedDate":"2024-04-07"},{"lineNumber":135,"author":{"gitId":"Carosis"},"content":"     * @param tsk      The task for which snooze information is needed.","lastModifiedDate":"2024-04-07"},{"lineNumber":136,"author":{"gitId":"Carosis"},"content":"     * @return An array containing snooze information based on the task type.","lastModifiedDate":"2024-04-07"},{"lineNumber":137,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If the task type is invalid or does not match the actual task type.","lastModifiedDate":"2024-04-07"},{"lineNumber":138,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":139,"author":{"gitId":"Carosis"},"content":"    private String[] snoozeType(String taskType, Tasks tsk) throws DukeException {","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"Carosis"},"content":"        switch (taskType) {","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"Carosis"},"content":"            case \"E\":","lastModifiedDate":"2024-03-30"},{"lineNumber":142,"author":{"gitId":"Carosis"},"content":"                if (tsk instanceof EventTask) {","lastModifiedDate":"2024-04-07"},{"lineNumber":143,"author":{"gitId":"Carosis"},"content":"                    EventTask tempE \u003d (EventTask) tsk;","lastModifiedDate":"2024-04-07"},{"lineNumber":144,"author":{"gitId":"Carosis"},"content":"                    return new String[]{\"to\", tempE.getTo()};","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"Carosis"},"content":"                }","lastModifiedDate":"2024-03-30"},{"lineNumber":146,"author":{"gitId":"Carosis"},"content":"                break;","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"Carosis"},"content":"            case \"D\":","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"Carosis"},"content":"                if (tsk instanceof DeadlineTask) {","lastModifiedDate":"2024-04-07"},{"lineNumber":149,"author":{"gitId":"Carosis"},"content":"                    DeadlineTask tempD \u003d (DeadlineTask) tsk;","lastModifiedDate":"2024-04-07"},{"lineNumber":150,"author":{"gitId":"Carosis"},"content":"                    return new String[]{\"by\", tempD.getBy()};","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"Carosis"},"content":"                }","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"Carosis"},"content":"                break;","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"Carosis"},"content":"            case \"B\":","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"Carosis"},"content":"                if (tsk instanceof DoWithInTimeTask) {","lastModifiedDate":"2024-04-07"},{"lineNumber":155,"author":{"gitId":"Carosis"},"content":"                    DoWithInTimeTask tempB \u003d (DoWithInTimeTask) tsk;","lastModifiedDate":"2024-04-07"},{"lineNumber":156,"author":{"gitId":"Carosis"},"content":"                    return new String[]{\"between\", tempB.getTo()};","lastModifiedDate":"2024-04-07"},{"lineNumber":157,"author":{"gitId":"Carosis"},"content":"                }","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"Carosis"},"content":"                break;","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"Carosis"},"content":"        throw new DukeException(INVALID_TASK_TYPE_MESSAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"Carosis":163}},{"path":"src/main/java/duke/command/UpdateTaskFunction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents a command to update a task in the task list with new information.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" * This class is part of the command pattern implementation.","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" * It encapsulates the functionality needed to update different aspects of a task.","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @author Zijing","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"package duke.command;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"import duke.tasks.DeadlineTask;","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"import duke.tasks.DoWithInTimeTask;","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"import duke.utility.UI;","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"import duke.utility.InputParser;","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":" * Represents a command for updating a task in the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":" * This command allows updating various properties of a task such as description, dates, etc.","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"public class UpdateTaskFunction extends Command {","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"    private final String[] userInputs;","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"    private final InputParser inputParser \u003d new InputParser();","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"    private final String UPDATE_MESSAGE \u003d \"update\";","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"    private final String INVALID_INPUT_MESSAGE \u003d \"Invalid input meow!\";","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"     * Constructs an UpdateTaskFunction command with the specified user inputs.","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"     * @param userInput The user inputs, including task index and update information.","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"    public UpdateTaskFunction(String[] userInput) {","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"        this.userInputs \u003d userInput;","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"     * Executes the update task command.","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"     * @param tskList The task list containing the task to be updated.","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"     * @param ui       The user interface for displaying messages.","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"     * @param store  The storage component for saving task data.","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"    public void execute(TaskList tskList, UI ui, Storage store) {","lastModifiedDate":"2024-04-07"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"        Tasks tsk \u003d tskList.storedTaskList.get(Integer.parseInt(userInputs[0]) - 1);","lastModifiedDate":"2024-04-07"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"        String LINE_SEPARATOR \u003d \"line\";","lastModifiedDate":"2024-04-07"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"        switch (userInputs[1]) {","lastModifiedDate":"2024-04-07"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"            case \"description\":","lastModifiedDate":"2024-04-07"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"                updateDescription(tsk, ui);","lastModifiedDate":"2024-04-07"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"                break;","lastModifiedDate":"2024-04-07"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"            case \"from\":","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"                updateEventFrom(tsk, ui);","lastModifiedDate":"2024-04-07"},{"lineNumber":57,"author":{"gitId":"Carosis"},"content":"                break;","lastModifiedDate":"2024-04-07"},{"lineNumber":58,"author":{"gitId":"Carosis"},"content":"            case \"to\":","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"Carosis"},"content":"                updateEventTo(tsk, ui);","lastModifiedDate":"2024-04-07"},{"lineNumber":60,"author":{"gitId":"Carosis"},"content":"                break;","lastModifiedDate":"2024-04-07"},{"lineNumber":61,"author":{"gitId":"Carosis"},"content":"            case \"by\":","lastModifiedDate":"2024-04-07"},{"lineNumber":62,"author":{"gitId":"Carosis"},"content":"                updateDeadlineBy(tsk, ui);","lastModifiedDate":"2024-04-07"},{"lineNumber":63,"author":{"gitId":"Carosis"},"content":"                break;","lastModifiedDate":"2024-04-07"},{"lineNumber":64,"author":{"gitId":"Carosis"},"content":"            case \"between\":","lastModifiedDate":"2024-04-07"},{"lineNumber":65,"author":{"gitId":"Carosis"},"content":"                updateEDoWithInTimeBetween(tsk, ui);","lastModifiedDate":"2024-04-07"},{"lineNumber":66,"author":{"gitId":"Carosis"},"content":"                break;","lastModifiedDate":"2024-04-07"},{"lineNumber":67,"author":{"gitId":"Carosis"},"content":"            default:","lastModifiedDate":"2024-04-07"},{"lineNumber":68,"author":{"gitId":"Carosis"},"content":"                System.err.println(INVALID_INPUT_MESSAGE);","lastModifiedDate":"2024-04-07"},{"lineNumber":69,"author":{"gitId":"Carosis"},"content":"                ui.show(LINE_SEPARATOR);","lastModifiedDate":"2024-04-07"},{"lineNumber":70,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":71,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":73,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":74,"author":{"gitId":"Carosis"},"content":"     * Updates the description of the specified task.","lastModifiedDate":"2024-04-07"},{"lineNumber":75,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":76,"author":{"gitId":"Carosis"},"content":"     * @param task The task to update.","lastModifiedDate":"2024-04-07"},{"lineNumber":77,"author":{"gitId":"Carosis"},"content":"     * @param ui   The user interface for displaying messages.","lastModifiedDate":"2024-04-07"},{"lineNumber":78,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":79,"author":{"gitId":"Carosis"},"content":"    private void updateDescription(Tasks task, UI ui) {","lastModifiedDate":"2024-04-07"},{"lineNumber":80,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-04-07"},{"lineNumber":81,"author":{"gitId":"Carosis"},"content":"            task.setDescription(userInputs[2]);","lastModifiedDate":"2024-04-07"},{"lineNumber":82,"author":{"gitId":"Carosis"},"content":"            ui.show(UPDATE_MESSAGE);","lastModifiedDate":"2024-04-07"},{"lineNumber":83,"author":{"gitId":"Carosis"},"content":"            ui.printTaskMsg(task.toString());","lastModifiedDate":"2024-04-07"},{"lineNumber":84,"author":{"gitId":"Carosis"},"content":"        } catch (ClassCastException e) {","lastModifiedDate":"2024-04-07"},{"lineNumber":85,"author":{"gitId":"Carosis"},"content":"            String INVALID_DESCRIPTION_MESSAGE \u003d \"Invalid description meow!\";","lastModifiedDate":"2024-04-07"},{"lineNumber":86,"author":{"gitId":"Carosis"},"content":"            System.err.println(INVALID_DESCRIPTION_MESSAGE);","lastModifiedDate":"2024-04-07"},{"lineNumber":87,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":88,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":89,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":90,"author":{"gitId":"Carosis"},"content":"     * Updates the start time of an event task.","lastModifiedDate":"2024-04-07"},{"lineNumber":91,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":92,"author":{"gitId":"Carosis"},"content":"     * @param task The event task to update.","lastModifiedDate":"2024-04-07"},{"lineNumber":93,"author":{"gitId":"Carosis"},"content":"     * @param ui   The user interface for displaying messages.","lastModifiedDate":"2024-04-07"},{"lineNumber":94,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":95,"author":{"gitId":"Carosis"},"content":"    private void updateEventFrom(Tasks task, UI ui){","lastModifiedDate":"2024-04-07"},{"lineNumber":96,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-04-07"},{"lineNumber":97,"author":{"gitId":"Carosis"},"content":"            EventTask eventTask \u003d (EventTask) task;","lastModifiedDate":"2024-04-07"},{"lineNumber":98,"author":{"gitId":"Carosis"},"content":"            String tempFrom \u003d inputParser.formatOutput(inputParser.parseDate(userInputs[2]));","lastModifiedDate":"2024-04-07"},{"lineNumber":99,"author":{"gitId":"Carosis"},"content":"            eventTask.setFrom(tempFrom);","lastModifiedDate":"2024-04-07"},{"lineNumber":100,"author":{"gitId":"Carosis"},"content":"            if (userInputs.length \u003e\u003d 4) {","lastModifiedDate":"2024-04-07"},{"lineNumber":101,"author":{"gitId":"Carosis"},"content":"                String tempTo \u003d inputParser.formatOutput(inputParser.parseDate(userInputs[3]));","lastModifiedDate":"2024-04-07"},{"lineNumber":102,"author":{"gitId":"Carosis"},"content":"                eventTask.setTo(tempTo);","lastModifiedDate":"2024-04-07"},{"lineNumber":103,"author":{"gitId":"Carosis"},"content":"            }","lastModifiedDate":"2024-04-07"},{"lineNumber":104,"author":{"gitId":"Carosis"},"content":"            ui.show(UPDATE_MESSAGE);","lastModifiedDate":"2024-04-07"},{"lineNumber":105,"author":{"gitId":"Carosis"},"content":"            ui.printTaskMsg(task.toString());","lastModifiedDate":"2024-04-07"},{"lineNumber":106,"author":{"gitId":"Carosis"},"content":"        } catch (ClassCastException | DukeException e) {","lastModifiedDate":"2024-04-07"},{"lineNumber":107,"author":{"gitId":"Carosis"},"content":"            String INVALID_UPDATE_EVENT_FROM_MESSAGE \u003d \"Invalid update event from meow!\";","lastModifiedDate":"2024-04-07"},{"lineNumber":108,"author":{"gitId":"Carosis"},"content":"            System.err.println(INVALID_UPDATE_EVENT_FROM_MESSAGE);","lastModifiedDate":"2024-04-07"},{"lineNumber":109,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":110,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":111,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":112,"author":{"gitId":"Carosis"},"content":"     * Updates the end time of an event task.","lastModifiedDate":"2024-04-07"},{"lineNumber":113,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":114,"author":{"gitId":"Carosis"},"content":"     * @param task The event task to update.","lastModifiedDate":"2024-04-07"},{"lineNumber":115,"author":{"gitId":"Carosis"},"content":"     * @param ui   The user interface for displaying messages.","lastModifiedDate":"2024-04-07"},{"lineNumber":116,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":117,"author":{"gitId":"Carosis"},"content":"    private void updateEventTo(Tasks task, UI ui){","lastModifiedDate":"2024-04-07"},{"lineNumber":118,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-04-07"},{"lineNumber":119,"author":{"gitId":"Carosis"},"content":"            EventTask temp \u003d (EventTask) task;","lastModifiedDate":"2024-04-07"},{"lineNumber":120,"author":{"gitId":"Carosis"},"content":"            String tempTo \u003d inputParser.formatOutput(inputParser.parseDate(userInputs[2].trim()));","lastModifiedDate":"2024-04-07"},{"lineNumber":121,"author":{"gitId":"Carosis"},"content":"            temp.setTo(tempTo);","lastModifiedDate":"2024-04-07"},{"lineNumber":122,"author":{"gitId":"Carosis"},"content":"            ui.show(UPDATE_MESSAGE);","lastModifiedDate":"2024-04-07"},{"lineNumber":123,"author":{"gitId":"Carosis"},"content":"            ui.printTaskMsg(task.toString());","lastModifiedDate":"2024-04-07"},{"lineNumber":124,"author":{"gitId":"Carosis"},"content":"        } catch (ClassCastException | DukeException e) {","lastModifiedDate":"2024-04-07"},{"lineNumber":125,"author":{"gitId":"Carosis"},"content":"            String INVALID_UPDATE_EVENT_TO_MESSAGE \u003d \"Invalid update event to meow!\";","lastModifiedDate":"2024-04-07"},{"lineNumber":126,"author":{"gitId":"Carosis"},"content":"            System.err.println(INVALID_UPDATE_EVENT_TO_MESSAGE);","lastModifiedDate":"2024-04-07"},{"lineNumber":127,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":128,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":129,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":130,"author":{"gitId":"Carosis"},"content":"     * Updates the deadline of a task.","lastModifiedDate":"2024-04-07"},{"lineNumber":131,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":132,"author":{"gitId":"Carosis"},"content":"     * @param task The deadline task to update.","lastModifiedDate":"2024-04-07"},{"lineNumber":133,"author":{"gitId":"Carosis"},"content":"     * @param ui   The user interface for displaying messages.","lastModifiedDate":"2024-04-07"},{"lineNumber":134,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":135,"author":{"gitId":"Carosis"},"content":"    private void updateDeadlineBy(Tasks task, UI ui){","lastModifiedDate":"2024-04-07"},{"lineNumber":136,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-04-07"},{"lineNumber":137,"author":{"gitId":"Carosis"},"content":"            DeadlineTask deadlineTask \u003d (DeadlineTask) task;","lastModifiedDate":"2024-04-07"},{"lineNumber":138,"author":{"gitId":"Carosis"},"content":"            String tempBy \u003d inputParser.formatOutput(inputParser.parseDate(userInputs[2].trim()));","lastModifiedDate":"2024-04-07"},{"lineNumber":139,"author":{"gitId":"Carosis"},"content":"            deadlineTask.setBy(tempBy);","lastModifiedDate":"2024-04-07"},{"lineNumber":140,"author":{"gitId":"Carosis"},"content":"            ui.show(UPDATE_MESSAGE);","lastModifiedDate":"2024-04-07"},{"lineNumber":141,"author":{"gitId":"Carosis"},"content":"            ui.printTaskMsg(task.toString());","lastModifiedDate":"2024-04-07"},{"lineNumber":142,"author":{"gitId":"Carosis"},"content":"        } catch (ClassCastException | DukeException e) {","lastModifiedDate":"2024-04-07"},{"lineNumber":143,"author":{"gitId":"Carosis"},"content":"            String INVALID_UPDATE_DEADLINE_BY_MESSAGE \u003d \"Invalid update deadline by meow!\";","lastModifiedDate":"2024-04-07"},{"lineNumber":144,"author":{"gitId":"Carosis"},"content":"            System.err.println(INVALID_UPDATE_DEADLINE_BY_MESSAGE);","lastModifiedDate":"2024-04-07"},{"lineNumber":145,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":146,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":147,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":148,"author":{"gitId":"Carosis"},"content":"     * Updates the period of a task.","lastModifiedDate":"2024-04-07"},{"lineNumber":149,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":150,"author":{"gitId":"Carosis"},"content":"     * @param task The deadline task to update.","lastModifiedDate":"2024-04-07"},{"lineNumber":151,"author":{"gitId":"Carosis"},"content":"     * @param ui   The user interface for displaying messages.","lastModifiedDate":"2024-04-07"},{"lineNumber":152,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":153,"author":{"gitId":"Carosis"},"content":"    private void updateEDoWithInTimeBetween(Tasks task, UI ui){","lastModifiedDate":"2024-04-07"},{"lineNumber":154,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":155,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-04-07"},{"lineNumber":156,"author":{"gitId":"Carosis"},"content":"            EventTask temp \u003d (DoWithInTimeTask) task;","lastModifiedDate":"2024-04-07"},{"lineNumber":157,"author":{"gitId":"Carosis"},"content":"            String tempStart \u003d inputParser.formatOutput(inputParser.parseDate(userInputs[2].trim()));","lastModifiedDate":"2024-04-07"},{"lineNumber":158,"author":{"gitId":"Carosis"},"content":"            temp.setFrom(tempStart);","lastModifiedDate":"2024-04-07"},{"lineNumber":159,"author":{"gitId":"Carosis"},"content":"            if (userInputs.length \u003e\u003d 4) {","lastModifiedDate":"2024-04-07"},{"lineNumber":160,"author":{"gitId":"Carosis"},"content":"                String tempEnd \u003d inputParser.formatOutput(inputParser.parseDate(userInputs[3].trim()));","lastModifiedDate":"2024-04-07"},{"lineNumber":161,"author":{"gitId":"Carosis"},"content":"                temp.setTo(tempEnd);","lastModifiedDate":"2024-04-07"},{"lineNumber":162,"author":{"gitId":"Carosis"},"content":"            }","lastModifiedDate":"2024-04-07"},{"lineNumber":163,"author":{"gitId":"Carosis"},"content":"            ui.show(UPDATE_MESSAGE);","lastModifiedDate":"2024-04-07"},{"lineNumber":164,"author":{"gitId":"Carosis"},"content":"            ui.printTaskMsg(task.toString());","lastModifiedDate":"2024-04-07"},{"lineNumber":165,"author":{"gitId":"Carosis"},"content":"        }catch (ClassCastException | DukeException e) {","lastModifiedDate":"2024-04-07"},{"lineNumber":166,"author":{"gitId":"Carosis"},"content":"            String INVALID_UPDATE_BETWEEN_MESSAGE \u003d \"Invalid update between meow!\";","lastModifiedDate":"2024-04-07"},{"lineNumber":167,"author":{"gitId":"Carosis"},"content":"            System.err.println(INVALID_UPDATE_BETWEEN_MESSAGE);","lastModifiedDate":"2024-04-07"},{"lineNumber":168,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":169,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":170,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":171,"author":{"gitId":"Carosis"},"content":"     * Checks if this command is an exit command.","lastModifiedDate":"2024-04-07"},{"lineNumber":172,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":173,"author":{"gitId":"Carosis"},"content":"     * @return Always returns false, as updating a task is not an exit command.","lastModifiedDate":"2024-04-07"},{"lineNumber":174,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":175,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":176,"author":{"gitId":"Carosis"},"content":"    @Override","lastModifiedDate":"2024-04-07"},{"lineNumber":177,"author":{"gitId":"Carosis"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-04-07"},{"lineNumber":178,"author":{"gitId":"Carosis"},"content":"        return false;","lastModifiedDate":"2024-04-07"},{"lineNumber":179,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":180,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"Carosis":180}},{"path":"src/main/java/duke/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" * Inherits from the Tasks class and includes information about the deadline.","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" * @author Zijing","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"package duke.tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"public class DeadlineTask extends Tasks {","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"    protected String by;// The deadline of the task","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"     * Constructs a DeadlineTask object with the specified description, completion status, and deadline.","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"     * @param isDone      The completion status of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"     * @param by          The deadline of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"    public DeadlineTask(String description, boolean isDone, String by) {","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"        super(description);// Calls the constructor of the superclass (Tasks)","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"        this.isDone \u003d isDone;// Sets the completion status","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"        this.by \u003d by;// Sets the deadline","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"        this.taskType \u003d TaskType.D.toString();// Sets the task type to \u0027D\u0027 (deadline task)","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"     * Sets the deadline of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"     * @param by The new deadline to set.","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"    public void setBy(String by) {","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"     * Gets the deadline of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"     * @return The deadline of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"    public String getBy() {","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"        return by;","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"     * Returns a string representation of the DeadlineTask object.","lastModifiedDate":"2024-04-07"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"     * Includes the task type, description, completion status, and deadline.","lastModifiedDate":"2024-04-07"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"     * @return A string representation of the DeadlineTask object.","lastModifiedDate":"2024-04-07"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"    public String toString() {","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"        return \"[\" + taskType + \"]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Carosis":56}},{"path":"src/main/java/duke/tasks/DoWithInTimeTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents a task with a specific time frame.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" * Inherits from the EventTask class and includes information about the time frame.","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" * @author Zijing","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"package duke.tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"public class DoWithInTimeTask extends EventTask {","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"    protected String taskBetween;// The start time of the time frame","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"    protected String taskAnd;// The end time of the time frame","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"     * Constructs a DoWithInTimeTask object with the specified description, completion status, time frame start, and end times.","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"     * @param description The description of the time frame task.","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"     * @param isDone      The completion status of the time frame task.","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"     * @param taskBetween The start time of the time frame task.","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"     * @param taskAnd     The end time of the time frame task.","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"    public DoWithInTimeTask(String description, boolean isDone, String taskBetween, String taskAnd) {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"        super(description, isDone, taskBetween, taskAnd);// Calls the constructor of the superclass (EventTask)","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"        this.taskBetween \u003d taskBetween;// Sets the time frame start","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"        this.taskAnd \u003d taskAnd;// Sets the time frame end","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"        this.taskType \u003d TaskType.B.toString();// Sets the task type to \u0027B\u0027 (time frame task)","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"     * Returns a string representation of the DoWithInTimeTask object.","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"     * Calls the superclass method to generate the string representation.","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"     * @return A string representation of the DoWithInTimeTask object.","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"        return super.toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"Carosis":39}},{"path":"src/main/java/duke/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents an event task with a start time and end time.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" * Inherits from the Tasks class and includes information about the deadline.","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" * @author Zijing","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"package duke.tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"public class EventTask extends Tasks {","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"    protected String taskFrom;// The start time of the event","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"    protected String taskTo;// The end time of the event","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"     * Constructs an EventTask object with the specified description, completion status, start time, and end time.","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"     * @param isDone      The completion status of the event task.","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"     * @param taskFrom    The start time of the event task.","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"     * @param taskTo      The end time of the event task.","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"    public EventTask(String description, boolean isDone, String taskFrom, String taskTo) {","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"        super(description);// Calls the constructor of the superclass (Tasks)","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"        this.isDone \u003d isDone;// Sets the task status","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"        this.taskType \u003d TaskType.E.toString();// Sets the task type to \u0027E\u0027 (event task)","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"        this.taskFrom \u003d taskFrom;// Sets the start time","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"        this.taskTo \u003d taskTo;// Sets the end time","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"     * Gets the start time of the event task.","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"     * @return The start time of the event task.","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"    public String getFrom() {","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"        return taskFrom;","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"     * Gets the end time of the event task.","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"     * @return The end time of the event task.","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"    public String getTo() {","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"        return taskTo;","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"     * Sets the start time of the event task.","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"     * @param from The new start time to set.","lastModifiedDate":"2024-04-07"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"        this.taskFrom \u003d from;","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"     * Sets the end time of the event task.","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":57,"author":{"gitId":"Carosis"},"content":"     * @param to The new end time to set.","lastModifiedDate":"2024-04-07"},{"lineNumber":58,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"Carosis"},"content":"    public void setTo(String to) {","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"Carosis"},"content":"        this.taskTo \u003d to;","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":64,"author":{"gitId":"Carosis"},"content":"     * Returns a string representation of the EventTask object.","lastModifiedDate":"2024-04-07"},{"lineNumber":65,"author":{"gitId":"Carosis"},"content":"     * Includes the task type, description, completion status, start time, and end time.","lastModifiedDate":"2024-04-07"},{"lineNumber":66,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":67,"author":{"gitId":"Carosis"},"content":"     * @return A string representation of the EventTask object.","lastModifiedDate":"2024-04-07"},{"lineNumber":68,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":69,"author":{"gitId":"Carosis"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"Carosis"},"content":"    public String toString() {","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"Carosis"},"content":"        return \"[\" + taskType + \"]\" + super.toString() + \" (From: \" + taskFrom + \") (To: \" + taskTo + \")\";","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Carosis":73}},{"path":"src/main/java/duke/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents the types of tasks in the task management system.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" * Each task type corresponds to a specific type of task, such as Todo, Deadline, Event, or DoWithInTime.","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" * @author Zijing","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"package duke.tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"public enum TaskType {","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"    T,// Todo task type","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"    D,// Deadline task type","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"    E,// Event task type","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"    B // DoWithInTime task type","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Carosis":17}},{"path":"src/main/java/duke/tasks/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents a generic task.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" * @author Zijing","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"package duke.tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":" * Represents a generic task with a description, status, and type.","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"public class Tasks {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"    protected String description;// The description of the task","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"    protected boolean isDone;// The status of the task","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"    protected String taskType;// The type of the task","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"     * Constructs a Tasks object.","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"    public Tasks() {","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"     * Constructs a Tasks object with the specified description.","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"    public Tasks(String description) {","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"        this.description \u003d description;// Sets the task description","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"        this.isDone \u003d false;// Sets the status to false (not done)","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"        this.taskType \u003d \" \";// Sets the task type to an empty string initially","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"     * Gets the description of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"        return description;","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"     * Sets the description of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"     * @param description The new description to set.","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"     * Checks if the task is done.","lastModifiedDate":"2024-04-07"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"     * @return True if the task is done, false otherwise.","lastModifiedDate":"2024-04-07"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"        return isDone;","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"Carosis"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":60,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":61,"author":{"gitId":"Carosis"},"content":"     * @param done The new completion status to set.","lastModifiedDate":"2024-04-07"},{"lineNumber":62,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If trying to mark a task that is already marked as done or not done.","lastModifiedDate":"2024-04-07"},{"lineNumber":63,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":64,"author":{"gitId":"Carosis"},"content":"    public void setIsDone(boolean done) throws DukeException {","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"Carosis"},"content":"        if (isDone \u003d\u003d done) {","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"Carosis"},"content":"            throw new DukeException(\"Meow!!! The mark almeowdy done.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"Carosis"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"Carosis"},"content":"            isDone \u003d done;","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":73,"author":{"gitId":"Carosis"},"content":"     * Gets the type of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":74,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":75,"author":{"gitId":"Carosis"},"content":"     * @return The type of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":76,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":77,"author":{"gitId":"Carosis"},"content":"    public String getTaskType() {","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"Carosis"},"content":"        return taskType;","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":81,"author":{"gitId":"Carosis"},"content":"     * Sets the type of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":82,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":83,"author":{"gitId":"Carosis"},"content":"     * @param taskType The new task type to set.","lastModifiedDate":"2024-04-07"},{"lineNumber":84,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":85,"author":{"gitId":"Carosis"},"content":"    public void setTaskType(String taskType) {","lastModifiedDate":"2024-04-07"},{"lineNumber":86,"author":{"gitId":"Carosis"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":89,"author":{"gitId":"Carosis"},"content":"     * Returns a string representation of the task, including its completion status icon and description.","lastModifiedDate":"2024-04-07"},{"lineNumber":90,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":91,"author":{"gitId":"Carosis"},"content":"     * @return A string representation of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":92,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":93,"author":{"gitId":"Carosis"},"content":"    public String toString() {","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"Carosis"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":97,"author":{"gitId":"Carosis"},"content":"     * Gets the completion status icon of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":98,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":99,"author":{"gitId":"Carosis"},"content":"     * @return The completion status icon (\u0027X\u0027 for done, \u0027 \u0027 for not done).","lastModifiedDate":"2024-04-07"},{"lineNumber":100,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":101,"author":{"gitId":"Carosis"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"Carosis"},"content":"        return (isDone ? \"X\" : \" \"); // mark done tasks with X","lastModifiedDate":"2024-04-07"},{"lineNumber":103,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Carosis":105}},{"path":"src/main/java/duke/tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents a simple task.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" * Inherits from the Tasks class and includes information about the deadline.","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" * @author Zijing","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"package duke.tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"public class TodoTask extends Tasks {","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"     * Constructs a TodoTask object with the specified description and completion status.","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"     * @param isDone      The completion status of the todo task.","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"    public TodoTask(String description, Boolean isDone) {","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"        this.description \u003d description;// Sets the task description","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"        this.isDone \u003d isDone;// Sets the task status","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"        this.taskType \u003d TaskType.T.toString();// Sets the task type to \u0027T\u0027 (todo task)","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"     * Returns a string representation of the TodoTask object.","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"     * Includes the task type and the superclass\u0027s toString method for the description and completion status.","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"     * @return A string representation of the TodoTask object.","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"    public String toString() {","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"        return \"[\" + taskType + \"]\" + super.toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Carosis":35}},{"path":"src/main/java/duke/utility/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents a custom exception specific to the Duke application.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" * This exception is used to handle errors and exceptional conditions within the Duke application.","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" * @author Zijing","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"package duke.utility;","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"     * Constructs a DukeException with the specified error message.","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"     * @param message The error message associated with the exception.","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"        super(message);","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Carosis":20}},{"path":"src/main/java/duke/utility/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * The InputParser class handles parsing user input and converting it into executable commands.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-08"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" * @author [Your Name]","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"package duke.utility;","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"import duke.command.AddTaskFunction;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"import duke.command.Command;","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"import duke.command.SnoozeTaskFunction;","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"import duke.command.UpdateTaskFunction;","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"import duke.command.DeleteTaskFunction;","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"import duke.command.PrintByeFunction;","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"import duke.command.ListTaskFunction;","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"import duke.command.MarkTaskFunction;","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"import duke.command.FindTaskFunction;","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2024-04-08"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"import duke.tasks.TodoTask;","lastModifiedDate":"2024-04-08"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"import duke.tasks.DeadlineTask;","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"import duke.tasks.DoWithInTimeTask;","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"import java.time.temporal.TemporalAccessor;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":" * Parses user input and generates corresponding commands for the Duke application.","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":" * Supports various commands such as adding tasks, updating tasks, marking tasks as done, and more.","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"public class InputParser {","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"    private final Map\u003cString, CommandHandler\u003e commandMap;","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"     * Initializes the command map with supported commands and their corresponding handlers.","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"    public InputParser() {","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"        commandMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"        commandMap.put(\"bye\", this::printBye);","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"        commandMap.put(\"list\", this::listTask);","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"        commandMap.put(\"todo\", this::AddTTask);","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"        commandMap.put(\"event\", this::AddETask);","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"        commandMap.put(\"delete\", this::deleteATask);","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"        commandMap.put(\"deadline\", this::AddDTask);","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"        commandMap.put(\"mark\", this::markTask);","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"        commandMap.put(\"unmark\", this::unmarkTask);","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"Carosis"},"content":"        commandMap.put(\"update\", this::updateTask);","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Carosis"},"content":"        commandMap.put(\"DoWithInPeriod\", this::AddBTask);","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"Carosis"},"content":"        commandMap.put(\"snooze\", this::snoozeTask);","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"Carosis"},"content":"        commandMap.put(\"find\", this::searchTask);","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":63,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":64,"author":{"gitId":"Carosis"},"content":"     * Parses the user input and returns the corresponding command.","lastModifiedDate":"2024-04-07"},{"lineNumber":65,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":66,"author":{"gitId":"Carosis"},"content":"     * @param input The user input to be parsed.","lastModifiedDate":"2024-04-07"},{"lineNumber":67,"author":{"gitId":"Carosis"},"content":"     * @return The generated command based on the input.","lastModifiedDate":"2024-04-07"},{"lineNumber":68,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If the input is invalid or unsupported.","lastModifiedDate":"2024-04-07"},{"lineNumber":69,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":70,"author":{"gitId":"Carosis"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"Carosis"},"content":"        String command;","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"Carosis"},"content":"        String argument;","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"Carosis"},"content":"        CommandHandler handler;","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":75,"author":{"gitId":"Carosis"},"content":"        String[] actualParts \u003d input.split(\" \", 2);","lastModifiedDate":"2024-04-07"},{"lineNumber":76,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":77,"author":{"gitId":"Carosis"},"content":"        // Checking if the input contains \u0027between\u0027 followed by \u0027and\u0027 to handle \u0027DoWithInPeriod\u0027 command","lastModifiedDate":"2024-04-07"},{"lineNumber":78,"author":{"gitId":"Carosis"},"content":"        boolean containsAndAfterBetween \u003d input.matches(\".*\\\\bbetween\\\\b.*\\\\band\\\\b.*\");","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":80,"author":{"gitId":"Carosis"},"content":"        // Checking if the command is supported based on the first part of the input","lastModifiedDate":"2024-04-07"},{"lineNumber":81,"author":{"gitId":"Carosis"},"content":"        boolean handlerMatched \u003d commandMap.containsKey(actualParts[0].toLowerCase());","lastModifiedDate":"2024-04-07"},{"lineNumber":82,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":83,"author":{"gitId":"Carosis"},"content":"        // Handling \u0027DoWithInPeriod\u0027 command if the input contains \u0027between\u0027 followed by \u0027and\u0027","lastModifiedDate":"2024-04-07"},{"lineNumber":84,"author":{"gitId":"Carosis"},"content":"        if (containsAndAfterBetween \u0026\u0026 !handlerMatched) {","lastModifiedDate":"2024-04-07"},{"lineNumber":85,"author":{"gitId":"Carosis"},"content":"            argument \u003d input.toLowerCase();","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"Carosis"},"content":"            handler \u003d commandMap.get(\"DoWithInPeriod\");","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"Carosis"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"Carosis"},"content":"            command \u003d actualParts[0].toLowerCase();","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"Carosis"},"content":"            argument \u003d actualParts.length \u003e 1 ? actualParts[1] : \"\";","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"Carosis"},"content":"            handler \u003d commandMap.get(command);","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"Carosis"},"content":"        if (handler !\u003d null) {","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"Carosis"},"content":"            return handler.handle(argument);","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"Carosis"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"Carosis"},"content":"            throw new DukeException(\"Meow? Unknown command!\");","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":100,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":101,"author":{"gitId":"Carosis"},"content":"     * Functional interface for command handlers.","lastModifiedDate":"2024-04-07"},{"lineNumber":102,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":103,"author":{"gitId":"Carosis"},"content":"    public interface CommandHandler {","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"Carosis"},"content":"        Command handle(String argument) throws DukeException;","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":108,"author":{"gitId":"Carosis"},"content":"     * Handles the addition of a TodoTask based on the input argument.","lastModifiedDate":"2024-04-07"},{"lineNumber":109,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":110,"author":{"gitId":"Carosis"},"content":"     * @param argument The argument containing the description of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":111,"author":{"gitId":"Carosis"},"content":"     * @return The AddTaskFunction command to add the TodoTask.","lastModifiedDate":"2024-04-07"},{"lineNumber":112,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If the description of the todo task is empty.","lastModifiedDate":"2024-04-07"},{"lineNumber":113,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":114,"author":{"gitId":"Carosis"},"content":"    private Command AddTTask(String argument) throws DukeException {","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"Carosis"},"content":"            return new AddTaskFunction(new TodoTask(argument, false));","lastModifiedDate":"2024-04-07"},{"lineNumber":117,"author":{"gitId":"Carosis"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"Carosis"},"content":"            throw new DukeException(\" Meow!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":122,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":123,"author":{"gitId":"Carosis"},"content":"     * Handles the addition of a DoWithInTimeTask based on the input argument.","lastModifiedDate":"2024-04-07"},{"lineNumber":124,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":125,"author":{"gitId":"Carosis"},"content":"     * @param argument The argument containing the details of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":126,"author":{"gitId":"Carosis"},"content":"     * @return The AddTaskFunction command to add the DoWithInTimeTask.","lastModifiedDate":"2024-04-07"},{"lineNumber":127,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If the input format for DoWithInTimeTask is invalid.","lastModifiedDate":"2024-04-07"},{"lineNumber":128,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":129,"author":{"gitId":"Carosis"},"content":"    private Command AddBTask(String argument) throws DukeException {","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"Carosis"},"content":"        String[] eventInfo \u003d argument.split(\" between \");","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"Carosis"},"content":"        String[] eventTimeInfo \u003d eventInfo[1].split(\"and\");","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"Carosis"},"content":"        String description \u003d eventInfo[0].trim();","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"Carosis"},"content":"        String from \u003d formatOutput(parseDate(eventTimeInfo[0].trim()));","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"Carosis"},"content":"        String to \u003d formatOutput(parseDate(eventTimeInfo[1].trim()));","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"Carosis"},"content":"        return new AddTaskFunction(new DoWithInTimeTask(description, false, from, to));","lastModifiedDate":"2024-04-07"},{"lineNumber":136,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":138,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":139,"author":{"gitId":"Carosis"},"content":"     * Handles the addition of a DeadlineTask based on the input argument.","lastModifiedDate":"2024-04-07"},{"lineNumber":140,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":141,"author":{"gitId":"Carosis"},"content":"     * @param argument The argument containing the description and deadline of the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":142,"author":{"gitId":"Carosis"},"content":"     * @return The AddTaskFunction command to add the DeadlineTask.","lastModifiedDate":"2024-04-07"},{"lineNumber":143,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If the input format for DeadlineTask is invalid.","lastModifiedDate":"2024-04-07"},{"lineNumber":144,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":145,"author":{"gitId":"Carosis"},"content":"    private Command AddDTask(String argument) throws DukeException {","lastModifiedDate":"2024-03-24"},{"lineNumber":146,"author":{"gitId":"Carosis"},"content":"        String[] parts \u003d argument.split(\"/by\");","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"Carosis"},"content":"        String deadlineInfo \u003d parts[0].trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":148,"author":{"gitId":"Carosis"},"content":"        String by \u003d formatOutput(parseDate(parts[1].trim()));","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"Carosis"},"content":"        if (deadlineInfo.isEmpty() || by.isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":150,"author":{"gitId":"Carosis"},"content":"            throw new DukeException(\"Meow!!! The description or deadline of a deadline cannot be empty.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":151,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":152,"author":{"gitId":"Carosis"},"content":"        return new AddTaskFunction(new DeadlineTask(deadlineInfo, false, by));","lastModifiedDate":"2024-04-07"},{"lineNumber":153,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":154,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":155,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":156,"author":{"gitId":"Carosis"},"content":"     * Handles the addition of an EventTask based on the input argument.","lastModifiedDate":"2024-04-07"},{"lineNumber":157,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":158,"author":{"gitId":"Carosis"},"content":"     * @param argument The argument containing the details of the event task.","lastModifiedDate":"2024-04-07"},{"lineNumber":159,"author":{"gitId":"Carosis"},"content":"     * @return The AddTaskFunction command to add the EventTask.","lastModifiedDate":"2024-04-07"},{"lineNumber":160,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If the input format for EventTask is invalid.","lastModifiedDate":"2024-04-07"},{"lineNumber":161,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":162,"author":{"gitId":"Carosis"},"content":"    private Command AddETask(String argument) throws DukeException {","lastModifiedDate":"2024-03-24"},{"lineNumber":163,"author":{"gitId":"Carosis"},"content":"        String[] eventInfo \u003d argument.split(\"/from|/to\");","lastModifiedDate":"2024-03-24"},{"lineNumber":164,"author":{"gitId":"Carosis"},"content":"        if (eventInfo.length !\u003d 3) {","lastModifiedDate":"2024-03-24"},{"lineNumber":165,"author":{"gitId":"Carosis"},"content":"            throw new DukeException(\"Invalid event format!\");","lastModifiedDate":"2024-03-24"},{"lineNumber":166,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":167,"author":{"gitId":"Carosis"},"content":"        String description \u003d eventInfo[0].trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":168,"author":{"gitId":"Carosis"},"content":"        String from \u003d formatOutput(parseDate(eventInfo[1].trim()));","lastModifiedDate":"2024-03-30"},{"lineNumber":169,"author":{"gitId":"Carosis"},"content":"        String to \u003d formatOutput(parseDate(eventInfo[2].trim()));","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"Carosis"},"content":"        return new AddTaskFunction(new EventTask(description, false, from, to));","lastModifiedDate":"2024-04-07"},{"lineNumber":171,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":172,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":173,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":174,"author":{"gitId":"Carosis"},"content":"     * Handles the updating of a task based on the input argument.","lastModifiedDate":"2024-04-07"},{"lineNumber":175,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":176,"author":{"gitId":"Carosis"},"content":"     * @param argument The argument containing the details of the task update.","lastModifiedDate":"2024-04-07"},{"lineNumber":177,"author":{"gitId":"Carosis"},"content":"     * @return The UpdateTaskFunction command to update the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":178,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If the input format for task update is invalid.","lastModifiedDate":"2024-04-07"},{"lineNumber":179,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":180,"author":{"gitId":"Carosis"},"content":"    private Command updateTask(String argument) throws DukeException {","lastModifiedDate":"2024-03-24"},{"lineNumber":181,"author":{"gitId":"Carosis"},"content":"        String[] parts \u003d argument.split(\" \");","lastModifiedDate":"2024-03-24"},{"lineNumber":182,"author":{"gitId":"Carosis"},"content":"        String[] updateInfo \u003d argument.split(\"\\\\b(?:from | to |by |description |between |and )\\\\b\");","lastModifiedDate":"2024-03-30"},{"lineNumber":183,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":184,"author":{"gitId":"Carosis"},"content":"        if (parts.length \u003c 3) {","lastModifiedDate":"2024-03-24"},{"lineNumber":185,"author":{"gitId":"Carosis"},"content":"            throw new DukeException(\"Invalid update format: \" + argument);","lastModifiedDate":"2024-03-24"},{"lineNumber":186,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":187,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":188,"author":{"gitId":"Carosis"},"content":"        String[] transferInfo \u003d getStrings(parts, updateInfo);","lastModifiedDate":"2024-04-07"},{"lineNumber":189,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":190,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-04-07"},{"lineNumber":191,"author":{"gitId":"Carosis"},"content":"            return new UpdateTaskFunction(transferInfo);","lastModifiedDate":"2024-04-07"},{"lineNumber":192,"author":{"gitId":"Carosis"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-07"},{"lineNumber":193,"author":{"gitId":"Carosis"},"content":"            throw new DukeException(\" Meow!!! The update format incorrect meow.\");","lastModifiedDate":"2024-04-07"},{"lineNumber":194,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":195,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":196,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":197,"author":{"gitId":"Carosis"},"content":"    private static String[] getStrings(String[] parts, String[] updateInfo) {","lastModifiedDate":"2024-04-07"},{"lineNumber":198,"author":{"gitId":"Carosis"},"content":"        String[] transferInfo \u003d new String[0];","lastModifiedDate":"2024-03-24"},{"lineNumber":199,"author":{"gitId":"Carosis"},"content":"        if (parts[1].equals(\"by\") || parts[1].equals(\"from\") || parts[1].equals(\"description\") || parts[1].equals(\"to\")) {","lastModifiedDate":"2024-03-24"},{"lineNumber":200,"author":{"gitId":"Carosis"},"content":"            transferInfo \u003d new String[]{parts[0], parts[1], updateInfo[1]};","lastModifiedDate":"2024-03-24"},{"lineNumber":201,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":202,"author":{"gitId":"Carosis"},"content":"        if (parts[1].equals(\"from\") \u0026\u0026 Arrays.asList(parts).contains(\"to\")) {","lastModifiedDate":"2024-03-24"},{"lineNumber":203,"author":{"gitId":"Carosis"},"content":"            transferInfo \u003d new String[]{parts[0], parts[1], updateInfo[1], updateInfo[2]};","lastModifiedDate":"2024-03-24"},{"lineNumber":204,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":205,"author":{"gitId":"Carosis"},"content":"        if (parts[1].equals(\"between\") \u0026\u0026 Arrays.asList(parts).contains(\"and\")) {","lastModifiedDate":"2024-03-30"},{"lineNumber":206,"author":{"gitId":"Carosis"},"content":"            transferInfo \u003d new String[]{parts[0], parts[1], updateInfo[1], updateInfo[2]};","lastModifiedDate":"2024-03-30"},{"lineNumber":207,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":208,"author":{"gitId":"Carosis"},"content":"        return transferInfo;","lastModifiedDate":"2024-04-07"},{"lineNumber":209,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":210,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":211,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":212,"author":{"gitId":"Carosis"},"content":"     * Handles the snoozing of a task based on the input argument.","lastModifiedDate":"2024-04-07"},{"lineNumber":213,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":214,"author":{"gitId":"Carosis"},"content":"     * @param argument The argument containing the details of the task snooze.","lastModifiedDate":"2024-04-07"},{"lineNumber":215,"author":{"gitId":"Carosis"},"content":"     * @return The SnoozeTaskFunction command to snooze the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":216,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If the input format for task snooze is invalid.","lastModifiedDate":"2024-04-07"},{"lineNumber":217,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":218,"author":{"gitId":"Carosis"},"content":"    private Command snoozeTask(String argument) throws DukeException {","lastModifiedDate":"2024-03-30"},{"lineNumber":219,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":220,"author":{"gitId":"Carosis"},"content":"        String[] snoozeInfo \u003d argument.split(\"\\\\b(?: for )\\\\b\");","lastModifiedDate":"2024-03-30"},{"lineNumber":221,"author":{"gitId":"Carosis"},"content":"        if (snoozeInfo.length \u003c 2) {","lastModifiedDate":"2024-03-30"},{"lineNumber":222,"author":{"gitId":"Carosis"},"content":"            throw new DukeException(\"Invalid snooze format: \" + argument);","lastModifiedDate":"2024-03-30"},{"lineNumber":223,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":224,"author":{"gitId":"Carosis"},"content":"        String[] transferInfo \u003d new String[]{snoozeInfo[0], snoozeInfo[1]};","lastModifiedDate":"2024-03-30"},{"lineNumber":225,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":226,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":227,"author":{"gitId":"Carosis"},"content":"            return new SnoozeTaskFunction(transferInfo);","lastModifiedDate":"2024-04-07"},{"lineNumber":228,"author":{"gitId":"Carosis"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":229,"author":{"gitId":"Carosis"},"content":"            throw new DukeException(\" Meow!!! The Snooze format incorrect meow.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":230,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":231,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":232,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":233,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":234,"author":{"gitId":"Carosis"},"content":"     * Handles the deletion of a task based on the input argument.","lastModifiedDate":"2024-04-07"},{"lineNumber":235,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":236,"author":{"gitId":"Carosis"},"content":"     * @param argument The argument containing the index of the task to delete.","lastModifiedDate":"2024-04-07"},{"lineNumber":237,"author":{"gitId":"Carosis"},"content":"     * @return The DeleteTaskFunction command to delete the task.","lastModifiedDate":"2024-04-07"},{"lineNumber":238,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If the input format for task deletion is invalid.","lastModifiedDate":"2024-04-07"},{"lineNumber":239,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":240,"author":{"gitId":"Carosis"},"content":"    private Command deleteATask(String argument) throws DukeException {","lastModifiedDate":"2024-03-24"},{"lineNumber":241,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":242,"author":{"gitId":"Carosis"},"content":"            int index \u003d Integer.parseInt(argument);","lastModifiedDate":"2024-03-24"},{"lineNumber":243,"author":{"gitId":"Carosis"},"content":"            return new DeleteTaskFunction(index);","lastModifiedDate":"2024-04-07"},{"lineNumber":244,"author":{"gitId":"Carosis"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":245,"author":{"gitId":"Carosis"},"content":"            throw new DukeException(\" Meow!!! The delete must come with int meow.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":246,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":247,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":248,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":249,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":250,"author":{"gitId":"Carosis"},"content":"     * Handles the printing of the goodbye message.","lastModifiedDate":"2024-04-07"},{"lineNumber":251,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":252,"author":{"gitId":"Carosis"},"content":"     * @param argument Unused argument for the goodbye command.","lastModifiedDate":"2024-04-07"},{"lineNumber":253,"author":{"gitId":"Carosis"},"content":"     * @return The PrintByeFunction command to print the goodbye message.","lastModifiedDate":"2024-04-07"},{"lineNumber":254,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":255,"author":{"gitId":"Carosis"},"content":"    private Command printBye(String argument) {","lastModifiedDate":"2024-03-24"},{"lineNumber":256,"author":{"gitId":"Carosis"},"content":"        return new PrintByeFunction();","lastModifiedDate":"2024-04-07"},{"lineNumber":257,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":258,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":259,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":260,"author":{"gitId":"Carosis"},"content":"     * Handles the listing of tasks.","lastModifiedDate":"2024-04-07"},{"lineNumber":261,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":262,"author":{"gitId":"Carosis"},"content":"     * @param argument Unused argument for the list command.","lastModifiedDate":"2024-04-07"},{"lineNumber":263,"author":{"gitId":"Carosis"},"content":"     * @return The ListTaskFunction command to list tasks.","lastModifiedDate":"2024-04-07"},{"lineNumber":264,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":265,"author":{"gitId":"Carosis"},"content":"    private Command listTask(String argument) throws DukeException {","lastModifiedDate":"2024-04-08"},{"lineNumber":266,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-04-08"},{"lineNumber":267,"author":{"gitId":"Carosis"},"content":"            if (argument.isEmpty()) {","lastModifiedDate":"2024-04-08"},{"lineNumber":268,"author":{"gitId":"Carosis"},"content":"                return new ListTaskFunction();","lastModifiedDate":"2024-04-07"},{"lineNumber":269,"author":{"gitId":"Carosis"},"content":"            } else {","lastModifiedDate":"2024-04-08"},{"lineNumber":270,"author":{"gitId":"Carosis"},"content":"                return new ListTaskFunction(Integer.parseInt(argument));","lastModifiedDate":"2024-04-08"},{"lineNumber":271,"author":{"gitId":"Carosis"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":272,"author":{"gitId":"Carosis"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-08"},{"lineNumber":273,"author":{"gitId":"Carosis"},"content":"            throw new DukeException(\"Must input index meow!\");","lastModifiedDate":"2024-04-08"},{"lineNumber":274,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":275,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":276,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":277,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":278,"author":{"gitId":"Carosis"},"content":"     * Handles the marking of a task as done.","lastModifiedDate":"2024-04-07"},{"lineNumber":279,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":280,"author":{"gitId":"Carosis"},"content":"     * @param argument The argument containing the index of the task to mark as done.","lastModifiedDate":"2024-04-07"},{"lineNumber":281,"author":{"gitId":"Carosis"},"content":"     * @return The MarkTaskFunction command to mark the task as done.","lastModifiedDate":"2024-04-07"},{"lineNumber":282,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If the input format for task marking is invalid.","lastModifiedDate":"2024-04-07"},{"lineNumber":283,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":284,"author":{"gitId":"Carosis"},"content":"    private Command markTask(String argument) throws DukeException {","lastModifiedDate":"2024-03-24"},{"lineNumber":285,"author":{"gitId":"Carosis"},"content":"        String[] markInfo \u003d {\"mark\", argument};","lastModifiedDate":"2024-03-30"},{"lineNumber":286,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":287,"author":{"gitId":"Carosis"},"content":"            return new MarkTaskFunction(markInfo);","lastModifiedDate":"2024-04-07"},{"lineNumber":288,"author":{"gitId":"Carosis"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":289,"author":{"gitId":"Carosis"},"content":"            throw new DukeException(\" Meow!!! The mark must come with int meow.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":290,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":291,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":292,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":293,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":294,"author":{"gitId":"Carosis"},"content":"     * Handles the unmarking of a task as not done.","lastModifiedDate":"2024-04-07"},{"lineNumber":295,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":296,"author":{"gitId":"Carosis"},"content":"     * @param argument The argument containing the index of the task to unmark as not done.","lastModifiedDate":"2024-04-07"},{"lineNumber":297,"author":{"gitId":"Carosis"},"content":"     * @return The MarkTaskFunction command to unmark the task as not done.","lastModifiedDate":"2024-04-07"},{"lineNumber":298,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If the input format for task unmarking is invalid.","lastModifiedDate":"2024-04-07"},{"lineNumber":299,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":300,"author":{"gitId":"Carosis"},"content":"    private Command unmarkTask(String argument) throws DukeException {","lastModifiedDate":"2024-03-30"},{"lineNumber":301,"author":{"gitId":"Carosis"},"content":"        String[] unmarkInfo \u003d {\"unmark\", argument};","lastModifiedDate":"2024-03-30"},{"lineNumber":302,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":303,"author":{"gitId":"Carosis"},"content":"            return new MarkTaskFunction(unmarkInfo);","lastModifiedDate":"2024-04-07"},{"lineNumber":304,"author":{"gitId":"Carosis"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":305,"author":{"gitId":"Carosis"},"content":"            throw new DukeException(\" Meow!!! The find must come with keywords meow.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":306,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":307,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":308,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":309,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":310,"author":{"gitId":"Carosis"},"content":"     * Handles the searching of tasks based on keywords.","lastModifiedDate":"2024-04-07"},{"lineNumber":311,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":312,"author":{"gitId":"Carosis"},"content":"     * @param argument The argument containing the keywords for task search.","lastModifiedDate":"2024-04-07"},{"lineNumber":313,"author":{"gitId":"Carosis"},"content":"     * @return The FindTaskFunction command to search for tasks.","lastModifiedDate":"2024-04-07"},{"lineNumber":314,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If the input format for task searching is invalid.","lastModifiedDate":"2024-04-07"},{"lineNumber":315,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":316,"author":{"gitId":"Carosis"},"content":"    private Command searchTask(String argument) throws DukeException {","lastModifiedDate":"2024-03-30"},{"lineNumber":317,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":318,"author":{"gitId":"Carosis"},"content":"            return new FindTaskFunction(argument);","lastModifiedDate":"2024-04-07"},{"lineNumber":319,"author":{"gitId":"Carosis"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":320,"author":{"gitId":"Carosis"},"content":"            throw new DukeException(\" Meow!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":321,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":322,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":323,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":324,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":325,"author":{"gitId":"Carosis"},"content":"     * Parses the date-time from the input argument and returns the LocalDateTime object.","lastModifiedDate":"2024-04-07"},{"lineNumber":326,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":327,"author":{"gitId":"Carosis"},"content":"     * @param argument The argument containing the date-time information.","lastModifiedDate":"2024-04-07"},{"lineNumber":328,"author":{"gitId":"Carosis"},"content":"     * @return The LocalDateTime object parsed from the input.","lastModifiedDate":"2024-04-07"},{"lineNumber":329,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If the input date-time format is invalid.","lastModifiedDate":"2024-04-07"},{"lineNumber":330,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":331,"author":{"gitId":"Carosis"},"content":"    public LocalDateTime parseDate(String argument) throws DukeException {","lastModifiedDate":"2024-03-30"},{"lineNumber":332,"author":{"gitId":"Carosis"},"content":"        argument \u003d argument.toLowerCase();","lastModifiedDate":"2024-03-24"},{"lineNumber":333,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":334,"author":{"gitId":"Carosis"},"content":"        if (argument.equals(\"today\")) {","lastModifiedDate":"2024-03-24"},{"lineNumber":335,"author":{"gitId":"Carosis"},"content":"            return LocalDateTime.now();","lastModifiedDate":"2024-03-30"},{"lineNumber":336,"author":{"gitId":"Carosis"},"content":"        } else if (argument.equals(\"tomorrow\")) {","lastModifiedDate":"2024-03-24"},{"lineNumber":337,"author":{"gitId":"Carosis"},"content":"            return LocalDateTime.now().plusDays(1);","lastModifiedDate":"2024-03-30"},{"lineNumber":338,"author":{"gitId":"Carosis"},"content":"        } else if (argument.equals(\"yesterday\")) {","lastModifiedDate":"2024-03-24"},{"lineNumber":339,"author":{"gitId":"Carosis"},"content":"            return LocalDateTime.now().minusDays(1);","lastModifiedDate":"2024-03-30"},{"lineNumber":340,"author":{"gitId":"Carosis"},"content":"        } else if (argument.equals(\"now\")) {","lastModifiedDate":"2024-03-30"},{"lineNumber":341,"author":{"gitId":"Carosis"},"content":"            return LocalDateTime.now();","lastModifiedDate":"2024-03-30"},{"lineNumber":342,"author":{"gitId":"Carosis"},"content":"        } else if (isValidDayOfWeek(argument)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":343,"author":{"gitId":"Carosis"},"content":"            DayOfWeek dayOfWeek \u003d DayOfWeek.valueOf(argument.toUpperCase());","lastModifiedDate":"2024-03-24"},{"lineNumber":344,"author":{"gitId":"Carosis"},"content":"            LocalDate nextOccurrence \u003d LocalDate.now().with(TemporalAdjusters.nextOrSame(dayOfWeek));","lastModifiedDate":"2024-03-24"},{"lineNumber":345,"author":{"gitId":"Carosis"},"content":"            return nextOccurrence.atStartOfDay();","lastModifiedDate":"2024-03-30"},{"lineNumber":346,"author":{"gitId":"Carosis"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":347,"author":{"gitId":"Carosis"},"content":"            if (!argument.matches(\".*\\\\d\\\\d:\\\\d\\\\d.*\")) {","lastModifiedDate":"2024-03-30"},{"lineNumber":348,"author":{"gitId":"Carosis"},"content":"                argument +\u003d \" 00:00\";","lastModifiedDate":"2024-03-30"},{"lineNumber":349,"author":{"gitId":"Carosis"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":350,"author":{"gitId":"Carosis"},"content":"            DateTimeFormatter customFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2024-03-30"},{"lineNumber":351,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":352,"author":{"gitId":"Carosis"},"content":"            try {","lastModifiedDate":"2024-03-24"},{"lineNumber":353,"author":{"gitId":"Carosis"},"content":"                return LocalDateTime.parse(argument, customFormatter);","lastModifiedDate":"2024-03-30"},{"lineNumber":354,"author":{"gitId":"Carosis"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":355,"author":{"gitId":"Carosis"},"content":"                throw new DukeException(\"Unable to parse date-time: \" + argument);","lastModifiedDate":"2024-03-30"},{"lineNumber":356,"author":{"gitId":"Carosis"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":357,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":358,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":359,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":360,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":361,"author":{"gitId":"Carosis"},"content":"     * Formats the output date-time from TemporalAccessor to a specified format.","lastModifiedDate":"2024-04-07"},{"lineNumber":362,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":363,"author":{"gitId":"Carosis"},"content":"     * @param temporalAccessor The TemporalAccessor object representing date-time.","lastModifiedDate":"2024-04-07"},{"lineNumber":364,"author":{"gitId":"Carosis"},"content":"     * @return The formatted date-time string.","lastModifiedDate":"2024-04-07"},{"lineNumber":365,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":366,"author":{"gitId":"Carosis"},"content":"    public String formatOutput(TemporalAccessor temporalAccessor) {","lastModifiedDate":"2024-03-30"},{"lineNumber":367,"author":{"gitId":"Carosis"},"content":"        return DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\").format(temporalAccessor);","lastModifiedDate":"2024-03-30"},{"lineNumber":368,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":369,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":370,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":371,"author":{"gitId":"Carosis"},"content":"     * Checks if the input string represents a valid day of the week.","lastModifiedDate":"2024-04-07"},{"lineNumber":372,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":373,"author":{"gitId":"Carosis"},"content":"     * @param input The input string to check.","lastModifiedDate":"2024-04-07"},{"lineNumber":374,"author":{"gitId":"Carosis"},"content":"     * @return True if the input is a valid day of the week, false otherwise.","lastModifiedDate":"2024-04-07"},{"lineNumber":375,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":376,"author":{"gitId":"Carosis"},"content":"    private boolean isValidDayOfWeek(String input) {","lastModifiedDate":"2024-03-24"},{"lineNumber":377,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":378,"author":{"gitId":"Carosis"},"content":"            DayOfWeek.valueOf(input.toUpperCase());","lastModifiedDate":"2024-03-24"},{"lineNumber":379,"author":{"gitId":"Carosis"},"content":"            return true;","lastModifiedDate":"2024-03-24"},{"lineNumber":380,"author":{"gitId":"Carosis"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":381,"author":{"gitId":"Carosis"},"content":"            return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":382,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":383,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":384,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":385,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":386,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Carosis":386}},{"path":"src/main/java/duke/utility/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Handles the storage to and from a file.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" * @author [Your Name]","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":"package duke.utility;","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"import duke.tasks.*;","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"import java.io.*;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"import java.util.*;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":" * Handles the storage and retrieval of tasks to and from a file.","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"public class Storage {","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"    protected String FilePath \u003d \"src/main/java/duke.txt\";// Default file path for storing tasks","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"    protected ArrayList\u003cTasks\u003e TasksBuffer \u003d new ArrayList\u003c\u003e();// Buffer to hold tasks read from the file","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"    protected ArrayList\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(); // Buffer to hold file content","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"    UI newUI \u003d new UI();// Instance of UI for displaying messages","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"     * Default constructor for Storage.","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"    public Storage() {","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"     * Constructor for Storage with a specified file path.","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"     * @param FilePath The file path for storing tasks.","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"    public Storage(String FilePath) {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"        this.FilePath \u003d FilePath;","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"     * Loads tasks from the file and returns them as an ArrayList.","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"     * @return ArrayList of Tasks loaded from the file.","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If there\u0027s an error while loading tasks.","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"    public ArrayList\u003cTasks\u003e load() throws DukeException {","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"        File file \u003d new File(FilePath);","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"        this.TasksBuffer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"            Scanner scan \u003d new Scanner(file);","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"            while (scan.hasNext()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"                fileContent.add(scan.nextLine());","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"            newUI.show(\"fileError\");","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"        TasksBuffer \u003d convertFileToTasks();","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"        return TasksBuffer;","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"Carosis"},"content":"     * Extracts text between two specified strings.","lastModifiedDate":"2024-04-07"},{"lineNumber":60,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":61,"author":{"gitId":"Carosis"},"content":"     * @param text  The text to extract from.","lastModifiedDate":"2024-04-07"},{"lineNumber":62,"author":{"gitId":"Carosis"},"content":"     * @param start The starting string.","lastModifiedDate":"2024-04-07"},{"lineNumber":63,"author":{"gitId":"Carosis"},"content":"     * @param end   The ending string.","lastModifiedDate":"2024-04-07"},{"lineNumber":64,"author":{"gitId":"Carosis"},"content":"     * @return The extracted text between start and end strings.","lastModifiedDate":"2024-04-07"},{"lineNumber":65,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":66,"author":{"gitId":"Carosis"},"content":"    private String extractBetween(String text, String start, String end) {","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"Carosis"},"content":"        if (text.contains(start) \u0026\u0026 text.contains(end)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"Carosis"},"content":"            int startIndex \u003d text.indexOf(start) + start.length();","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"Carosis"},"content":"            int endIndex \u003d text.indexOf(end, startIndex);","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"Carosis"},"content":"            return text.substring(startIndex, endIndex).trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"Carosis"},"content":"        return \"\";","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":75,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":76,"author":{"gitId":"Carosis"},"content":"     * Extracts text from a specified starting string to the end of the text.","lastModifiedDate":"2024-04-07"},{"lineNumber":77,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":78,"author":{"gitId":"Carosis"},"content":"     * @param text  The text to extract from.","lastModifiedDate":"2024-04-07"},{"lineNumber":79,"author":{"gitId":"Carosis"},"content":"     * @param start The starting string.","lastModifiedDate":"2024-04-07"},{"lineNumber":80,"author":{"gitId":"Carosis"},"content":"     * @param end   The ending string.","lastModifiedDate":"2024-04-07"},{"lineNumber":81,"author":{"gitId":"Carosis"},"content":"     * @return The extracted text from start to the end of the text.","lastModifiedDate":"2024-04-07"},{"lineNumber":82,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":83,"author":{"gitId":"Carosis"},"content":"    private String extractEnding(String text, String start, String end) {","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"Carosis"},"content":"        if (text.contains(start) \u0026\u0026 text.contains(end)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"Carosis"},"content":"            int startIndex \u003d text.indexOf(start) + start.length();","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"Carosis"},"content":"            int endIndex \u003d text.lastIndexOf(end);","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"Carosis"},"content":"            return text.substring(startIndex, endIndex).trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"Carosis"},"content":"        return \"\";","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":92,"author":{"gitId":"Carosis"},"content":"     * Converts file content to Task objects.","lastModifiedDate":"2024-04-07"},{"lineNumber":93,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":94,"author":{"gitId":"Carosis"},"content":"     * @return ArrayList of Task objects converted from file content.","lastModifiedDate":"2024-04-07"},{"lineNumber":95,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":96,"author":{"gitId":"Carosis"},"content":"    public ArrayList\u003cTasks\u003e convertFileToTasks() {","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"Carosis"},"content":"        ArrayList\u003cTasks\u003e Result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"Carosis"},"content":"        for (String s : fileContent) {","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"Carosis"},"content":"            String description \u003d s.substring(6).split(\"\\\\(\", 2)[0].trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"Carosis"},"content":"            boolean isDone \u003d s.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"Carosis"},"content":"            String by \u003d extractBetween(s, \"by: \", \")\");","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"Carosis"},"content":"            String from \u003d extractBetween(s, \"From: \", \") (To: \");","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"Carosis"},"content":"            String to \u003d extractEnding(s, \"(To: \", \")\");","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"Carosis"},"content":"            switch (s.substring(1, 2)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"Carosis"},"content":"                case \"T\":","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"Carosis"},"content":"                    Result.add(new TodoTask(description, isDone));","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"Carosis"},"content":"                    break;","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"Carosis"},"content":"                case \"D\":","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"Carosis"},"content":"                    Result.add(new DeadlineTask(description, isDone, by));","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"Carosis"},"content":"                    break;","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"Carosis"},"content":"                case \"E\":","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"Carosis"},"content":"                    Result.add(new EventTask(description, isDone, from, to));","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"Carosis"},"content":"                    break;","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"Carosis"},"content":"                case \"B\":","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"Carosis"},"content":"                    Result.add(new DoWithInTimeTask(description, isDone, from, to));","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"Carosis"},"content":"                    break;","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"Carosis"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"Carosis"},"content":"        return Result;","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":124,"author":{"gitId":"Carosis"},"content":"     * Saves tasks to the file.","lastModifiedDate":"2024-04-07"},{"lineNumber":125,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":126,"author":{"gitId":"Carosis"},"content":"     * @param tasks ArrayList of tasks to be saved to the file.","lastModifiedDate":"2024-04-07"},{"lineNumber":127,"author":{"gitId":"Carosis"},"content":"     * @throws IOException If there\u0027s an error while saving tasks to the file.","lastModifiedDate":"2024-04-07"},{"lineNumber":128,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":129,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":130,"author":{"gitId":"Carosis"},"content":"    public void save(ArrayList\u003cTasks\u003e tasks) throws IOException {","lastModifiedDate":"2024-03-24"},{"lineNumber":131,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"Carosis"},"content":"            File file \u003d new File(FilePath);","lastModifiedDate":"2024-03-24"},{"lineNumber":133,"author":{"gitId":"Carosis"},"content":"            FileWriter FW \u003d new FileWriter(file);","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":135,"author":{"gitId":"Carosis"},"content":"            for (Tasks t : tasks) {","lastModifiedDate":"2024-04-07"},{"lineNumber":136,"author":{"gitId":"Carosis"},"content":"                FW.write(t.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"Carosis"},"content":"                FW.write(\"\\n\");","lastModifiedDate":"2024-03-24"},{"lineNumber":138,"author":{"gitId":"Carosis"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"Carosis"},"content":"            FW.close();","lastModifiedDate":"2024-03-24"},{"lineNumber":140,"author":{"gitId":"Carosis"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"Carosis"},"content":"            throw new IOException(\"Unable to create the magic book at \" + FilePath + \" ! Meow!\");","lastModifiedDate":"2024-03-24"},{"lineNumber":142,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Carosis":144}},{"path":"src/main/java/duke/utility/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents a list of tasks.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" * Inherits from the Tasks class and manages operations related to tasks.","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" * @author Zijing","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"package duke.utility;","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"import java.io.File;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":" * Represents a list of tasks and provides methods for managing tasks.","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":" * */","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"public class TaskList extends Tasks {","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"    protected String FilePath \u003d new Storage().FilePath;","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"    public ArrayList\u003cTasks\u003e storedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"     * Constructs a TaskList object with the specified list of loaded tasks.","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"     * @param loadedTasks The list of loaded tasks.","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"     * @throws DukeException If there is an issue with the loaded tasks.","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"    public TaskList(ArrayList\u003cTasks\u003e loadedTasks) throws DukeException {","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"        File f \u003d new File(FilePath);","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"        this.storedTaskList \u003d loadedTasks;","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"     * Constructs an empty TaskList object.","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"    public TaskList() {","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"     * Adds a task to the list of tasks.","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"     * @param taskToAdd The task to add.","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"    public void addTask(Tasks taskToAdd) {","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"        storedTaskList.add(taskToAdd);","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"     * Gets a task from the list of tasks based on its index.","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"     * @param index The index of the task to retrieve.","lastModifiedDate":"2024-04-07"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2024-04-07"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"    public Tasks getTask(int index) {","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"        return storedTaskList.get(index - 1);","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"     * Deletes a task from the list of tasks based on its index.","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":57,"author":{"gitId":"Carosis"},"content":"     * @param index The index of the task to delete.","lastModifiedDate":"2024-04-07"},{"lineNumber":58,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"Carosis"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"Carosis"},"content":"        storedTaskList.remove(index - 1);","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":63,"author":{"gitId":"Carosis"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2024-04-07"},{"lineNumber":64,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":65,"author":{"gitId":"Carosis"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2024-04-07"},{"lineNumber":66,"author":{"gitId":"Carosis"},"content":"     * @return The number of tasks in the list.","lastModifiedDate":"2024-04-07"},{"lineNumber":67,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":68,"author":{"gitId":"Carosis"},"content":"    public int getTaskAmount(ArrayList\u003cTasks\u003e taskList) {","lastModifiedDate":"2024-04-07"},{"lineNumber":69,"author":{"gitId":"Carosis"},"content":"        return taskList.size();","lastModifiedDate":"2024-04-07"},{"lineNumber":70,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":71,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"Carosis"},"content":"     * Gets all tasks from the list.","lastModifiedDate":"2024-04-07"},{"lineNumber":73,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":74,"author":{"gitId":"Carosis"},"content":"     * @return The list of all tasks.","lastModifiedDate":"2024-04-07"},{"lineNumber":75,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":76,"author":{"gitId":"Carosis"},"content":"    public ArrayList\u003cTasks\u003e getAllTasks() {","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"Carosis"},"content":"        return storedTaskList;","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":81,"author":{"gitId":"Carosis"},"content":"     * Prints the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":82,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":83,"author":{"gitId":"Carosis"},"content":"     * @param input The list of tasks to print.","lastModifiedDate":"2024-04-07"},{"lineNumber":84,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":85,"author":{"gitId":"Carosis"},"content":"    public void printTaskList(ArrayList\u003cTasks\u003e input) {","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"Carosis"},"content":"        int i \u003d 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"Carosis"},"content":"        for (Tasks t : input) {","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"Carosis"},"content":"            System.out.println(i + t.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"Carosis"},"content":"            i++;","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":93,"author":{"gitId":"Carosis"},"content":"     * Prints a specific task.","lastModifiedDate":"2024-04-07"},{"lineNumber":94,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":95,"author":{"gitId":"Carosis"},"content":"     * @param taskToPrint The task to print.","lastModifiedDate":"2024-04-07"},{"lineNumber":96,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":97,"author":{"gitId":"Carosis"},"content":"    public void printTask(Tasks taskToPrint) {","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"Carosis"},"content":"        System.out.println(taskToPrint.toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Carosis":100}},{"path":"src/main/java/duke/utility/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"/**","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":" * Represents the user interface for interacting with the Duke program.","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":" * Manages input/output messages and commands.","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":" *","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":" * @author Zijing","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":" * @version 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":" * @since 1.0","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":" */","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"package duke.utility;","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"public class UI {","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"    private static final String LineOfLine \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"    private static final String HelloMsg \u003d \"Myeollo! I\u0027m KunKun ! What can I do for you, meow?\\n\";","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"    private static final String ByeBye \u003d \"Myeow. Hope to see you again meow!\\n\";","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"    private static final String Marked \u003d \"Meowked! Magic successfully cast:\";","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"    private static final String Unmarked \u003d \"Unmeowked! Magic not yet cast:\";","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"    private static final String ListPrint \u003d \"Meow! Here are the magics pending in your list:\";","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"    private static final String TaskAdded \u003d \"Meowks~ I\u0027ve added this magics:\";","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"    private static final String TaskDeleted \u003d \"Meowted. I\u0027ve removed this magics:\";","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"    private static final String FileError \u003d \"YumiKunKun failed to find the magic file meow!\";","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"    private static final String updateMsg \u003d \"YumiKunKun updated the magic file meow!\";","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"    private static final String searchMsg \u003d \"YumiKunKun found the magic file meow!\";","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"    private static final String Logo \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"            \" ____        _        \\n\"","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"                    + \"|  _ \\\\ _   _| | _____    /\\\\\\\\_/\\\\\\\\\\n\"","lastModifiedDate":"2024-04-08"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"                    + \"| | | | | | | |/ / _ \\\\   ( o.o )\\n\"","lastModifiedDate":"2024-04-08"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"                    + \"| |_| | |_| |   \u003c  __/    \u003e ^ \u003c\\n\"","lastModifiedDate":"2024-04-08"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|  KunKunMeow~\\n\";","lastModifiedDate":"2024-04-08"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"    private final HashMap\u003cString, String\u003e messagesMap;","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"     * Constructs a UI object and initializes the messages map.","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"    public UI() {","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"        messagesMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"        messagesMap.put(\"welcome\", LineOfLine + HelloMsg + LineOfLine);","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"        messagesMap.put(\"goodbye\", ByeBye);","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"        messagesMap.put(\"marked\", Marked);","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"        messagesMap.put(\"unmarked\", Unmarked);","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"        messagesMap.put(\"list\", ListPrint);","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"        messagesMap.put(\"added\", TaskAdded);","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"        messagesMap.put(\"deleted\", TaskDeleted);","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"        messagesMap.put(\"fileError\", FileError);","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"        messagesMap.put(\"line\", LineOfLine);","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"        messagesMap.put(\"logo\", \"Hello from\\n\" + Logo);","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"        messagesMap.put(\"update\", updateMsg);","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"        messagesMap.put(\"search\", searchMsg);","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"     * Displays a message based on the provided key.","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":57,"author":{"gitId":"Carosis"},"content":"     * @param key The key corresponding to the message to display.","lastModifiedDate":"2024-04-07"},{"lineNumber":58,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"Carosis"},"content":"    public void show(String key) {","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"Carosis"},"content":"        System.out.println(messagesMap.get(key));","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":63,"author":{"gitId":"Carosis"},"content":"     * Prints a message for a task.","lastModifiedDate":"2024-04-07"},{"lineNumber":64,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":65,"author":{"gitId":"Carosis"},"content":"     * @param toString The message to print.","lastModifiedDate":"2024-04-07"},{"lineNumber":66,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":67,"author":{"gitId":"Carosis"},"content":"    public void printTaskMsg(String toString) {","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"Carosis"},"content":"        System.out.println(\"  \" + toString);","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":71,"author":{"gitId":"Carosis"},"content":"     * Prints the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":73,"author":{"gitId":"Carosis"},"content":"     * @param tskList The task list to print.","lastModifiedDate":"2024-04-07"},{"lineNumber":74,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":75,"author":{"gitId":"Carosis"},"content":"    public void printTaskList(TaskList tskList) {","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"Carosis"},"content":"        tskList.printTaskList(tskList.storedTaskList);","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":79,"author":{"gitId":"Carosis"},"content":"     * Displays an error message.","lastModifiedDate":"2024-04-07"},{"lineNumber":80,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":81,"author":{"gitId":"Carosis"},"content":"     * @param error The error message to display.","lastModifiedDate":"2024-04-07"},{"lineNumber":82,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":83,"author":{"gitId":"Carosis"},"content":"    public void showError(String error) {","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"Carosis"},"content":"        System.out.println(error);","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":87,"author":{"gitId":"Carosis"},"content":"     * Reads a command from the user.","lastModifiedDate":"2024-04-07"},{"lineNumber":88,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":89,"author":{"gitId":"Carosis"},"content":"     * @return The user\u0027s command input.","lastModifiedDate":"2024-04-07"},{"lineNumber":90,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":91,"author":{"gitId":"Carosis"},"content":"    public String readCommand() {","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"Carosis"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"Carosis"},"content":"        if (scan.hasNextLine()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"Carosis"},"content":"            return scan.nextLine().trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"Carosis"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"Carosis"},"content":"            return \"goodbye\";","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":100,"author":{"gitId":"Carosis"},"content":"     * Prints the number of tasks in the task list.","lastModifiedDate":"2024-04-07"},{"lineNumber":101,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":102,"author":{"gitId":"Carosis"},"content":"     * @param tskList The task list containing the tasks.","lastModifiedDate":"2024-04-07"},{"lineNumber":103,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":104,"author":{"gitId":"Carosis"},"content":"    public void printNumberOfTask(TaskList tskList) {","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"Carosis"},"content":"        System.out.println(\"Now you have \" + tskList.storedTaskList.size() + \" tasks in the Magic Book! Meow!\");","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"Carosis"},"content":"    /**","lastModifiedDate":"2024-04-07"},{"lineNumber":108,"author":{"gitId":"Carosis"},"content":"     * Prints an individual task.","lastModifiedDate":"2024-04-07"},{"lineNumber":109,"author":{"gitId":"Carosis"},"content":"     *","lastModifiedDate":"2024-04-07"},{"lineNumber":110,"author":{"gitId":"Carosis"},"content":"     * @param tsk The task to print.","lastModifiedDate":"2024-04-07"},{"lineNumber":111,"author":{"gitId":"Carosis"},"content":"     */","lastModifiedDate":"2024-04-07"},{"lineNumber":112,"author":{"gitId":"Carosis"},"content":"    public void printIndividualTask(Tasks tsk) {","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"Carosis"},"content":"        System.out.println(tsk.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Carosis":115}},{"path":"src/main/java/testStorage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"[T][ ] Task 1","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"[D][ ] Task 2 (by: 2024-04-10 12:00)","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"[E][ ] Task 3 (From: 2024-04-11 14:00) (To: 2024-04-11 16:00)","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":"[B][ ] Task 4 (From: 2024-04-12 10:00) (To: 2024-04-12 12:00)","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"Carosis":4}},{"path":"src/test/java/duke/command/AddTaskFunctionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"package duke.command;","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"public class AddTaskFunctionTest {","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"    static Tasks tsk;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"    @BeforeAll","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"    public static void setUp() {","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"        tsk \u003d new Tasks(\"TaskTest\");","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"    public void testCreation() {","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"        assertEquals(\"TaskTest\", tsk.getDescription(), \"Description not matched\");","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"        assertFalse(tsk.isDone(), \"New tasks should be undone upon creation\");","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"        assertEquals(\" \", tsk.getTaskType(), \"New tasks should be empty string at first \");","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"    public void testToString() {","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"        Tasks tsk \u003d new Tasks(\"TaskTest\");","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"        String test \u003d tsk.toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"        assertEquals(\"[ ] TaskTest\", test, \"toString methods is not matching\");","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"    public void testGetStatus() throws DukeException {","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"        Tasks tsk \u003d new Tasks(\"TaskTest\");","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"        tsk.setIsDone(true);","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"        String test \u003d tsk.getStatusIcon();","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"        assertEquals(\"X\", test, \"getStatus methods is not matching\");","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Carosis":41}},{"path":"src/test/java/duke/command/DeleteTaskFunctionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"package duke.command;","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":"import duke.utility.UI;","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"public class DeleteTaskFunctionTest {","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"    private UI ui;","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"    private Storage storage;","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"        taskList.addTask(new Tasks(\"Task 1\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"        ui \u003d new UI();","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"        storage \u003d new Storage(\"test.txt\");","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"    public void testExecute() throws IOException {","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"        int tasksBeforeDeletion \u003d taskList.getTaskAmount(taskList.getAllTasks());","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"        DeleteTaskFunction deleteTaskFunction \u003d new DeleteTaskFunction(1);","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"        deleteTaskFunction.execute(taskList, ui, storage);","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"        int tasksAfterDeletion \u003d taskList.getTaskAmount(taskList.getAllTasks());","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"        assertEquals(tasksBeforeDeletion - 1, tasksAfterDeletion);","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"Carosis":39}},{"path":"src/test/java/duke/command/ListTaskFunctionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"package duke.command;","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":"import duke.utility.UI;","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"public class ListTaskFunctionTest {","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"    private UI ui;","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"    private Storage storage;","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"        taskList.addTask(new Tasks(\"Task 1\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"        taskList.addTask(new Tasks(\"Task 2\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"        ui \u003d new UI();","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"        storage \u003d new Storage(\"test.txt\");","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"    public void testExecute() throws IOException {","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"        ListTaskFunction listTaskFunction \u003d new ListTaskFunction();","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"        listTaskFunction.execute(taskList, ui, storage);","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"        String expectedOutput \u003d \"Meow! Here are the magics pending in your list:\" + System.lineSeparator()","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"                + \"1\" + taskList.getTask(1).toString() + System.lineSeparator()","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"                + \"2\" + taskList.getTask(2).toString() + System.lineSeparator()","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"                + \"Now you have 2 tasks in the Magic Book! Meow!\" + System.lineSeparator();","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"        assertEquals(expectedOutput, outputStream.toString());","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"Carosis":47}},{"path":"src/test/java/duke/command/MarkTaskFunctionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"package duke.command;","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":"import duke.utility.UI;","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"public class MarkTaskFunctionTest {","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"    private UI ui;","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"    private Storage storage;","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"    private ByteArrayOutputStream outContent;","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"        taskList.addTask(new Tasks(\"Task 1\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"        taskList.addTask(new Tasks(\"Task 2\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"        taskList.addTask(new Tasks(\"Task 3\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"        ui \u003d new UI();","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"        storage \u003d new Storage(\"test.txt\");","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"        outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"    public void testMarkTask() throws IOException, DukeException {","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"        MarkTaskFunction markTaskFunction \u003d new MarkTaskFunction(new String[]{\"mark\", \"2\"});","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"        markTaskFunction.execute(taskList, ui, storage);","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"        assertTrue(taskList.getTask(2).isDone());","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"    public void testUnmarkTask() throws IOException, DukeException {","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"        taskList.getTask(2).setIsDone(true);","lastModifiedDate":"2024-04-07"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"        MarkTaskFunction markTaskFunction \u003d new MarkTaskFunction(new String[]{\"unmark\", \"2\"});","lastModifiedDate":"2024-04-07"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"        markTaskFunction.execute(taskList, ui, storage);","lastModifiedDate":"2024-04-07"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"        assertFalse(taskList.getTask(2).isDone());","lastModifiedDate":"2024-04-07"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"    private void assertFalse(boolean done) {","lastModifiedDate":"2024-04-07"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"Carosis":56}},{"path":"src/test/java/duke/command/UpdateTaskFunctionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"package duke.command;","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"import duke.tasks.DeadlineTask;","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":"import duke.tasks.DoWithInTimeTask;","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":"import duke.utility.Storage;","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":"import duke.utility.UI;","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"public class UpdateTaskFunctionTest {","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"    private TaskList taskList;","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"    private UI ui;","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"    private Storage storage;","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"        taskList.addTask(new Tasks(\"Task 1\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"        taskList.addTask(new EventTask(\"Task 2\", false, \"07-04-2024 16:00\", \"08-04-2024 16:00\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"        taskList.addTask(new DeadlineTask(\"Task 3\", false, \"07-04-2024 16:00\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"        taskList.addTask(new DoWithInTimeTask(\"Task 4\", false, \"07-04-2024 16:00\", \"08-04-2024 16:00\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"        ui \u003d new UI();","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"        storage \u003d new Storage(\"test.txt\");","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"    @AfterEach","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"    public void restoreStreams() {","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"    public void testUpdateDescription() {","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"        String[] userInput \u003d {\"1\", \"description\", \"Updated Description\"};","lastModifiedDate":"2024-04-07"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"        UpdateTaskFunction updateTaskFunction \u003d new UpdateTaskFunction(userInput);","lastModifiedDate":"2024-04-07"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"        updateTaskFunction.execute(taskList, ui, storage);","lastModifiedDate":"2024-04-07"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"        assertEquals( \"Updated Description\",taskList.getTask(1).getDescription());","lastModifiedDate":"2024-04-07"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"    public void testUpdateFrom() {","lastModifiedDate":"2024-04-07"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"        String[] userInput \u003d {\"2\", \"from\", \"10-10-2024 00:00\"};","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"        UpdateTaskFunction updateTaskFunction \u003d new UpdateTaskFunction(userInput);","lastModifiedDate":"2024-04-07"},{"lineNumber":57,"author":{"gitId":"Carosis"},"content":"        updateTaskFunction.execute(taskList, ui, storage);","lastModifiedDate":"2024-04-07"},{"lineNumber":58,"author":{"gitId":"Carosis"},"content":"        String updatedFrom \u003d ((EventTask) taskList.getTask(2)).getFrom();","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"Carosis"},"content":"        assertEquals(\"10-10-2024 00:00\", updatedFrom);","lastModifiedDate":"2024-04-07"},{"lineNumber":60,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":61,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":62,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":63,"author":{"gitId":"Carosis"},"content":"    public void testUpdateTo() {","lastModifiedDate":"2024-04-07"},{"lineNumber":64,"author":{"gitId":"Carosis"},"content":"        String[] userInput \u003d {\"2\", \"to\", \"10-10-2024 00:00\"};","lastModifiedDate":"2024-04-07"},{"lineNumber":65,"author":{"gitId":"Carosis"},"content":"        UpdateTaskFunction updateTaskFunction \u003d new UpdateTaskFunction(userInput);","lastModifiedDate":"2024-04-07"},{"lineNumber":66,"author":{"gitId":"Carosis"},"content":"        updateTaskFunction.execute(taskList, ui, storage);","lastModifiedDate":"2024-04-07"},{"lineNumber":67,"author":{"gitId":"Carosis"},"content":"        String updatedTo \u003d ((EventTask) taskList.getTask(2)).getTo();","lastModifiedDate":"2024-04-07"},{"lineNumber":68,"author":{"gitId":"Carosis"},"content":"        assertEquals(\"10-10-2024 00:00\", updatedTo);","lastModifiedDate":"2024-04-07"},{"lineNumber":69,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":70,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":71,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"Carosis"},"content":"    public void testUpdateFromTo() {","lastModifiedDate":"2024-04-07"},{"lineNumber":73,"author":{"gitId":"Carosis"},"content":"        String[] userInput \u003d {\"2\", \"from\", \"10-10-2024 00:00\", \"10-11-2024 00:00\"};","lastModifiedDate":"2024-04-07"},{"lineNumber":74,"author":{"gitId":"Carosis"},"content":"        UpdateTaskFunction updateTaskFunction \u003d new UpdateTaskFunction(userInput);","lastModifiedDate":"2024-04-07"},{"lineNumber":75,"author":{"gitId":"Carosis"},"content":"        updateTaskFunction.execute(taskList, ui, storage);","lastModifiedDate":"2024-04-07"},{"lineNumber":76,"author":{"gitId":"Carosis"},"content":"        String updatedFrom \u003d ((EventTask) taskList.getTask(2)).getFrom();","lastModifiedDate":"2024-04-07"},{"lineNumber":77,"author":{"gitId":"Carosis"},"content":"        assertEquals(\"10-10-2024 00:00\", updatedFrom);","lastModifiedDate":"2024-04-07"},{"lineNumber":78,"author":{"gitId":"Carosis"},"content":"        String updatedTo \u003d ((EventTask) taskList.getTask(2)).getTo();","lastModifiedDate":"2024-04-07"},{"lineNumber":79,"author":{"gitId":"Carosis"},"content":"        assertEquals(\"10-11-2024 00:00\", updatedTo);","lastModifiedDate":"2024-04-07"},{"lineNumber":80,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":81,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":82,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":83,"author":{"gitId":"Carosis"},"content":"    public void testUpdateBy() {","lastModifiedDate":"2024-04-07"},{"lineNumber":84,"author":{"gitId":"Carosis"},"content":"        String[] userInput \u003d {\"3\", \"by\", \"10-10-2024 00:00\"};","lastModifiedDate":"2024-04-07"},{"lineNumber":85,"author":{"gitId":"Carosis"},"content":"        UpdateTaskFunction updateTaskFunction \u003d new UpdateTaskFunction(userInput);","lastModifiedDate":"2024-04-07"},{"lineNumber":86,"author":{"gitId":"Carosis"},"content":"        updateTaskFunction.execute(taskList, ui, storage);","lastModifiedDate":"2024-04-07"},{"lineNumber":87,"author":{"gitId":"Carosis"},"content":"        String updatedBy \u003d ((DeadlineTask) taskList.getTask(3)).getBy();","lastModifiedDate":"2024-04-07"},{"lineNumber":88,"author":{"gitId":"Carosis"},"content":"        assertEquals(updatedBy, \"10-10-2024 00:00\");","lastModifiedDate":"2024-04-07"},{"lineNumber":89,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":90,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":91,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":92,"author":{"gitId":"Carosis"},"content":"    public void testUpdateBetween() {","lastModifiedDate":"2024-04-07"},{"lineNumber":93,"author":{"gitId":"Carosis"},"content":"        String[] userInput \u003d {\"4\", \"between\", \"10-10-2024 00:00\", \"10-11-2024 00:00\"};","lastModifiedDate":"2024-04-07"},{"lineNumber":94,"author":{"gitId":"Carosis"},"content":"        UpdateTaskFunction updateTaskFunction \u003d new UpdateTaskFunction(userInput);","lastModifiedDate":"2024-04-07"},{"lineNumber":95,"author":{"gitId":"Carosis"},"content":"        updateTaskFunction.execute(taskList, ui, storage);","lastModifiedDate":"2024-04-07"},{"lineNumber":96,"author":{"gitId":"Carosis"},"content":"        String updatedFrom \u003d ((DoWithInTimeTask) taskList.getTask(4)).getFrom();","lastModifiedDate":"2024-04-07"},{"lineNumber":97,"author":{"gitId":"Carosis"},"content":"        String updatedTo \u003d ((DoWithInTimeTask) taskList.getTask(4)).getTo();","lastModifiedDate":"2024-04-07"},{"lineNumber":98,"author":{"gitId":"Carosis"},"content":"        assertEquals(\"10-10-2024 00:00\", updatedFrom);","lastModifiedDate":"2024-04-07"},{"lineNumber":99,"author":{"gitId":"Carosis"},"content":"        assertEquals(\"10-11-2024 00:00\", updatedTo);","lastModifiedDate":"2024-04-07"},{"lineNumber":100,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":101,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"Carosis":101}},{"path":"src/test/java/duke/tasks/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"package duke.tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"    public void testGetBy() {","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"        String description \u003d \"Finish assignment\";","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"        String by \u003d \"2024-04-30\";","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask(description, isDone, by);","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"        assertEquals(by, deadlineTask.getBy());","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"    public void testSetBy() {","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"        String description \u003d \"Buy groceries\";","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"        String by \u003d \"2024-05-10\";","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask(description, isDone, \"2024-04-30\");","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"        deadlineTask.setBy(by);","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"        assertEquals(by, deadlineTask.getBy());","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"    public void testToString() {","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"        String description \u003d \"Submit report\";","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"        boolean isDone \u003d true;","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"        String by \u003d \"2024-04-15\";","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask(description, isDone, by);","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"        String expectedString \u003d \"[\"+deadlineTask.getTaskType() +\"]\"+\"[\"+deadlineTask.getStatusIcon()+\"] \"","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"        +deadlineTask.getDescription() +  \" (by: \"+deadlineTask.getBy() +\")\";","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"        assertEquals(expectedString, deadlineTask.toString());","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"Carosis":46}},{"path":"src/test/java/duke/tasks/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"package duke.tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":"public class EventTaskTest {","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"    public void testToString() {","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"        String description \u003d \"Birthday party\";","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"        String taskFrom \u003d \"10-10-2024 10:00\";","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"        String taskTo \u003d \"10-10-2024 12:00\";","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"        EventTask eventTask \u003d new EventTask(description, isDone, taskFrom, taskTo);","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"        String expectedString \u003d \"[\"+eventTask.getTaskType() +\"]\"","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"                +\"[\"+eventTask.getStatusIcon()+\"] \"","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"                + eventTask.getDescription()","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"                +  \" (From: \"+eventTask.getFrom() +\")\"","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"                +  \" (To: \"+eventTask.getTo() +\")\";","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"        assertEquals(expectedString, eventTask.toString());","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"    public void testIsDone() {","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"        String description \u003d \"Conference\";","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"        boolean isDone \u003d true;","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"        String taskFrom \u003d \"15-05-2024 09:00\";","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"        String taskTo \u003d \"15-05-2024 17:00\";","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"        EventTask eventTask \u003d new EventTask(description, isDone, taskFrom, taskTo);","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"        assertEquals(isDone, eventTask.isDone());","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"    public void testSetIsDone() throws DukeException {","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"        String description \u003d \"Meeting\";","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"        String taskFrom \u003d \"20-07-2024 14:00\";","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"        String taskTo \u003d \"20-07-2024 15:00\";","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"        EventTask eventTask \u003d new EventTask(description, isDone, taskFrom, taskTo);","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"        eventTask.setIsDone(true);","lastModifiedDate":"2024-04-07"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"        assertEquals(true, eventTask.isDone());","lastModifiedDate":"2024-04-07"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"    public void testGetFrom() {","lastModifiedDate":"2024-04-07"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"        String description \u003d \"Holiday\";","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2024-04-07"},{"lineNumber":57,"author":{"gitId":"Carosis"},"content":"        String taskFrom \u003d \"01-12-2024 00:00\";","lastModifiedDate":"2024-04-07"},{"lineNumber":58,"author":{"gitId":"Carosis"},"content":"        String taskTo \u003d \"07-12-2024 23:59\";","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":60,"author":{"gitId":"Carosis"},"content":"        EventTask eventTask \u003d new EventTask(description, isDone, taskFrom, taskTo);","lastModifiedDate":"2024-04-07"},{"lineNumber":61,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":62,"author":{"gitId":"Carosis"},"content":"        assertEquals(taskFrom, eventTask.getFrom());","lastModifiedDate":"2024-04-07"},{"lineNumber":63,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":64,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":65,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":66,"author":{"gitId":"Carosis"},"content":"    public void testGetTo() {","lastModifiedDate":"2024-04-07"},{"lineNumber":67,"author":{"gitId":"Carosis"},"content":"        String description \u003d \"Vacation\";","lastModifiedDate":"2024-04-07"},{"lineNumber":68,"author":{"gitId":"Carosis"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2024-04-07"},{"lineNumber":69,"author":{"gitId":"Carosis"},"content":"        String taskFrom \u003d \"01-08-2024 08:00\";","lastModifiedDate":"2024-04-07"},{"lineNumber":70,"author":{"gitId":"Carosis"},"content":"        String taskTo \u003d \"15-08-2024 18:00\";","lastModifiedDate":"2024-04-07"},{"lineNumber":71,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"Carosis"},"content":"        EventTask eventTask \u003d new EventTask(description, isDone, taskFrom, taskTo);","lastModifiedDate":"2024-04-07"},{"lineNumber":73,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":74,"author":{"gitId":"Carosis"},"content":"        assertEquals(taskTo, eventTask.getTo());","lastModifiedDate":"2024-04-07"},{"lineNumber":75,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":76,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":77,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":78,"author":{"gitId":"Carosis"},"content":"    public void testSetFrom() {","lastModifiedDate":"2024-04-07"},{"lineNumber":79,"author":{"gitId":"Carosis"},"content":"        String description \u003d \"Meeting\";","lastModifiedDate":"2024-04-07"},{"lineNumber":80,"author":{"gitId":"Carosis"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2024-04-07"},{"lineNumber":81,"author":{"gitId":"Carosis"},"content":"        String taskFrom \u003d \"30-06-2024 14:00\";","lastModifiedDate":"2024-04-07"},{"lineNumber":82,"author":{"gitId":"Carosis"},"content":"        String taskTo \u003d \"30-06-2024 15:00\";","lastModifiedDate":"2024-04-07"},{"lineNumber":83,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":84,"author":{"gitId":"Carosis"},"content":"        EventTask eventTask \u003d new EventTask(description, isDone, taskFrom, taskTo);","lastModifiedDate":"2024-04-07"},{"lineNumber":85,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":86,"author":{"gitId":"Carosis"},"content":"        String newFrom \u003d \"30-06-2024 16:00\";","lastModifiedDate":"2024-04-07"},{"lineNumber":87,"author":{"gitId":"Carosis"},"content":"        eventTask.setFrom(newFrom);","lastModifiedDate":"2024-04-07"},{"lineNumber":88,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":89,"author":{"gitId":"Carosis"},"content":"        assertEquals(newFrom, eventTask.getFrom());","lastModifiedDate":"2024-04-07"},{"lineNumber":90,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":91,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":92,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":93,"author":{"gitId":"Carosis"},"content":"    public void testSetTo() {","lastModifiedDate":"2024-04-07"},{"lineNumber":94,"author":{"gitId":"Carosis"},"content":"        String description \u003d \"Project deadline\";","lastModifiedDate":"2024-04-07"},{"lineNumber":95,"author":{"gitId":"Carosis"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2024-04-07"},{"lineNumber":96,"author":{"gitId":"Carosis"},"content":"        String taskFrom \u003d \"25-09-2024 09:00\";","lastModifiedDate":"2024-04-07"},{"lineNumber":97,"author":{"gitId":"Carosis"},"content":"        String taskTo \u003d \"25-09-2024 17:00\";","lastModifiedDate":"2024-04-07"},{"lineNumber":98,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":99,"author":{"gitId":"Carosis"},"content":"        EventTask eventTask \u003d new EventTask(description, isDone, taskFrom, taskTo);","lastModifiedDate":"2024-04-07"},{"lineNumber":100,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":101,"author":{"gitId":"Carosis"},"content":"        String newTo \u003d \"25-09-2024 18:00\";","lastModifiedDate":"2024-04-07"},{"lineNumber":102,"author":{"gitId":"Carosis"},"content":"        eventTask.setTo(newTo);","lastModifiedDate":"2024-04-07"},{"lineNumber":103,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":104,"author":{"gitId":"Carosis"},"content":"        assertEquals(newTo, eventTask.getTo());","lastModifiedDate":"2024-04-07"},{"lineNumber":105,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":106,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"Carosis":106}},{"path":"src/test/java/duke/tasks/TodoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"package duke.tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":"public class TodoTaskTest {","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"    public void testToString() {","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"        String description \u003d \"Buy milk\";","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"        TodoTask todoTask \u003d new TodoTask(description, isDone);","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"        String expectedString \u003d \"[\"+todoTask.getTaskType() +\"]\"+\"[\"+todoTask.getStatusIcon()+\"] \"","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"                +todoTask.getDescription();","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"        assertEquals(expectedString, todoTask.toString());","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"    public void testIsDone() {","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"        String description \u003d \"Read book\";","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"        boolean isDone \u003d true;","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"        TodoTask todoTask \u003d new TodoTask(description, isDone);","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"        assertEquals(isDone, todoTask.isDone());","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"    public void testSetIsDone() throws DukeException {","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"        String description \u003d \"Clean room\";","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"        TodoTask todoTask \u003d new TodoTask(description, isDone);","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"        todoTask.setIsDone(true);","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"        assertEquals(true, todoTask.isDone());","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"Carosis":44}},{"path":"src/test/java/duke/utility/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"package duke.utility;","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":"public class DukeExceptionTest {","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"    public void testExceptionMessage() {","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"        String errorMessage \u003d \"This is an error message.\";","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"        DukeException dukeException \u003d new DukeException(errorMessage);","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"        assertEquals(errorMessage, dukeException.getMessage());","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"Carosis":15}},{"path":"src/test/java/duke/utility/InputParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"package duke.utility;","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"import duke.command.Command;","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"public class InputParserTest {","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"    public void testParseValidInput() {","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"        InputParser inputParser \u003d new InputParser();","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"            Command command \u003d inputParser.parse(\"todo Test the parser\");","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"            assertNotNull(command);","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"            fail(\"Should not throw DukeException for valid input\");","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"    public void testParseInvalidInput() {","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"        InputParser inputParser \u003d new InputParser();","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"            inputParser.parse(\"invalid command\");","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"            fail(\"Should throw DukeException for invalid input\");","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"            assertEquals(\"Meow? Unknown command!\", e.getMessage());","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"    public void testParseEmptyInput() {","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"        InputParser inputParser \u003d new InputParser();","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"            inputParser.parse(\"\");","lastModifiedDate":"2024-04-07"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"            fail(\"Should throw DukeException for empty input\");","lastModifiedDate":"2024-04-07"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-04-07"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"            assertEquals(\"Meow? Unknown command!\", e.getMessage());","lastModifiedDate":"2024-04-07"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"    public void testParseValidDateTime() throws DukeException {","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"        InputParser inputParser \u003d new InputParser();","lastModifiedDate":"2024-04-07"},{"lineNumber":57,"author":{"gitId":"Carosis"},"content":"        LocalDateTime parsedDateTime \u003d inputParser.parseDate(\"10-10-2024 12:00\");","lastModifiedDate":"2024-04-07"},{"lineNumber":58,"author":{"gitId":"Carosis"},"content":"        assertEquals(\"10-10-2024 12:00\", inputParser.formatOutput(parsedDateTime));","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":60,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"Carosis":60}},{"path":"src/test/java/duke/utility/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"package duke.utility;","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"import duke.tasks.TodoTask;","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":"import duke.tasks.DeadlineTask;","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":"import duke.tasks.EventTask;","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":"import duke.tasks.DoWithInTimeTask;","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"public class StorageTest {","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"    public void testLoadAndSave() {","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"        Storage storage \u003d new Storage(\"src/main/java/testStorage.txt\");","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"        ArrayList\u003cTasks\u003e tasksToSave \u003d new ArrayList\u003cTasks\u003e();","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"        tasksToSave.add(new TodoTask(\"Task 1\", false));","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"        tasksToSave.add(new DeadlineTask(\"Task 2\", false, \"2024-04-10 12:00\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"        tasksToSave.add(new EventTask(\"Task 3\", false, \"2024-04-11 14:00\", \"2024-04-11 16:00\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"        tasksToSave.add(new DoWithInTimeTask(\"Task 4\", false, \"2024-04-12 10:00\", \"2024-04-12 12:00\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"            System.out.println(\"File Path: \" + storage.FilePath);","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"            for (Tasks task : tasksToSave) {","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"                System.out.println(task);","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"            }","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"            storage.save(tasksToSave);","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"            ArrayList\u003cTasks\u003e loadedTasks \u003d storage.load();","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"            System.out.println(\"Loaded Tasks:\");","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"            for (Tasks task : loadedTasks) {","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"                System.out.println(task);","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"            }","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"            assertEquals(tasksToSave.size(), loadedTasks.size());","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"            for (int i \u003d 0; i \u003c tasksToSave.size(); i++) {","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"                assertEquals(tasksToSave.get(i).toString(), loadedTasks.get(i).toString());","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"            }","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"        } catch (IOException | DukeException e) {","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"            fail(\"Exception thrown: \" + e.getMessage());","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":51,"author":{"gitId":"Carosis"},"content":"    public void testLoadNonExistentFile() {","lastModifiedDate":"2024-04-07"},{"lineNumber":52,"author":{"gitId":"Carosis"},"content":"        Storage storage \u003d new Storage(\"nonexistent.txt\");","lastModifiedDate":"2024-04-07"},{"lineNumber":53,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-04-07"},{"lineNumber":54,"author":{"gitId":"Carosis"},"content":"            storage.load();","lastModifiedDate":"2024-04-07"},{"lineNumber":55,"author":{"gitId":"Carosis"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"Carosis"},"content":"            assertEquals(\"YumiKunKun failed to find the magic file meow!\", e.getMessage());","lastModifiedDate":"2024-04-07"},{"lineNumber":57,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":58,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":60,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":61,"author":{"gitId":"Carosis"},"content":"    public void testSaveIOException() {","lastModifiedDate":"2024-04-07"},{"lineNumber":62,"author":{"gitId":"Carosis"},"content":"        Storage storage \u003d new Storage(\"invalid/path/test.txt\");","lastModifiedDate":"2024-04-07"},{"lineNumber":63,"author":{"gitId":"Carosis"},"content":"        ArrayList\u003cTasks\u003e tasksToSave \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-07"},{"lineNumber":64,"author":{"gitId":"Carosis"},"content":"        tasksToSave.add(new TodoTask(\"Task 1\", false));","lastModifiedDate":"2024-04-07"},{"lineNumber":65,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":66,"author":{"gitId":"Carosis"},"content":"        try {","lastModifiedDate":"2024-04-07"},{"lineNumber":67,"author":{"gitId":"Carosis"},"content":"            storage.save(tasksToSave);","lastModifiedDate":"2024-04-07"},{"lineNumber":68,"author":{"gitId":"Carosis"},"content":"            fail(\"Expected IOException\");","lastModifiedDate":"2024-04-07"},{"lineNumber":69,"author":{"gitId":"Carosis"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-07"},{"lineNumber":70,"author":{"gitId":"Carosis"},"content":"            assertTrue(e.getMessage().contains(\"Unable to create the magic book\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":71,"author":{"gitId":"Carosis"},"content":"        }","lastModifiedDate":"2024-04-07"},{"lineNumber":72,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":73,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"Carosis":73}},{"path":"src/test/java/duke/utility/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"package duke.utility;","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"public class TaskListTest {","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"    public void testAddTask() {","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"        Tasks task \u003d new Tasks(\"Sample Task\");","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"        ArrayList\u003cTasks\u003e tasks \u003d taskList.getAllTasks();","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"        assertEquals(\"Sample Task\", tasks.get(0).getDescription());","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"        Tasks task1 \u003d new Tasks(\"Task 1\");","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"        Tasks task2 \u003d new Tasks(\"Task 2\");","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"        assertEquals(2, taskList.getTaskAmount(taskList.getAllTasks()));","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"        taskList.deleteTask(1);","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"        assertEquals(1, taskList.getTaskAmount(taskList.getAllTasks()));","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"        assertEquals(\"Task 2\", taskList.getTask(1).getDescription());","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"    public void testPrintTaskList() {","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"        Tasks task1 \u003d new Tasks(\"Task 1\");","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"        Tasks task2 \u003d new Tasks(\"Task 2\");","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"        taskList.addTask(task1);","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"        taskList.addTask(task2);","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"        ArrayList\u003cTasks\u003e tasks \u003d taskList.getAllTasks();","lastModifiedDate":"2024-04-07"},{"lineNumber":46,"author":{"gitId":"Carosis"},"content":"        assertEquals(2, tasks.size());","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":48,"author":{"gitId":"Carosis"},"content":"        taskList.printTaskList(tasks);  // This will print the task list to the console for manual verification.","lastModifiedDate":"2024-04-07"},{"lineNumber":49,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":50,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"Carosis":50}},{"path":"src/test/java/duke/utility/UITest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"package duke.utility;","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2024-04-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2024-04-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":"import java.io.PrintStream;","lastModifiedDate":"2024-04-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":11,"author":{"gitId":"Carosis"},"content":"public class UITest {","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":13,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":14,"author":{"gitId":"Carosis"},"content":"    public void testReadCommand() {","lastModifiedDate":"2024-04-07"},{"lineNumber":15,"author":{"gitId":"Carosis"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2024-04-07"},{"lineNumber":16,"author":{"gitId":"Carosis"},"content":"        assertEquals(\"goodbye\", ui.readCommand());","lastModifiedDate":"2024-04-07"},{"lineNumber":17,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":20,"author":{"gitId":"Carosis"},"content":"    public void testPrintNumberOfTask() {","lastModifiedDate":"2024-04-07"},{"lineNumber":21,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"Carosis"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2024-04-07"},{"lineNumber":23,"author":{"gitId":"Carosis"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2024-04-07"},{"lineNumber":24,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":25,"author":{"gitId":"Carosis"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"Carosis"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-04-07"},{"lineNumber":27,"author":{"gitId":"Carosis"},"content":"        taskList.addTask(new Tasks(\"Sample Task 1\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":28,"author":{"gitId":"Carosis"},"content":"        taskList.addTask(new Tasks(\"Sample Task 2\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":29,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":30,"author":{"gitId":"Carosis"},"content":"        ui.printNumberOfTask(taskList);","lastModifiedDate":"2024-04-07"},{"lineNumber":31,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":32,"author":{"gitId":"Carosis"},"content":"        System.setOut(System.out);","lastModifiedDate":"2024-04-07"},{"lineNumber":33,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":34,"author":{"gitId":"Carosis"},"content":"        String expectedString \u003d \"Now you have 2 tasks in the Magic Book! Meow!\"+ System.lineSeparator();","lastModifiedDate":"2024-04-07"},{"lineNumber":35,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"Carosis"},"content":"        assertEquals(expectedString, outContent.toString());","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":38,"author":{"gitId":"Carosis"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":39,"author":{"gitId":"Carosis"},"content":"    @Test","lastModifiedDate":"2024-04-07"},{"lineNumber":40,"author":{"gitId":"Carosis"},"content":"    public void testPrintIndividualTask() {","lastModifiedDate":"2024-04-07"},{"lineNumber":41,"author":{"gitId":"Carosis"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2024-04-07"},{"lineNumber":42,"author":{"gitId":"Carosis"},"content":"        Tasks task \u003d new Tasks(\"Sample Task\");","lastModifiedDate":"2024-04-07"},{"lineNumber":43,"author":{"gitId":"Carosis"},"content":"        assertEquals(\"Sample Task\", task.getDescription());","lastModifiedDate":"2024-04-07"},{"lineNumber":44,"author":{"gitId":"Carosis"},"content":"    }","lastModifiedDate":"2024-04-07"},{"lineNumber":45,"author":{"gitId":"Carosis"},"content":"}","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"Carosis":45}},{"path":"test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"[ ] Task 1","lastModifiedDate":"2024-04-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"[ ] Task 2","lastModifiedDate":"2024-04-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"[ ] Task 3","lastModifiedDate":"2024-04-07"}],"authorContributionMap":{"Carosis":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Carosis"},"content":"testing","lastModifiedDate":"2024-02-07"},{"lineNumber":2,"author":{"gitId":"Carosis"},"content":"add","lastModifiedDate":"2024-02-07"},{"lineNumber":3,"author":{"gitId":"Carosis"},"content":"fish","lastModifiedDate":"2024-02-07"},{"lineNumber":4,"author":{"gitId":"Carosis"},"content":"fish1","lastModifiedDate":"2024-02-07"},{"lineNumber":5,"author":{"gitId":"Carosis"},"content":"fish1","lastModifiedDate":"2024-02-07"},{"lineNumber":6,"author":{"gitId":"Carosis"},"content":"fish2","lastModifiedDate":"2024-02-07"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":"list","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"Carosis"},"content":"back","lastModifiedDate":"2024-02-07"},{"lineNumber":9,"author":{"gitId":"Carosis"},"content":"back","lastModifiedDate":"2024-02-07"},{"lineNumber":10,"author":{"gitId":"Carosis"},"content":"bye","lastModifiedDate":"2024-02-07"}],"authorContributionMap":{"Carosis":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"Carosis"},"content":"del ACTUAL.TXT","lastModifiedDate":"2024-02-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Carosis"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-04-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Carosis":2,"-":19}}]
