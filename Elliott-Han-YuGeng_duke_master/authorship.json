[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"3. After that, locate the `src/main/java/Rolling.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-04-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Elliott-Han-YuGeng":1,"-":23}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2024-04-19"},{"lineNumber":2,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-19"},{"lineNumber":3,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    protected String by;","lastModifiedDate":"2024-04-19"},{"lineNumber":4,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-19"},{"lineNumber":5,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2024-04-19"},{"lineNumber":6,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        super(description);","lastModifiedDate":"2024-04-19"},{"lineNumber":7,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-04-19"},{"lineNumber":8,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-19"},{"lineNumber":9,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-19"},{"lineNumber":10,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    @Override","lastModifiedDate":"2024-04-19"},{"lineNumber":11,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public String getString() {","lastModifiedDate":"2024-04-19"},{"lineNumber":12,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        return \"[D]\" + super.getString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-04-19"},{"lineNumber":13,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-19"},{"lineNumber":14,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"}","lastModifiedDate":"2024-04-19"}],"authorContributionMap":{"Elliott-Han-YuGeng":14}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"public class Event extends Task {","lastModifiedDate":"2024-04-19"},{"lineNumber":2,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-19"},{"lineNumber":3,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    protected String begin;","lastModifiedDate":"2024-04-19"},{"lineNumber":4,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    protected String end;","lastModifiedDate":"2024-04-19"},{"lineNumber":5,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-19"},{"lineNumber":6,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public Event(String description, String begin, String end) {","lastModifiedDate":"2024-04-19"},{"lineNumber":7,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        super(description);","lastModifiedDate":"2024-04-19"},{"lineNumber":8,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        this.begin \u003d begin;","lastModifiedDate":"2024-04-19"},{"lineNumber":9,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-04-19"},{"lineNumber":10,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-19"},{"lineNumber":11,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-19"},{"lineNumber":12,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    @Override","lastModifiedDate":"2024-04-19"},{"lineNumber":13,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public String getString() {","lastModifiedDate":"2024-04-19"},{"lineNumber":14,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        return \"[E]\" + super.getString() + \" (from: \" + begin + \" to: \" + end + \")\";","lastModifiedDate":"2024-04-19"},{"lineNumber":15,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-19"},{"lineNumber":16,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"}","lastModifiedDate":"2024-04-19"}],"authorContributionMap":{"Elliott-Han-YuGeng":16}},{"path":"src/main/java/Rolling.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-04-17"},{"lineNumber":2,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-20"},{"lineNumber":3,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-17"},{"lineNumber":4,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"public class Rolling {","lastModifiedDate":"2024-04-17"},{"lineNumber":5,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    //  Initiate a user input","lastModifiedDate":"2024-04-19"},{"lineNumber":6,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    private static final Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2024-04-18"},{"lineNumber":7,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    private static String line;            // user original input","lastModifiedDate":"2024-04-19"},{"lineNumber":8,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    private static int lineLength;","lastModifiedDate":"2024-04-18"},{"lineNumber":9,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    private static Command l1;              // keyword: todo, deadline, event, mark, unmark, list, bye","lastModifiedDate":"2024-04-20"},{"lineNumber":10,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    private static int l2;                 // number to mark or unmark: 1, 2, 3, ...","lastModifiedDate":"2024-04-19"},{"lineNumber":11,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    private static int lineSlashLength;","lastModifiedDate":"2024-04-19"},{"lineNumber":12,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    private static String l3;              // contains task description","lastModifiedDate":"2024-04-19"},{"lineNumber":13,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    private static String l4;              // by ? or from ?","lastModifiedDate":"2024-04-19"},{"lineNumber":14,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    private static String l5;              // to ?","lastModifiedDate":"2024-04-19"},{"lineNumber":15,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-18"},{"lineNumber":16,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    //  Create a todo list","lastModifiedDate":"2024-04-17"},{"lineNumber":17,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    private static final ArrayList\u003cTask\u003e todoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-20"},{"lineNumber":18,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-17"},{"lineNumber":19,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    //  Store Keywords","lastModifiedDate":"2024-04-20"},{"lineNumber":20,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public enum Command {","lastModifiedDate":"2024-04-20"},{"lineNumber":21,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        TODO,","lastModifiedDate":"2024-04-20"},{"lineNumber":22,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        DEADLINE,","lastModifiedDate":"2024-04-20"},{"lineNumber":23,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        EVENT,","lastModifiedDate":"2024-04-20"},{"lineNumber":24,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        MARK,","lastModifiedDate":"2024-04-20"},{"lineNumber":25,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        UNMARK,","lastModifiedDate":"2024-04-20"},{"lineNumber":26,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        DELETE,","lastModifiedDate":"2024-04-20"},{"lineNumber":27,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        LIST,","lastModifiedDate":"2024-04-20"},{"lineNumber":28,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        NULL","lastModifiedDate":"2024-04-20"},{"lineNumber":29,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-20"},{"lineNumber":30,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-20"},{"lineNumber":31,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"//  ---------- Static Method --------------------------------------------------------","lastModifiedDate":"2024-04-19"},{"lineNumber":32,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-19"},{"lineNumber":33,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public static void start() {","lastModifiedDate":"2024-04-17"},{"lineNumber":34,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        String greeting \u003d \"Hello! I\u0027m Your Rolling Bear!\\n\"","lastModifiedDate":"2024-04-17"},{"lineNumber":35,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                        + \"What can I do for you? todo, deadline, event...\\n\"","lastModifiedDate":"2024-04-20"},{"lineNumber":36,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                        + \"(type \u0027bye\u0027 to exit)\";","lastModifiedDate":"2024-04-20"},{"lineNumber":37,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        System.out.println(greeting);","lastModifiedDate":"2024-04-17"},{"lineNumber":38,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-17"},{"lineNumber":39,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-17"},{"lineNumber":40,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public static void userInput() {","lastModifiedDate":"2024-04-18"},{"lineNumber":41,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        line \u003d in.nextLine().trim().replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2024-04-20"},{"lineNumber":42,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-19"},{"lineNumber":43,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"//      Split by space","lastModifiedDate":"2024-04-19"},{"lineNumber":44,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        String[] lineSplit \u003d line.split(\" \");","lastModifiedDate":"2024-04-18"},{"lineNumber":45,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        lineLength \u003d lineSplit.length;","lastModifiedDate":"2024-04-18"},{"lineNumber":46,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        try {","lastModifiedDate":"2024-04-20"},{"lineNumber":47,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            l1 \u003d Command.valueOf(lineSplit[0].toUpperCase());","lastModifiedDate":"2024-04-20"},{"lineNumber":48,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-04-20"},{"lineNumber":49,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            l1 \u003d Command.NULL;","lastModifiedDate":"2024-04-20"},{"lineNumber":50,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        }","lastModifiedDate":"2024-04-20"},{"lineNumber":51,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        try {","lastModifiedDate":"2024-04-19"},{"lineNumber":52,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            l2 \u003d Integer.parseInt(lineSplit[1]);","lastModifiedDate":"2024-04-18"},{"lineNumber":53,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-04-18"},{"lineNumber":54,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            l2 \u003d 0;","lastModifiedDate":"2024-04-18"},{"lineNumber":55,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        }","lastModifiedDate":"2024-04-18"},{"lineNumber":56,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-19"},{"lineNumber":57,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"//      Split by slash","lastModifiedDate":"2024-04-19"},{"lineNumber":58,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        String[] lineSplitS \u003d line.split(\"/\");","lastModifiedDate":"2024-04-19"},{"lineNumber":59,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        lineSlashLength \u003d lineSplitS.length;","lastModifiedDate":"2024-04-19"},{"lineNumber":60,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        l3 \u003d lineSplitS[0];","lastModifiedDate":"2024-04-19"},{"lineNumber":61,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        try {","lastModifiedDate":"2024-04-19"},{"lineNumber":62,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            l4 \u003d lineSplitS[1];","lastModifiedDate":"2024-04-19"},{"lineNumber":63,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-04-19"},{"lineNumber":64,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            l4 \u003d \"\";","lastModifiedDate":"2024-04-19"},{"lineNumber":65,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        }","lastModifiedDate":"2024-04-19"},{"lineNumber":66,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        try {","lastModifiedDate":"2024-04-19"},{"lineNumber":67,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            l5 \u003d lineSplitS[2];","lastModifiedDate":"2024-04-19"},{"lineNumber":68,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-04-19"},{"lineNumber":69,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            l5 \u003d \"\";","lastModifiedDate":"2024-04-19"},{"lineNumber":70,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        }","lastModifiedDate":"2024-04-19"},{"lineNumber":71,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-18"},{"lineNumber":72,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-18"},{"lineNumber":73,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public static void addtoList(ArrayList\u003cTask\u003e ss, String s) {","lastModifiedDate":"2024-04-20"},{"lineNumber":74,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        switch (l1) {","lastModifiedDate":"2024-04-20"},{"lineNumber":75,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            case TODO:","lastModifiedDate":"2024-04-20"},{"lineNumber":76,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                ss.add(new Todo(s.substring(5).trim()));","lastModifiedDate":"2024-04-20"},{"lineNumber":77,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                break;","lastModifiedDate":"2024-04-20"},{"lineNumber":78,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            case DEADLINE:","lastModifiedDate":"2024-04-20"},{"lineNumber":79,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                ss.add(new Deadline(l3.substring(9).trim(), l4.substring(3).trim()));","lastModifiedDate":"2024-04-20"},{"lineNumber":80,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                break;","lastModifiedDate":"2024-04-20"},{"lineNumber":81,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            case EVENT:","lastModifiedDate":"2024-04-20"},{"lineNumber":82,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                ss.add(new Event(l3.substring(6).trim(), l4.substring(5).trim(), l5.substring(3).trim()));","lastModifiedDate":"2024-04-20"},{"lineNumber":83,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                break;","lastModifiedDate":"2024-04-20"},{"lineNumber":84,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        }","lastModifiedDate":"2024-04-19"},{"lineNumber":85,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        System.out.println(\"Sure! Just added to the task list!\\n\"","lastModifiedDate":"2024-04-20"},{"lineNumber":86,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                         + \"  \" + ss.get(ss.size() - 1).getString() + \"\\n\"","lastModifiedDate":"2024-04-20"},{"lineNumber":87,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                         + \"Task+1 | Now you have \" + ss.size() + \" task(s) in the list.\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":88,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-17"},{"lineNumber":89,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-17"},{"lineNumber":90,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public static void printList(ArrayList\u003cTask\u003e ss) {","lastModifiedDate":"2024-04-20"},{"lineNumber":91,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        if (ss.isEmpty()) {","lastModifiedDate":"2024-04-20"},{"lineNumber":92,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            System.out.println(\"You have no task in the list now.\");","lastModifiedDate":"2024-04-20"},{"lineNumber":93,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        } else {","lastModifiedDate":"2024-04-20"},{"lineNumber":94,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            System.out.println(\"Sure! These are the tasks in your list:\");","lastModifiedDate":"2024-04-19"},{"lineNumber":95,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            for (int i \u003d 0; i \u003c ss.size(); i++) {","lastModifiedDate":"2024-04-20"},{"lineNumber":96,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                System.out.println((i+1) + \".\" + ss.get(i).getString());","lastModifiedDate":"2024-04-20"},{"lineNumber":97,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            }","lastModifiedDate":"2024-04-19"},{"lineNumber":98,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        }","lastModifiedDate":"2024-04-17"},{"lineNumber":99,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        System.out.println();","lastModifiedDate":"2024-04-20"},{"lineNumber":100,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-20"},{"lineNumber":101,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-20"},{"lineNumber":102,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public static void throwRollingException() throws RollingException {","lastModifiedDate":"2024-04-20"},{"lineNumber":103,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        throw new RollingException(line, lineLength, l1, l2, l3, lineSlashLength, l4, l5, todoList.size());","lastModifiedDate":"2024-04-20"},{"lineNumber":104,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-20"},{"lineNumber":105,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-20"},{"lineNumber":106,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public static void handleTodo() throws RollingException {","lastModifiedDate":"2024-04-20"},{"lineNumber":107,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        if (lineLength\u003e1 \u0026\u0026 !line.contains(\"/\")) {","lastModifiedDate":"2024-04-20"},{"lineNumber":108,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            addtoList(todoList, line);","lastModifiedDate":"2024-04-20"},{"lineNumber":109,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        } else throwRollingException();","lastModifiedDate":"2024-04-20"},{"lineNumber":110,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-20"},{"lineNumber":111,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-20"},{"lineNumber":112,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public static void handleDeadline() throws RollingException {","lastModifiedDate":"2024-04-20"},{"lineNumber":113,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        if (lineLength\u003e1 \u0026\u0026 line.contains(\"/by \") \u0026\u0026 !l3.trim().equals(\"deadline\") \u0026\u0026 lineSlashLength\u003d\u003d2 \u0026\u0026 !l4.trim().equals(\"by\")) {","lastModifiedDate":"2024-04-20"},{"lineNumber":114,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            addtoList(todoList, line);","lastModifiedDate":"2024-04-20"},{"lineNumber":115,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        } else throwRollingException();","lastModifiedDate":"2024-04-20"},{"lineNumber":116,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-20"},{"lineNumber":117,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-20"},{"lineNumber":118,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public static void handleEvent() throws RollingException {","lastModifiedDate":"2024-04-20"},{"lineNumber":119,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        if (lineLength\u003e1 \u0026\u0026 line.contains(\"/from \") \u0026\u0026 line.contains(\"/to \") \u0026\u0026 !l3.trim().equals(\"event\") \u0026\u0026 lineSlashLength\u003d\u003d3 \u0026\u0026 !l4.trim().equals(\"from\") \u0026\u0026 !l5.trim().equals(\"to\")) {","lastModifiedDate":"2024-04-20"},{"lineNumber":120,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            addtoList(todoList, line);","lastModifiedDate":"2024-04-20"},{"lineNumber":121,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        } else throwRollingException();","lastModifiedDate":"2024-04-20"},{"lineNumber":122,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-17"},{"lineNumber":123,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-17"},{"lineNumber":124,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public static void handleMark() throws RollingException {","lastModifiedDate":"2024-04-20"},{"lineNumber":125,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        if (lineLength\u003d\u003d2 \u0026\u0026 l2!\u003d0 \u0026\u0026 l2\u003c\u003dtodoList.size()) {","lastModifiedDate":"2024-04-20"},{"lineNumber":126,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            todoList.get(l2 - 1).markAsDone();","lastModifiedDate":"2024-04-20"},{"lineNumber":127,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        } else throwRollingException();","lastModifiedDate":"2024-04-20"},{"lineNumber":128,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        System.out.println();","lastModifiedDate":"2024-04-20"},{"lineNumber":129,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-20"},{"lineNumber":130,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-20"},{"lineNumber":131,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public static void handleUnmark() throws RollingException {","lastModifiedDate":"2024-04-20"},{"lineNumber":132,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        if (lineLength\u003d\u003d2 \u0026\u0026 l2!\u003d0 \u0026\u0026 l2\u003c\u003dtodoList.size()) {","lastModifiedDate":"2024-04-20"},{"lineNumber":133,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            todoList.get(l2 - 1).markAsNotDone();","lastModifiedDate":"2024-04-20"},{"lineNumber":134,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        } else throwRollingException();","lastModifiedDate":"2024-04-20"},{"lineNumber":135,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        System.out.println();","lastModifiedDate":"2024-04-20"},{"lineNumber":136,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-20"},{"lineNumber":137,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-20"},{"lineNumber":138,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public static void handleDelete() throws RollingException {","lastModifiedDate":"2024-04-20"},{"lineNumber":139,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        if (lineLength\u003d\u003d2 \u0026\u0026 l2!\u003d0 \u0026\u0026 l2\u003c\u003dtodoList.size()) {","lastModifiedDate":"2024-04-20"},{"lineNumber":140,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            System.out.println(\"Noted. This task is removed from the list:\\n\"","lastModifiedDate":"2024-04-20"},{"lineNumber":141,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    + \"  \" + todoList.get(l2 - 1).getString() + \"\\n\"","lastModifiedDate":"2024-04-20"},{"lineNumber":142,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    + \"Task-1 | Now you have \" + (todoList.size()-1) + \" task(s) in the list.\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":143,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            todoList.remove(l2 - 1);","lastModifiedDate":"2024-04-20"},{"lineNumber":144,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        } else throwRollingException();","lastModifiedDate":"2024-04-20"},{"lineNumber":145,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-20"},{"lineNumber":146,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-20"},{"lineNumber":147,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public static void exit() {","lastModifiedDate":"2024-04-17"},{"lineNumber":148,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        System.out.println(\"Ciao! See you soon!\");","lastModifiedDate":"2024-04-19"},{"lineNumber":149,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-17"},{"lineNumber":150,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-17"},{"lineNumber":151,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"//  ---------- Main Function --------------------------------------------------------","lastModifiedDate":"2024-04-19"},{"lineNumber":152,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-17"},{"lineNumber":153,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-04-17"},{"lineNumber":154,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        start();","lastModifiedDate":"2024-04-17"},{"lineNumber":155,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        userInput();","lastModifiedDate":"2024-04-18"},{"lineNumber":156,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-17"},{"lineNumber":157,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"//      Dialog","lastModifiedDate":"2024-04-18"},{"lineNumber":158,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        while(!line.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2024-04-18"},{"lineNumber":159,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            try {","lastModifiedDate":"2024-04-20"},{"lineNumber":160,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                switch (l1) {","lastModifiedDate":"2024-04-20"},{"lineNumber":161,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    case TODO:","lastModifiedDate":"2024-04-20"},{"lineNumber":162,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                        handleTodo();","lastModifiedDate":"2024-04-20"},{"lineNumber":163,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                        break;","lastModifiedDate":"2024-04-20"},{"lineNumber":164,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    case DEADLINE:","lastModifiedDate":"2024-04-20"},{"lineNumber":165,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                        handleDeadline();","lastModifiedDate":"2024-04-20"},{"lineNumber":166,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                        break;","lastModifiedDate":"2024-04-20"},{"lineNumber":167,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    case EVENT:","lastModifiedDate":"2024-04-20"},{"lineNumber":168,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                        handleEvent();","lastModifiedDate":"2024-04-20"},{"lineNumber":169,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                        break;","lastModifiedDate":"2024-04-20"},{"lineNumber":170,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    case MARK:","lastModifiedDate":"2024-04-20"},{"lineNumber":171,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                        handleMark();","lastModifiedDate":"2024-04-20"},{"lineNumber":172,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                        break;","lastModifiedDate":"2024-04-20"},{"lineNumber":173,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    case UNMARK:","lastModifiedDate":"2024-04-20"},{"lineNumber":174,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                        handleUnmark();","lastModifiedDate":"2024-04-20"},{"lineNumber":175,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                        break;","lastModifiedDate":"2024-04-20"},{"lineNumber":176,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    case DELETE:","lastModifiedDate":"2024-04-20"},{"lineNumber":177,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                        handleDelete();","lastModifiedDate":"2024-04-20"},{"lineNumber":178,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                        break;","lastModifiedDate":"2024-04-20"},{"lineNumber":179,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    case LIST:","lastModifiedDate":"2024-04-20"},{"lineNumber":180,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                        printList(todoList);","lastModifiedDate":"2024-04-20"},{"lineNumber":181,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                        break;","lastModifiedDate":"2024-04-20"},{"lineNumber":182,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    default:","lastModifiedDate":"2024-04-20"},{"lineNumber":183,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                        throwRollingException();","lastModifiedDate":"2024-04-20"},{"lineNumber":184,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                        break;","lastModifiedDate":"2024-04-20"},{"lineNumber":185,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                }","lastModifiedDate":"2024-04-20"},{"lineNumber":186,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            } catch (RollingException e) {","lastModifiedDate":"2024-04-20"},{"lineNumber":187,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                userInput();","lastModifiedDate":"2024-04-20"},{"lineNumber":188,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                continue;","lastModifiedDate":"2024-04-20"},{"lineNumber":189,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            }","lastModifiedDate":"2024-04-17"},{"lineNumber":190,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            userInput();","lastModifiedDate":"2024-04-18"},{"lineNumber":191,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        }","lastModifiedDate":"2024-04-17"},{"lineNumber":192,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-20"},{"lineNumber":193,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        exit();","lastModifiedDate":"2024-04-17"},{"lineNumber":194,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-17"},{"lineNumber":195,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"}","lastModifiedDate":"2024-04-17"}],"authorContributionMap":{"Elliott-Han-YuGeng":195}},{"path":"src/main/java/RollingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"public class RollingException extends Exception {","lastModifiedDate":"2024-04-20"},{"lineNumber":2,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public RollingException(String line, int lineLength, Rolling.Command l1, int l2, String l3, int lineSlashLength, String l4, String l5, int listSize) {","lastModifiedDate":"2024-04-20"},{"lineNumber":3,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        switch (l1) {","lastModifiedDate":"2024-04-20"},{"lineNumber":4,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            case TODO:","lastModifiedDate":"2024-04-20"},{"lineNumber":5,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                if (lineLength \u003d\u003d 1) {","lastModifiedDate":"2024-04-20"},{"lineNumber":6,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    System.out.println(\"OOPS!!! The description of a todo cannot be empty.\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":7,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                } else if (line.contains(\"/\")) {","lastModifiedDate":"2024-04-20"},{"lineNumber":8,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    System.out.println(\"OOPS!!! The description of a todo cannot contain \u0027/\u0027. \\nIf you are trying to add a deadline or event, please start with \u0027deadline\u0027 or \u0027event\u0027 instead.\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":9,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                }","lastModifiedDate":"2024-04-20"},{"lineNumber":10,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                break;","lastModifiedDate":"2024-04-20"},{"lineNumber":11,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            case DEADLINE:","lastModifiedDate":"2024-04-20"},{"lineNumber":12,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                if (lineLength \u003d\u003d 1) {","lastModifiedDate":"2024-04-20"},{"lineNumber":13,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    System.out.println(\"OOPS!!! The description of a deadline cannot be empty and should be stated in the format of \u0027deadline do sth /by ...\u0027.\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":14,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                } else if (!line.contains(\"/by \")) {","lastModifiedDate":"2024-04-20"},{"lineNumber":15,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    System.out.println(\"OOPS!!! The deadline time can not be empty and should be stated as \u0027/by ...\u0027.\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":16,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                } else if (l3.trim().equals(\"deadline\")) {","lastModifiedDate":"2024-04-20"},{"lineNumber":17,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    System.out.println(\"OOPS!!! The description of a deadline cannot be empty, e.g. deadline do sth /by ...\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":18,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                } else if (lineSlashLength !\u003d 2) {","lastModifiedDate":"2024-04-20"},{"lineNumber":19,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    System.out.println(\"OOPS!!! The deadline must only contain one \u0027/\u0027 which is \u0027/by ...\u0027.\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":20,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                } else if (l4.trim().equals(\"by\")) {","lastModifiedDate":"2024-04-20"},{"lineNumber":21,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    System.out.println(\"OOPS!!! The deadline time cannot be empty.\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":22,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                }","lastModifiedDate":"2024-04-20"},{"lineNumber":23,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                break;","lastModifiedDate":"2024-04-20"},{"lineNumber":24,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            case EVENT:","lastModifiedDate":"2024-04-20"},{"lineNumber":25,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                if (lineLength \u003d\u003d 1) {","lastModifiedDate":"2024-04-20"},{"lineNumber":26,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    System.out.println(\"OOPS!!! The description of a event cannot be empty and should be stated in the format of \u0027event do sth /from ... /to ...\u0027.\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":27,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                } else if (!line.contains(\"/from \") || !line.contains(\"/to \")) {","lastModifiedDate":"2024-04-20"},{"lineNumber":28,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    System.out.println(\"OOPS!!! The event time is necessary and must have \u0027/from ... /to ...\u0027.\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":29,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                } else if (l3.trim().equals(\"event\")) {","lastModifiedDate":"2024-04-20"},{"lineNumber":30,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    System.out.println(\"OOPS!!! The description of a event cannot be empty, e.g. event do sth /from ... /to ...\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":31,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                } else if (lineSlashLength !\u003d 3) {","lastModifiedDate":"2024-04-20"},{"lineNumber":32,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    System.out.println(\"OOPS!!! The start and end time of the event must only contain two \u0027/\u0027 which is \u0027/from ... /to ...\u0027.\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":33,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                } else if (l4.trim().equals(\"from\")) {","lastModifiedDate":"2024-04-20"},{"lineNumber":34,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    System.out.println(\"OOPS!!! The start time of the event cannot be empty.\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":35,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                } else if (l5.trim().equals(\"to\")) {","lastModifiedDate":"2024-04-20"},{"lineNumber":36,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    System.out.println(\"OOPS!!! The end time of the event cannot be empty.\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":37,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                }","lastModifiedDate":"2024-04-20"},{"lineNumber":38,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                break;","lastModifiedDate":"2024-04-20"},{"lineNumber":39,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            case MARK:","lastModifiedDate":"2024-04-20"},{"lineNumber":40,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            case UNMARK:","lastModifiedDate":"2024-04-20"},{"lineNumber":41,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            case DELETE:","lastModifiedDate":"2024-04-20"},{"lineNumber":42,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                if (lineLength \u003d\u003d 1) {","lastModifiedDate":"2024-04-20"},{"lineNumber":43,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    System.out.println(\"OOPS!!! Please indicate which task you want to \" + l1 + \".\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":44,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                } else if (lineLength \u003e 2) {","lastModifiedDate":"2024-04-20"},{"lineNumber":45,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    System.out.println(\"OOPS!!! Please state in the format of \u0027\" + l1 + \" ?\u0027.\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":46,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                } else if (l2 \u003d\u003d 0) {","lastModifiedDate":"2024-04-20"},{"lineNumber":47,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    System.out.println(\"OOPS!!! The task to \" + l1 + \" must be stated as a digit number and larger than 0, e.g. \" + l1 + \" 1.\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":48,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                } else if (l2 \u003e listSize) {","lastModifiedDate":"2024-04-20"},{"lineNumber":49,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                    System.out.println(\"OOPS!!! You do not have Task \" + l2 + \". \\nNow you only have \" + listSize + \" task(s) in the list.\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":50,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                }","lastModifiedDate":"2024-04-20"},{"lineNumber":51,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                break;","lastModifiedDate":"2024-04-20"},{"lineNumber":52,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"            default:","lastModifiedDate":"2024-04-20"},{"lineNumber":53,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                System.out.println(\"Please start with a right keyword with space: todo, deadline, event, mark, unmark, list...\\n\"","lastModifiedDate":"2024-04-20"},{"lineNumber":54,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                                 + \"(type \u0027bye\u0027 to exit)\\n\");","lastModifiedDate":"2024-04-20"},{"lineNumber":55,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                break;","lastModifiedDate":"2024-04-20"},{"lineNumber":56,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        }","lastModifiedDate":"2024-04-20"},{"lineNumber":57,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-20"},{"lineNumber":58,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"}","lastModifiedDate":"2024-04-20"}],"authorContributionMap":{"Elliott-Han-YuGeng":58}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"public class Task {","lastModifiedDate":"2024-04-18"},{"lineNumber":2,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    protected String description;","lastModifiedDate":"2024-04-18"},{"lineNumber":3,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-04-18"},{"lineNumber":4,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-18"},{"lineNumber":5,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public Task(String description) {","lastModifiedDate":"2024-04-18"},{"lineNumber":6,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-04-18"},{"lineNumber":7,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-04-18"},{"lineNumber":8,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-18"},{"lineNumber":9,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-18"},{"lineNumber":10,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public String getString() {","lastModifiedDate":"2024-04-19"},{"lineNumber":11,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        return (isDone ? \"[X] \" : \"[ ] \") + this.description; // mark done task with X","lastModifiedDate":"2024-04-19"},{"lineNumber":12,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-18"},{"lineNumber":13,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-18"},{"lineNumber":14,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public void markAsDone(){","lastModifiedDate":"2024-04-18"},{"lineNumber":15,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-04-18"},{"lineNumber":16,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        System.out.println(\"Good job :) mission completed!\\n\"","lastModifiedDate":"2024-04-19"},{"lineNumber":17,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                         + \"  \" + this.getString());","lastModifiedDate":"2024-04-19"},{"lineNumber":18,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-18"},{"lineNumber":19,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-18"},{"lineNumber":20,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public void markAsNotDone(){","lastModifiedDate":"2024-04-18"},{"lineNumber":21,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-04-18"},{"lineNumber":22,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        System.out.println(\"Oh no :( mission incomplete\\n\"","lastModifiedDate":"2024-04-19"},{"lineNumber":23,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"                         + \"  \" + this.getString());","lastModifiedDate":"2024-04-19"},{"lineNumber":24,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-18"},{"lineNumber":25,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"}","lastModifiedDate":"2024-04-18"}],"authorContributionMap":{"Elliott-Han-YuGeng":25}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"public class Todo extends Task {","lastModifiedDate":"2024-04-19"},{"lineNumber":2,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-19"},{"lineNumber":3,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public Todo(String description) {","lastModifiedDate":"2024-04-19"},{"lineNumber":4,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        super(description);","lastModifiedDate":"2024-04-19"},{"lineNumber":5,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-19"},{"lineNumber":6,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"","lastModifiedDate":"2024-04-19"},{"lineNumber":7,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    @Override","lastModifiedDate":"2024-04-19"},{"lineNumber":8,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    public String getString() {","lastModifiedDate":"2024-04-19"},{"lineNumber":9,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"        return \"[T]\" + super.getString();","lastModifiedDate":"2024-04-19"},{"lineNumber":10,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"    }","lastModifiedDate":"2024-04-19"},{"lineNumber":11,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"}","lastModifiedDate":"2024-04-19"}],"authorContributionMap":{"Elliott-Han-YuGeng":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Elliott-Han-YuGeng"},"content":"java -classpath ..\\bin Rolling \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-04-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Elliott-Han-YuGeng":1,"-":20}}]
