[{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"anythingwhatever192940958"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"anythingwhatever192940958"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"anythingwhatever192940958"},"content":" * Extends the abstract Task class.","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"anythingwhatever192940958"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"anythingwhatever192940958"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"anythingwhatever192940958"},"content":"    private LocalDate byDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Constructs a DeadlineTask object with the given description and deadline date.","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"anythingwhatever192940958"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @param byDate      The deadline date of the task.","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"anythingwhatever192940958"},"content":"    public DeadlineTask(String description, LocalDate byDate) {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"anythingwhatever192940958"},"content":"        super(\"D\", description);","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"anythingwhatever192940958"},"content":"        this.byDate \u003d byDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Gets the description of the task along with the deadline date.","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"anythingwhatever192940958"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @return The formatted description with the deadline date.","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"anythingwhatever192940958"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"anythingwhatever192940958"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"anythingwhatever192940958"},"content":"        return super.getDescription() + \" (by: \" + formatDate(byDate) + \")\";","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Formats the given LocalDate object into a string.","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"anythingwhatever192940958"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @param date The LocalDate object to format.","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @return The formatted date string.","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"anythingwhatever192940958"},"content":"    private String formatDate(LocalDate date) {","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"anythingwhatever192940958"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Converts the DeadlineTask object to a string in save format.","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"anythingwhatever192940958"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @return The string representation of the task in save format.","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"anythingwhatever192940958"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"anythingwhatever192940958"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"anythingwhatever192940958"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + formatDate(byDate);","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"anythingwhatever192940958"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"anythingwhatever192940958":51}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-02-02"},{"lineNumber":4,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.util.List;","lastModifiedDate":"2024-02-02"},{"lineNumber":5,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-02-02"},{"lineNumber":6,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":7,"author":{"gitId":"anythingwhatever192940958"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"anythingwhatever192940958"},"content":" * The main class of the Firefly task management application.","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"anythingwhatever192940958"},"content":" * Allows users to interact with the application through a command-line interface.","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"anythingwhatever192940958"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"anythingwhatever192940958"},"content":"     * The main method of the application.","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Creates a Scanner object to read user input and initializes the task list.","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Displays the logo and welcomes the user.","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Handles user commands and interacts with the TaskListHandler and DukeExceptionHandler classes.","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"anythingwhatever192940958"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2024-02-02"},{"lineNumber":21,"author":{"gitId":"anythingwhatever192940958"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-02-17"},{"lineNumber":22,"author":{"gitId":"anythingwhatever192940958"},"content":"        TaskListHandler.loadTaskList(taskList);","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"anythingwhatever192940958"},"content":"        String logo \u003d \"  ______ _           __ _       \\n\"","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"anythingwhatever192940958"},"content":"                + \" |  ____(_)         / _| |      \\n\"","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"anythingwhatever192940958"},"content":"                + \" | |__   _ _ __ ___| |_| |_   _ \\n\"","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"anythingwhatever192940958"},"content":"                + \" |  __| | | \u0027__/ _ \\\\  _| | | | |\\n\"","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"anythingwhatever192940958"},"content":"                + \" | |    | | | |  __/ | | | |_| |\\n\"","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"anythingwhatever192940958"},"content":"                + \" |_|    |_|_|  \\\\___|_| |_|\\\\__, |\\n\"","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"anythingwhatever192940958"},"content":"                + \"                           __/ |\\n\"","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"anythingwhatever192940958"},"content":"                + \"                          |___/ \";","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"anythingwhatever192940958"},"content":"        System.out.println(logo + \"\\n\");","lastModifiedDate":"2024-02-02"},{"lineNumber":32,"author":{"gitId":"anythingwhatever192940958"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":33,"author":{"gitId":"anythingwhatever192940958"},"content":"        System.out.println(\"Hello! I\u0027m Firefly!\");","lastModifiedDate":"2024-02-14"},{"lineNumber":34,"author":{"gitId":"anythingwhatever192940958"},"content":"        System.out.println(\"Type help to view all commands!\");","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"anythingwhatever192940958"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":36,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":37,"author":{"gitId":"anythingwhatever192940958"},"content":"        while (true) {","lastModifiedDate":"2024-02-02"},{"lineNumber":38,"author":{"gitId":"anythingwhatever192940958"},"content":"            String userInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2024-02-14"},{"lineNumber":39,"author":{"gitId":"anythingwhatever192940958"},"content":"            try {","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"anythingwhatever192940958"},"content":"                DukeExceptionHandler.handleExceptions(userInput, taskList);","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"anythingwhatever192940958"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"anythingwhatever192940958"},"content":"                continue;","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"anythingwhatever192940958"},"content":"            String[] tokenized \u003d userInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-02-14"},{"lineNumber":49,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":50,"author":{"gitId":"anythingwhatever192940958"},"content":"            // list","lastModifiedDate":"2024-02-17"},{"lineNumber":51,"author":{"gitId":"anythingwhatever192940958"},"content":"            if (userInput.equals(\"list\")) {","lastModifiedDate":"2024-02-02"},{"lineNumber":52,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":53,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2024-02-14"},{"lineNumber":54,"author":{"gitId":"anythingwhatever192940958"},"content":"                int i \u003d 1;","lastModifiedDate":"2024-02-02"},{"lineNumber":55,"author":{"gitId":"anythingwhatever192940958"},"content":"                for (Task task : taskList) {","lastModifiedDate":"2024-02-17"},{"lineNumber":56,"author":{"gitId":"anythingwhatever192940958"},"content":"                    System.out.println(i + \".[\" + task.getType() + \"][\" + task.getStatusIcon() + \"] \" + task.getDescription());","lastModifiedDate":"2024-02-17"},{"lineNumber":57,"author":{"gitId":"anythingwhatever192940958"},"content":"                    i++;","lastModifiedDate":"2024-02-02"},{"lineNumber":58,"author":{"gitId":"anythingwhatever192940958"},"content":"                }","lastModifiedDate":"2024-02-02"},{"lineNumber":59,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":60,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":61,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":62,"author":{"gitId":"anythingwhatever192940958"},"content":"            // todo \u003cstring\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":63,"author":{"gitId":"anythingwhatever192940958"},"content":"            else if (tokenized[0].equals(\"todo\") \u0026\u0026 tokenized.length \u003e 1) {","lastModifiedDate":"2024-02-17"},{"lineNumber":64,"author":{"gitId":"anythingwhatever192940958"},"content":"                taskList.add(new TodoTask(tokenized[1]));","lastModifiedDate":"2024-02-17"},{"lineNumber":65,"author":{"gitId":"anythingwhatever192940958"},"content":"                taskList.get(taskList.size() - 1).printTaskInfo(taskList);","lastModifiedDate":"2024-02-17"},{"lineNumber":66,"author":{"gitId":"anythingwhatever192940958"},"content":"                TaskListHandler.saveTaskList(taskList);","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":68,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":69,"author":{"gitId":"anythingwhatever192940958"},"content":"            // deadline \u003cstring\u003e /by \u003cdd-mm-yyyy\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"anythingwhatever192940958"},"content":"            else if (tokenized[0].equals(\"deadline\") \u0026\u0026 tokenized.length \u003e 1 \u0026\u0026 userInput.contains(\"/by\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":71,"author":{"gitId":"anythingwhatever192940958"},"content":"                String[] deadlineInfo \u003d tokenized[1].split(\"\\\\s+/by\\\\s+\", 2);","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"anythingwhatever192940958"},"content":"                LocalDate deadlineDate \u003d LocalDate.parse(deadlineInfo[1], DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"anythingwhatever192940958"},"content":"                taskList.add(new DeadlineTask(deadlineInfo[0], deadlineDate));","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"anythingwhatever192940958"},"content":"                taskList.get(taskList.size() - 1).printTaskInfo(taskList);","lastModifiedDate":"2024-02-17"},{"lineNumber":75,"author":{"gitId":"anythingwhatever192940958"},"content":"                TaskListHandler.saveTaskList(taskList);","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":77,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":78,"author":{"gitId":"anythingwhatever192940958"},"content":"            // event \u003cstring\u003e /from \u003cdd-mm-yyyy\u003e /to \u003cdd-mm-yyyy\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"anythingwhatever192940958"},"content":"            else if (tokenized[0].equals(\"event\") \u0026\u0026 tokenized.length \u003e 1 \u0026\u0026 userInput.contains(\"/from\") \u0026\u0026 userInput.contains(\"/to\")) {","lastModifiedDate":"2024-02-17"},{"lineNumber":80,"author":{"gitId":"anythingwhatever192940958"},"content":"                String[] eventInfo \u003d tokenized[1].split(\"\\\\s+/from\\\\s+\", 2);","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"anythingwhatever192940958"},"content":"                String[] timeInfo \u003d eventInfo[1].split(\"\\\\s+/to\\\\s+\", 2);","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":83,"author":{"gitId":"anythingwhatever192940958"},"content":"                boolean isOnce \u003d timeInfo[1].contains(\"/once\");","lastModifiedDate":"2024-04-07"},{"lineNumber":84,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":85,"author":{"gitId":"anythingwhatever192940958"},"content":"                if (isOnce) {","lastModifiedDate":"2024-04-07"},{"lineNumber":86,"author":{"gitId":"anythingwhatever192940958"},"content":"                    timeInfo[1] \u003d timeInfo[1].replace(\"/once\", \"\").trim();","lastModifiedDate":"2024-04-07"},{"lineNumber":87,"author":{"gitId":"anythingwhatever192940958"},"content":"                }","lastModifiedDate":"2024-04-07"},{"lineNumber":88,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":89,"author":{"gitId":"anythingwhatever192940958"},"content":"                LocalDate startDate \u003d LocalDate.parse(timeInfo[0], DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"anythingwhatever192940958"},"content":"                LocalDate endDate \u003d LocalDate.parse(timeInfo[1], DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":92,"author":{"gitId":"anythingwhatever192940958"},"content":"                EventTask eventTask \u003d new EventTask(eventInfo[0], startDate, endDate, isOnce);","lastModifiedDate":"2024-04-07"},{"lineNumber":93,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":94,"author":{"gitId":"anythingwhatever192940958"},"content":"                taskList.add(eventTask);","lastModifiedDate":"2024-04-07"},{"lineNumber":95,"author":{"gitId":"anythingwhatever192940958"},"content":"                eventTask.printTaskInfo(taskList);","lastModifiedDate":"2024-04-07"},{"lineNumber":96,"author":{"gitId":"anythingwhatever192940958"},"content":"                TaskListHandler.saveTaskList(taskList);","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-02-17"},{"lineNumber":98,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-02-17"},{"lineNumber":99,"author":{"gitId":"anythingwhatever192940958"},"content":"            // mark \u003cint\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":100,"author":{"gitId":"anythingwhatever192940958"},"content":"            else if (tokenized[0].equals(\"mark\") \u0026\u0026 tokenized.length \u003e 1) {","lastModifiedDate":"2024-02-14"},{"lineNumber":101,"author":{"gitId":"anythingwhatever192940958"},"content":"                int markDone \u003d Integer.parseInt(tokenized[1]) - 1;","lastModifiedDate":"2024-02-14"},{"lineNumber":102,"author":{"gitId":"anythingwhatever192940958"},"content":"                String taskType \u003d taskList.get(markDone).getType();","lastModifiedDate":"2024-02-17"},{"lineNumber":103,"author":{"gitId":"anythingwhatever192940958"},"content":"                taskList.get(markDone).markAsDone();","lastModifiedDate":"2024-02-17"},{"lineNumber":104,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-14"},{"lineNumber":105,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2024-02-14"},{"lineNumber":106,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"[\" + taskType + \"][X] \" + taskList.get(markDone).getDescription());","lastModifiedDate":"2024-02-17"},{"lineNumber":107,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-14"},{"lineNumber":108,"author":{"gitId":"anythingwhatever192940958"},"content":"                TaskListHandler.saveTaskList(taskList);","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":110,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":111,"author":{"gitId":"anythingwhatever192940958"},"content":"            // unmark \u003cint\u003e","lastModifiedDate":"2024-02-17"},{"lineNumber":112,"author":{"gitId":"anythingwhatever192940958"},"content":"            else if (tokenized[0].equals(\"unmark\") \u0026\u0026 tokenized.length \u003e 1) {","lastModifiedDate":"2024-02-14"},{"lineNumber":113,"author":{"gitId":"anythingwhatever192940958"},"content":"                int markUndone \u003d Integer.parseInt(tokenized[1]) - 1;","lastModifiedDate":"2024-02-14"},{"lineNumber":114,"author":{"gitId":"anythingwhatever192940958"},"content":"                String taskType \u003d taskList.get(markUndone).getType();","lastModifiedDate":"2024-02-17"},{"lineNumber":115,"author":{"gitId":"anythingwhatever192940958"},"content":"                taskList.get(markUndone).markAsUndone();","lastModifiedDate":"2024-02-17"},{"lineNumber":116,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-14"},{"lineNumber":117,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2024-02-14"},{"lineNumber":118,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"[\" + taskType + \"][ ] \" + taskList.get(markUndone).getDescription());","lastModifiedDate":"2024-02-17"},{"lineNumber":119,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-14"},{"lineNumber":120,"author":{"gitId":"anythingwhatever192940958"},"content":"                TaskListHandler.saveTaskList(taskList);","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-02-14"},{"lineNumber":122,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-02-14"},{"lineNumber":123,"author":{"gitId":"anythingwhatever192940958"},"content":"            // delete \u003cint\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":124,"author":{"gitId":"anythingwhatever192940958"},"content":"            else if (tokenized[0].equals(\"delete\") \u0026\u0026 tokenized.length \u003e 1) {","lastModifiedDate":"2024-03-23"},{"lineNumber":125,"author":{"gitId":"anythingwhatever192940958"},"content":"                int taskIndexToDelete \u003d Integer.parseInt(tokenized[1]) - 1;","lastModifiedDate":"2024-03-23"},{"lineNumber":126,"author":{"gitId":"anythingwhatever192940958"},"content":"                Task removedTask \u003d taskList.remove(taskIndexToDelete);","lastModifiedDate":"2024-03-23"},{"lineNumber":127,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-23"},{"lineNumber":128,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2024-03-23"},{"lineNumber":129,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"[\" + removedTask.getType() + \"][\" + removedTask.getStatusIcon() + \"] \" + removedTask.getDescription());","lastModifiedDate":"2024-03-23"},{"lineNumber":130,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":131,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-23"},{"lineNumber":132,"author":{"gitId":"anythingwhatever192940958"},"content":"                TaskListHandler.saveTaskList(taskList);","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":134,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":135,"author":{"gitId":"anythingwhatever192940958"},"content":"            // find \u003ckeyword\u003e","lastModifiedDate":"2024-04-07"},{"lineNumber":136,"author":{"gitId":"anythingwhatever192940958"},"content":"            else if (tokenized[0].equals(\"find\") \u0026\u0026 tokenized.length \u003e 1) {","lastModifiedDate":"2024-04-07"},{"lineNumber":137,"author":{"gitId":"anythingwhatever192940958"},"content":"                String keyword \u003d tokenized[1].toLowerCase();","lastModifiedDate":"2024-04-07"},{"lineNumber":138,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-04-07"},{"lineNumber":139,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"Here are the matching tasks:\");","lastModifiedDate":"2024-04-07"},{"lineNumber":140,"author":{"gitId":"anythingwhatever192940958"},"content":"                int i \u003d 1;","lastModifiedDate":"2024-04-07"},{"lineNumber":141,"author":{"gitId":"anythingwhatever192940958"},"content":"                for (Task task : taskList) {","lastModifiedDate":"2024-04-07"},{"lineNumber":142,"author":{"gitId":"anythingwhatever192940958"},"content":"                    if (task.getDescription().toLowerCase().contains(keyword)) {","lastModifiedDate":"2024-04-07"},{"lineNumber":143,"author":{"gitId":"anythingwhatever192940958"},"content":"                        System.out.println(i + \".[\" + task.getType() + \"][\" + task.getStatusIcon() + \"] \" + task.getDescription());","lastModifiedDate":"2024-04-07"},{"lineNumber":144,"author":{"gitId":"anythingwhatever192940958"},"content":"                        i++;","lastModifiedDate":"2024-04-07"},{"lineNumber":145,"author":{"gitId":"anythingwhatever192940958"},"content":"                    }","lastModifiedDate":"2024-04-07"},{"lineNumber":146,"author":{"gitId":"anythingwhatever192940958"},"content":"                }","lastModifiedDate":"2024-04-07"},{"lineNumber":147,"author":{"gitId":"anythingwhatever192940958"},"content":"                if (i \u003d\u003d 1) {","lastModifiedDate":"2024-04-07"},{"lineNumber":148,"author":{"gitId":"anythingwhatever192940958"},"content":"                    System.out.println(\"No tasks found with the keyword: \" + keyword);","lastModifiedDate":"2024-04-07"},{"lineNumber":149,"author":{"gitId":"anythingwhatever192940958"},"content":"                }","lastModifiedDate":"2024-04-07"},{"lineNumber":150,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-04-07"},{"lineNumber":151,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-04-07"},{"lineNumber":152,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":153,"author":{"gitId":"anythingwhatever192940958"},"content":"            else if (tokenized[0].equals(\"help\")) {","lastModifiedDate":"2024-03-03"},{"lineNumber":154,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":155,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"Here is a list of valid commands:\");","lastModifiedDate":"2024-03-03"},{"lineNumber":156,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"help     - Displays this page\");","lastModifiedDate":"2024-03-03"},{"lineNumber":157,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"list     - Lists all tasks\");","lastModifiedDate":"2024-03-03"},{"lineNumber":158,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"todo     - Creates a todo task\");","lastModifiedDate":"2024-03-03"},{"lineNumber":159,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"deadline - Creates a deadline task\");","lastModifiedDate":"2024-03-03"},{"lineNumber":160,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"event    - Creates an event task\");","lastModifiedDate":"2024-03-03"},{"lineNumber":161,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"mark     - Marks a task as completed\");","lastModifiedDate":"2024-03-03"},{"lineNumber":162,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"unmark   - Removes a mark from a task\");","lastModifiedDate":"2024-03-03"},{"lineNumber":163,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"delete   - Deletes a task\");","lastModifiedDate":"2024-03-23"},{"lineNumber":164,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"find     - Finds tasks with a specific keyword\");","lastModifiedDate":"2024-04-07"},{"lineNumber":165,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"bye      - Ends the session\");","lastModifiedDate":"2024-03-03"},{"lineNumber":166,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":167,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":168,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-02-02"},{"lineNumber":169,"author":{"gitId":"anythingwhatever192940958"},"content":"            // bye","lastModifiedDate":"2024-03-03"},{"lineNumber":170,"author":{"gitId":"anythingwhatever192940958"},"content":"            else if (userInput.equals(\"bye\")) {","lastModifiedDate":"2024-03-03"},{"lineNumber":171,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":172,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2024-03-03"},{"lineNumber":173,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-02-02"},{"lineNumber":174,"author":{"gitId":"anythingwhatever192940958"},"content":"                break;","lastModifiedDate":"2024-03-03"},{"lineNumber":175,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-02-02"},{"lineNumber":176,"author":{"gitId":"anythingwhatever192940958"},"content":"        }","lastModifiedDate":"2024-02-02"},{"lineNumber":177,"author":{"gitId":"anythingwhatever192940958"},"content":"        scanner.close();","lastModifiedDate":"2024-02-02"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"anythingwhatever192940958":175,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.util.List;","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"anythingwhatever192940958"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"anythingwhatever192940958"},"content":" * Handles exceptions for Duke commands to ensure proper user input format.","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"anythingwhatever192940958"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"anythingwhatever192940958"},"content":"class DukeException extends Exception {","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"anythingwhatever192940958"},"content":"    public DukeException(String message) {","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"anythingwhatever192940958"},"content":"        super(message);","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"anythingwhatever192940958"},"content":"}","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"anythingwhatever192940958"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"anythingwhatever192940958"},"content":" * Handles exceptions for Duke commands based on the user input and the task list.","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"anythingwhatever192940958"},"content":" *","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"anythingwhatever192940958"},"content":" * @param userInput The user input command.","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"anythingwhatever192940958"},"content":" * @param taskList  The list of tasks.","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"anythingwhatever192940958"},"content":" * @throws DukeException If the user input does not meet the required format for the command.","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"anythingwhatever192940958"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"anythingwhatever192940958"},"content":"class DukeExceptionHandler {","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"anythingwhatever192940958"},"content":"    public static void handleExceptions(String userInput, List\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"anythingwhatever192940958"},"content":"        String[] tokenized \u003d userInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"anythingwhatever192940958"},"content":"        if (tokenized[0].equals(\"todo\")) {","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"anythingwhatever192940958"},"content":"            if (tokenized.length \u003c\u003d 1) {","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"anythingwhatever192940958"},"content":"                throw new DukeException(\"Please follow the following format: todo \u003cdescription\u003e\");","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"anythingwhatever192940958"},"content":"        } else if (tokenized[0].equals(\"deadline\")) {","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"anythingwhatever192940958"},"content":"            if (!userInput.matches(\"^deadline .+ /by .+$\")) {","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"anythingwhatever192940958"},"content":"                throw new DukeException(\"Please follow the following format: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"anythingwhatever192940958"},"content":"            String[] deadlineTokens \u003d userInput.split(\"/by\", 2);","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"anythingwhatever192940958"},"content":"            if (deadlineTokens.length \u003c\u003d 1 || deadlineTokens[0].trim().isEmpty()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"anythingwhatever192940958"},"content":"                throw new DukeException(\"Deadline description cannot be empty. Please follow the format: deadline \u003cdescription\u003e /by \u003cdate\u003e\");","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"anythingwhatever192940958"},"content":"            try {","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"anythingwhatever192940958"},"content":"                LocalDate.parse(deadlineTokens[1].trim(), DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"anythingwhatever192940958"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"anythingwhatever192940958"},"content":"                throw new DukeException(\"Invalid date format. Please use dd-MM-yyyy for the deadline.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"anythingwhatever192940958"},"content":"        } else if (tokenized[0].equals(\"event\")) {","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"anythingwhatever192940958"},"content":"            if (!userInput.matches(\"^event .+ /from .+ /to .+( /once)?$\")) {","lastModifiedDate":"2024-04-07"},{"lineNumber":47,"author":{"gitId":"anythingwhatever192940958"},"content":"                throw new DukeException(\"Please follow the following format: event \u003cdescription\u003e /from \u003cstart date\u003e /to \u003cend date\u003e [/once]\");","lastModifiedDate":"2024-04-07"},{"lineNumber":48,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":50,"author":{"gitId":"anythingwhatever192940958"},"content":"            String[] eventTokens \u003d userInput.split(\"/from\", 2);","lastModifiedDate":"2024-03-03"},{"lineNumber":51,"author":{"gitId":"anythingwhatever192940958"},"content":"            String[] fromTokens \u003d eventTokens[1].split(\"/to\", 2);","lastModifiedDate":"2024-03-03"},{"lineNumber":52,"author":{"gitId":"anythingwhatever192940958"},"content":"            String endDateString \u003d fromTokens[1].trim();","lastModifiedDate":"2024-04-07"},{"lineNumber":53,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"anythingwhatever192940958"},"content":"            boolean isOnce \u003d endDateString.endsWith(\"/once\");","lastModifiedDate":"2024-04-07"},{"lineNumber":55,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":56,"author":{"gitId":"anythingwhatever192940958"},"content":"            if (isOnce) {","lastModifiedDate":"2024-04-07"},{"lineNumber":57,"author":{"gitId":"anythingwhatever192940958"},"content":"                endDateString \u003d endDateString.replace(\"/once\", \"\").trim();","lastModifiedDate":"2024-04-07"},{"lineNumber":58,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-04-07"},{"lineNumber":59,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-04-07"},{"lineNumber":60,"author":{"gitId":"anythingwhatever192940958"},"content":"            if (eventTokens.length \u003c\u003d 1 || eventTokens[0].trim().isEmpty() || fromTokens.length \u003c\u003d 1 || fromTokens[0].trim().isEmpty() || endDateString.isEmpty()) {","lastModifiedDate":"2024-04-07"},{"lineNumber":61,"author":{"gitId":"anythingwhatever192940958"},"content":"                throw new DukeException(\"Event description, start date, and end date cannot be empty. Please follow the format: event \u003cdescription\u003e /from \u003cstart date\u003e /to \u003cend date\u003e [/once]\");","lastModifiedDate":"2024-04-07"},{"lineNumber":62,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":63,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":64,"author":{"gitId":"anythingwhatever192940958"},"content":"            try {","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"anythingwhatever192940958"},"content":"                LocalDate.parse(fromTokens[0].trim(), DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"anythingwhatever192940958"},"content":"                LocalDate.parse(endDateString, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-04-07"},{"lineNumber":67,"author":{"gitId":"anythingwhatever192940958"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"anythingwhatever192940958"},"content":"                throw new DukeException(\"Invalid date format. Please use dd-MM-yyyy for the event dates.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"anythingwhatever192940958"},"content":"        } else if (tokenized[0].equals(\"mark\")) {","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"anythingwhatever192940958"},"content":"            if (tokenized.length \u003c\u003d 1) {","lastModifiedDate":"2024-03-03"},{"lineNumber":72,"author":{"gitId":"anythingwhatever192940958"},"content":"                throw new DukeException(\"Please follow the following format: mark \u003ctask number\u003e\");","lastModifiedDate":"2024-03-03"},{"lineNumber":73,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":74,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":75,"author":{"gitId":"anythingwhatever192940958"},"content":"            try {","lastModifiedDate":"2024-03-03"},{"lineNumber":76,"author":{"gitId":"anythingwhatever192940958"},"content":"                int taskNumber \u003d Integer.parseInt(tokenized[1]);","lastModifiedDate":"2024-03-03"},{"lineNumber":77,"author":{"gitId":"anythingwhatever192940958"},"content":"                if (taskNumber \u003c 1 || taskNumber \u003e taskList.size()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":78,"author":{"gitId":"anythingwhatever192940958"},"content":"                    throw new DukeException(\"Task number is out of range.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":79,"author":{"gitId":"anythingwhatever192940958"},"content":"                }","lastModifiedDate":"2024-03-03"},{"lineNumber":80,"author":{"gitId":"anythingwhatever192940958"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"anythingwhatever192940958"},"content":"                throw new DukeException(\"Please enter a number value.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":82,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":83,"author":{"gitId":"anythingwhatever192940958"},"content":"        } else if (tokenized[0].equals(\"unmark\")) {","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"anythingwhatever192940958"},"content":"            if (tokenized.length \u003c\u003d 1) {","lastModifiedDate":"2024-03-03"},{"lineNumber":85,"author":{"gitId":"anythingwhatever192940958"},"content":"                throw new DukeException(\"Please follow the following format: unmark \u003ctask number\u003e\");","lastModifiedDate":"2024-03-03"},{"lineNumber":86,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":87,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":88,"author":{"gitId":"anythingwhatever192940958"},"content":"            try {","lastModifiedDate":"2024-03-03"},{"lineNumber":89,"author":{"gitId":"anythingwhatever192940958"},"content":"                int taskNumber \u003d Integer.parseInt(tokenized[1]);","lastModifiedDate":"2024-03-03"},{"lineNumber":90,"author":{"gitId":"anythingwhatever192940958"},"content":"                if (taskNumber \u003c 1 || taskNumber \u003e taskList.size()) {","lastModifiedDate":"2024-03-03"},{"lineNumber":91,"author":{"gitId":"anythingwhatever192940958"},"content":"                    throw new DukeException(\"Task number is out of range.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":92,"author":{"gitId":"anythingwhatever192940958"},"content":"                }","lastModifiedDate":"2024-03-03"},{"lineNumber":93,"author":{"gitId":"anythingwhatever192940958"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"anythingwhatever192940958"},"content":"                throw new DukeException(\"Please enter a number value.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":95,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-03"},{"lineNumber":96,"author":{"gitId":"anythingwhatever192940958"},"content":"        } else if (tokenized[0].equals(\"delete\")) {","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"anythingwhatever192940958"},"content":"            if (tokenized.length \u003c\u003d 1) {","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"anythingwhatever192940958"},"content":"                throw new DukeException(\"Please follow the following format: delete \u003ctask number\u003e\");","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"anythingwhatever192940958"},"content":"            try {","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"anythingwhatever192940958"},"content":"                int taskNumber \u003d Integer.parseInt(tokenized[1]);","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"anythingwhatever192940958"},"content":"                if (taskNumber \u003c 1 || taskNumber \u003e taskList.size()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"anythingwhatever192940958"},"content":"                    throw new DukeException(\"Task number is out of range.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"anythingwhatever192940958"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"anythingwhatever192940958"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"anythingwhatever192940958"},"content":"                throw new DukeException(\"Please enter a number value.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"anythingwhatever192940958"},"content":"        } else if (!tokenized[0].equals(\"find\") \u0026\u0026 !tokenized[0].equals(\"list\") \u0026\u0026 !tokenized[0].equals(\"help\") \u0026\u0026 !userInput.equals(\"bye\")) {","lastModifiedDate":"2024-04-07"},{"lineNumber":110,"author":{"gitId":"anythingwhatever192940958"},"content":"            throw new DukeException(\"Please enter a valid command.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":111,"author":{"gitId":"anythingwhatever192940958"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":112,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":113,"author":{"gitId":"anythingwhatever192940958"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"anythingwhatever192940958":113}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"anythingwhatever192940958"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"anythingwhatever192940958"},"content":" * Represents an event task with a start date, end date, and optional \"once within period\" flag.","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"anythingwhatever192940958"},"content":" * Extends the abstract Task class.","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"anythingwhatever192940958"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"anythingwhatever192940958"},"content":"public class EventTask extends Task {","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"anythingwhatever192940958"},"content":"    private LocalDate fromDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"anythingwhatever192940958"},"content":"    private LocalDate toDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"anythingwhatever192940958"},"content":"    private boolean isOnce;","lastModifiedDate":"2024-04-07"},{"lineNumber":12,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Constructs an EventTask object with the given description, start date, end date, and \"once within period\" flag.","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"anythingwhatever192940958"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @param fromDate    The start date of the event task.","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @param toDate      The end date of the event task.","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @param isOnce      True if the event occurs only once within the period, false otherwise.","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"anythingwhatever192940958"},"content":"    public EventTask(String description, LocalDate fromDate, LocalDate toDate, boolean isOnce) {","lastModifiedDate":"2024-04-07"},{"lineNumber":22,"author":{"gitId":"anythingwhatever192940958"},"content":"        super(\"E\", description);","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"anythingwhatever192940958"},"content":"        this.fromDate \u003d fromDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"anythingwhatever192940958"},"content":"        this.toDate \u003d toDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"anythingwhatever192940958"},"content":"        this.isOnce \u003d isOnce;","lastModifiedDate":"2024-04-07"},{"lineNumber":26,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Gets the description of the event task along with its start and end dates.","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"anythingwhatever192940958"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @return The formatted description with the start and end dates, and \"once within period\" info if applicable.","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"anythingwhatever192940958"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"anythingwhatever192940958"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"anythingwhatever192940958"},"content":"        String onceInfo \u003d isOnce ? \" (once within period)\" : \"\";","lastModifiedDate":"2024-04-07"},{"lineNumber":36,"author":{"gitId":"anythingwhatever192940958"},"content":"        return super.getDescription() + \" (from: \" + formatDate(fromDate) + \" to: \" + formatDate(toDate) + \")\" + onceInfo;","lastModifiedDate":"2024-04-07"},{"lineNumber":37,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Converts the EventTask object to a string in save format.","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"anythingwhatever192940958"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @return The string representation of the event task in save format.","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"anythingwhatever192940958"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"anythingwhatever192940958"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"anythingwhatever192940958"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"anythingwhatever192940958"},"content":"        String formattedFromDate \u003d fromDate.format(formatter);","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"anythingwhatever192940958"},"content":"        String formattedToDate \u003d toDate.format(formatter);","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"anythingwhatever192940958"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + formattedFromDate + \" | \" + formattedToDate + \" | \" + (isOnce ? \"once\" : \"\");","lastModifiedDate":"2024-04-07"},{"lineNumber":50,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Formats the given LocalDate object into a string with \"dd-MM-yyyy\" format.","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"anythingwhatever192940958"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @param date The LocalDate object to format.","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @return The formatted date string.","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"anythingwhatever192940958"},"content":"    private String formatDate(LocalDate date) {","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"anythingwhatever192940958"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"anythingwhatever192940958"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"anythingwhatever192940958":61}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.util.List;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"anythingwhatever192940958"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"anythingwhatever192940958"},"content":" * Represents a task with a type, description, and completion status.","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"anythingwhatever192940958"},"content":" * This is an abstract class extended by specific task types such as TodoTask, DeadlineTask, and EventTask.","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"anythingwhatever192940958"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"anythingwhatever192940958"},"content":"public abstract class Task {","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"anythingwhatever192940958"},"content":"    protected String type; // Added task type","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"anythingwhatever192940958"},"content":"    protected String description;","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"anythingwhatever192940958"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Constructs a Task object with the given type and description.","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"anythingwhatever192940958"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @param type        The type of the task (e.g., \"T\" for Todo, \"D\" for Deadline, \"E\" for Event).","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @param description The description of the task.","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"anythingwhatever192940958"},"content":"    public Task(String type, String description) {","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"anythingwhatever192940958"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"anythingwhatever192940958"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"anythingwhatever192940958"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Returns a string representing the completion status of the task.","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"anythingwhatever192940958"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @return The completion status icon (\"X\" if done, \" \" if not done).","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"anythingwhatever192940958"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"anythingwhatever192940958"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"anythingwhatever192940958"},"content":"    public void markAsDone() {","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"anythingwhatever192940958"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Marks the task as not done.","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"anythingwhatever192940958"},"content":"    public void markAsUndone() {","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"anythingwhatever192940958"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Returns the type of the task.","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"anythingwhatever192940958"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @return The type of the task.","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"anythingwhatever192940958"},"content":"    public String getType() {","lastModifiedDate":"2024-03-03"},{"lineNumber":53,"author":{"gitId":"anythingwhatever192940958"},"content":"        return type;","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Returns the description of the task.","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"anythingwhatever192940958"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @return The description of the task.","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"anythingwhatever192940958"},"content":"    public String getDescription() {","lastModifiedDate":"2024-03-03"},{"lineNumber":62,"author":{"gitId":"anythingwhatever192940958"},"content":"        return description;","lastModifiedDate":"2024-03-03"},{"lineNumber":63,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":64,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":65,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Prints information about the task to the console.","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"anythingwhatever192940958"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @param taskList The list of tasks.","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"anythingwhatever192940958"},"content":"    public void printTaskInfo(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-03-03"},{"lineNumber":71,"author":{"gitId":"anythingwhatever192940958"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-03"},{"lineNumber":72,"author":{"gitId":"anythingwhatever192940958"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2024-03-03"},{"lineNumber":73,"author":{"gitId":"anythingwhatever192940958"},"content":"        System.out.println(\"[\" + this.getType() + \"][\" + this.getStatusIcon() + \"] \" + this.getDescription());","lastModifiedDate":"2024-03-03"},{"lineNumber":74,"author":{"gitId":"anythingwhatever192940958"},"content":"        System.out.println(\"Now you have \" + taskList.size() + (taskList.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");","lastModifiedDate":"2024-03-03"},{"lineNumber":75,"author":{"gitId":"anythingwhatever192940958"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-03"},{"lineNumber":76,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":77,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Converts the Task object to a string in save format.","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"anythingwhatever192940958"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":81,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @return The string representation of the task in save format.","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"anythingwhatever192940958"},"content":"    public abstract String toSaveFormat();","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"anythingwhatever192940958"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"anythingwhatever192940958":84}},{"path":"src/main/java/TaskListHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.io.File;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"anythingwhatever192940958"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"anythingwhatever192940958"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"anythingwhatever192940958"},"content":" * Utility class for handling the saving and loading of tasks to/from a file.","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"anythingwhatever192940958"},"content":" * Manages the conversion of tasks to save format and creation of tasks from save format.","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"anythingwhatever192940958"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"anythingwhatever192940958"},"content":"public class TaskListHandler {","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"anythingwhatever192940958"},"content":"    private static final String FILE_PATH \u003d \"./data/firefly.csv\";","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"anythingwhatever192940958"},"content":"    public static void saveTaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"anythingwhatever192940958"},"content":"        createNewDirectory();","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"anythingwhatever192940958"},"content":"        try (BufferedWriter writer \u003d new BufferedWriter(new FileWriter(FILE_PATH))) {","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"anythingwhatever192940958"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"anythingwhatever192940958"},"content":"                writer.write(task.toSaveFormat());","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"anythingwhatever192940958"},"content":"                writer.newLine();","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"anythingwhatever192940958"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"anythingwhatever192940958"},"content":"            System.out.println(\"Error saving tasks to file: \" + e.getMessage());","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"anythingwhatever192940958"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"anythingwhatever192940958"},"content":"    public static void loadTaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"anythingwhatever192940958"},"content":"        createNewDirectory();","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"anythingwhatever192940958"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"anythingwhatever192940958"},"content":"        if (!file.exists()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"anythingwhatever192940958"},"content":"            // File doesn\u0027t exist, nothing to load","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"anythingwhatever192940958"},"content":"            return;","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"anythingwhatever192940958"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"anythingwhatever192940958"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(file))) {","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"anythingwhatever192940958"},"content":"            String line;","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"anythingwhatever192940958"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"anythingwhatever192940958"},"content":"                Task task \u003d createTaskFromSaveFormat(line);","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"anythingwhatever192940958"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"anythingwhatever192940958"},"content":"                    taskList.add(task);","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"anythingwhatever192940958"},"content":"                }","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"anythingwhatever192940958"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"anythingwhatever192940958"},"content":"            System.out.println(\"Error loading tasks from file: \" + e.getMessage());","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"anythingwhatever192940958"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"anythingwhatever192940958"},"content":"    private static Task createTaskFromSaveFormat(String line) {","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"anythingwhatever192940958"},"content":"        Task task \u003d null;","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"anythingwhatever192940958"},"content":"        String[] tokenized \u003d line.split(\" \\\\| \");","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"anythingwhatever192940958"},"content":"        if (tokenized.length \u003c 3) {","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"anythingwhatever192940958"},"content":"            // Invalid format, cannot create task","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"anythingwhatever192940958"},"content":"            return null;","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"anythingwhatever192940958"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"anythingwhatever192940958"},"content":"        String taskType \u003d tokenized[0].trim();","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"anythingwhatever192940958"},"content":"        boolean isDone \u003d tokenized[1].trim().equals(\"1\");","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"anythingwhatever192940958"},"content":"        String description \u003d tokenized[2].trim();","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"anythingwhatever192940958"},"content":"        switch (taskType) {","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"anythingwhatever192940958"},"content":"            case \"T\":","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"anythingwhatever192940958"},"content":"                task \u003d new TodoTask(description);","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"anythingwhatever192940958"},"content":"                break;","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"anythingwhatever192940958"},"content":"            case \"D\":","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"anythingwhatever192940958"},"content":"                if (tokenized.length \u003e\u003d 4) {","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"anythingwhatever192940958"},"content":"                    String by \u003d tokenized[3].trim();","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"anythingwhatever192940958"},"content":"                    LocalDate byDate \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"anythingwhatever192940958"},"content":"                    task \u003d new DeadlineTask(description, byDate);","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"anythingwhatever192940958"},"content":"                }","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"anythingwhatever192940958"},"content":"                break;","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"anythingwhatever192940958"},"content":"            case \"E\":","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"anythingwhatever192940958"},"content":"                if (tokenized.length \u003e\u003d 6) {","lastModifiedDate":"2024-04-07"},{"lineNumber":81,"author":{"gitId":"anythingwhatever192940958"},"content":"                    String from \u003d tokenized[3].trim();","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"anythingwhatever192940958"},"content":"                    String to \u003d tokenized[4].trim();","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"anythingwhatever192940958"},"content":"                    boolean isOnce \u003d tokenized[5].trim().equals(\"once\");","lastModifiedDate":"2024-04-07"},{"lineNumber":84,"author":{"gitId":"anythingwhatever192940958"},"content":"                    LocalDate fromDate \u003d LocalDate.parse(from, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"anythingwhatever192940958"},"content":"                    LocalDate toDate \u003d LocalDate.parse(to, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"anythingwhatever192940958"},"content":"                    task \u003d new EventTask(description, fromDate, toDate, isOnce);","lastModifiedDate":"2024-04-07"},{"lineNumber":87,"author":{"gitId":"anythingwhatever192940958"},"content":"                }","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"anythingwhatever192940958"},"content":"                break;","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"anythingwhatever192940958"},"content":"            default:","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"anythingwhatever192940958"},"content":"                // Invalid task type","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"anythingwhatever192940958"},"content":"                break;","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"anythingwhatever192940958"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"anythingwhatever192940958"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"anythingwhatever192940958"},"content":"            if (isDone) {","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"anythingwhatever192940958"},"content":"                task.markAsDone();","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"anythingwhatever192940958"},"content":"            } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"anythingwhatever192940958"},"content":"                task.markAsUndone();","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"anythingwhatever192940958"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"anythingwhatever192940958"},"content":"        return task;","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"anythingwhatever192940958"},"content":"    private static void createNewDirectory() {","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"anythingwhatever192940958"},"content":"        Path path \u003d Paths.get(TaskListHandler.FILE_PATH).getParent();","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"anythingwhatever192940958"},"content":"        if (path !\u003d null \u0026\u0026 !Files.exists(path)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"anythingwhatever192940958"},"content":"            try {","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"anythingwhatever192940958"},"content":"                Files.createDirectories(path);","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"anythingwhatever192940958"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"anythingwhatever192940958"},"content":"                System.out.println(\"Error creating directory: \" + e.getMessage());","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"anythingwhatever192940958"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"anythingwhatever192940958"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"anythingwhatever192940958"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"anythingwhatever192940958":115}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"anythingwhatever192940958"},"content":"/**","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"anythingwhatever192940958"},"content":" * Represents a todo task with a description.","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"anythingwhatever192940958"},"content":" * Extends the abstract Task class.","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"anythingwhatever192940958"},"content":" */","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"anythingwhatever192940958"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Constructs a TodoTask object with the given description.","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"anythingwhatever192940958"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @param description The description of the todo task.","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"anythingwhatever192940958"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"anythingwhatever192940958"},"content":"        super(\"T\", description);","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"anythingwhatever192940958"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"anythingwhatever192940958"},"content":"    /**","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"anythingwhatever192940958"},"content":"     * Converts the TodoTask object to a string in save format.","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"anythingwhatever192940958"},"content":"     *","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"anythingwhatever192940958"},"content":"     * @return The string representation of the todo task in save format.","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"anythingwhatever192940958"},"content":"     */","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"anythingwhatever192940958"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"anythingwhatever192940958"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"anythingwhatever192940958"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"anythingwhatever192940958"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"anythingwhatever192940958"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"anythingwhatever192940958":25}}]
