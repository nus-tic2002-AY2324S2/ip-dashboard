[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"goosekite"},"content":"# duke project template","lastModifiedDate":"2024-04-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"goosekite"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2024-04-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"goosekite":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"goosekite"},"content":"    mainClass.set(\"duke\")","lastModifiedDate":"2024-04-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"goosekite":1,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"goosekite"},"content":"# duke User Guide","lastModifiedDate":"2024-04-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Update the title above to match the actual product name","lastModifiedDate":"2024-01-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Product screenshot goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Product intro goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Adding deadlines","lastModifiedDate":"2024-01-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"// Describe the action and its outcome.","lastModifiedDate":"2024-01-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Give examples of usage","lastModifiedDate":"2024-01-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Example: `keyword (optional arguments)`","lastModifiedDate":"2024-01-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"// A description of the expected outcome goes here","lastModifiedDate":"2024-01-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2024-01-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2024-01-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Feature ABC","lastModifiedDate":"2024-01-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Feature XYZ","lastModifiedDate":"2024-01-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-01-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"// Feature details","lastModifiedDate":"2024-01-07"}],"authorContributionMap":{"goosekite":1,"-":29}},{"path":"src/main/java/UI/JenkinsUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goosekite"},"content":"package UI;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"goosekite"},"content":"import java.io.File;","lastModifiedDate":"2024-04-08"},{"lineNumber":4,"author":{"gitId":"goosekite"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"goosekite"},"content":"public class JenkinsUI {","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"goosekite"},"content":"    protected String chatBotName \u003d \"Jenkins\";","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":10,"author":{"gitId":"goosekite"},"content":"    protected String getChatBotName(){","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"goosekite"},"content":"        return chatBotName;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"goosekite"},"content":"    //Source: https://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dOgre\u0026t\u003dJenkins","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"goosekite"},"content":"    public void printLogo(){","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"       _            _    _           \");","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"      | |          | |  (_)          \");","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"      | | ___ _ __ | | ___ _ __  ___ \");","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"  _   | |/ _ \\\\ \u0027_ \\\\| |/ / | \u0027_ \\\\/ __|\");","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"goosekite"},"content":"        System.out.println(\" | |__| |  __/ | | |   \u003c| | | | \\\\__ \\\\\");","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"  \\\\____/ \\\\___|_| |_|_|\\\\_\\\\_|_| |_|___/\");","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":25,"author":{"gitId":"goosekite"},"content":"     * Draws a line","lastModifiedDate":"2024-04-08"},{"lineNumber":26,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":27,"author":{"gitId":"goosekite"},"content":"    public void drawLine() {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"goosekite"},"content":"    //Level 0-1 Rename","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"goosekite"},"content":"    public void setChatBotName(String userInput){","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"goosekite"},"content":"        chatBotName \u003d userInput;","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"goosekite"},"content":"    public void chatBotSaysHello(){","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"goosekite"},"content":"        printLogo();","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"goosekite"},"content":"        System.out.println(getChatBotName() + \": Hello! you may call me \" + getChatBotName() + \". I remember it, so you don\u0027t have to!\");","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"goosekite"},"content":"    public void chatBotSaysBye(){","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"goosekite"},"content":"        System.out.print(getChatBotName() + \": GoodBye, Stay Safe. I hope to see you again soon!\\n\");","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":47,"author":{"gitId":"goosekite"},"content":"    public void getHelp(){","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"goosekite"},"content":"        System.out.println(getChatBotName() + \": Certainly! Here are all commands that I can understand:\");","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"help or {.} - prints this help list to help recall\");","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"bye - exits program --- tap {ENTER} 3 times)\");","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"tap {ENTER} 3 times to exit program quickly\");","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"goosekite"},"content":"        drawLine();","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"[Task] - records Tasks\");","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"[Task] by [timing] - records Deadlines\");","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"[Task] from [time] to [time] - records Events\");","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"mark [Task number] - Marks/Unmarks Task number\");","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"list - prints all recorded events\");","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"delete [Task number] - Delete Task.Task\");","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"goosekite"},"content":"    public void searchTaskToMark(int taskNumber){","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"Searching for task \" + taskNumber + \"...\");","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"goosekite"},"content":"    public void displayMarkedTask(int index, String doneStatus, String taskIcon, String taskDescription){","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"Task \" + index + \" marked as \" + doneStatus);","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"goosekite"},"content":"        System.out.print(index + \".\");","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"goosekite"},"content":"        System.out.print(\"[\" + taskIcon + \"] \");","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"goosekite"},"content":"        System.out.println(taskDescription);","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"goosekite"},"content":"    public void getErrorHelpBy(){","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"I noticed your intent to create a deadline with \\\"by\\\"\");","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"Please input as follows: [Task] by [timing]\");","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"goosekite"},"content":"    public void getErrorHelpFromTo(){","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"Seems like you want to create an event with \\\"from\\\" \u0026 \\\"to\\\"\");","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"Please input as follows: [Task] from [time] to [time]\");","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"goosekite"},"content":"     * @param botPatience determines if bot should continue to listen for userInput or shut down","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"goosekite"},"content":"     * Provides warning accordingly","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"goosekite"},"content":"    public void patienceFeedback(int botPatience){","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"goosekite"},"content":"        if (botPatience \u003e 1) {","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"goosekite"},"content":"            System.out.println(\"Sorry, I did not receive any commands\");","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"goosekite"},"content":"            System.out.println(\"I will leave if there\u0027s no one around. \" + botPatience + \" more chance\");","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"goosekite"},"content":"        else if (botPatience \u003d\u003d 1) {","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"goosekite"},"content":"            System.out.println(\"Last Chance! Please issue a command or I will leave!\");","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"goosekite"},"content":"        else{","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"goosekite"},"content":"            System.out.println(\"Looks like no one\u0027s here. Good bye\");","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"goosekite"},"content":"    public void changeChatBotName(){","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"goosekite"},"content":"        System.out.println(getChatBotName() + \": Sure! Please key in my new name\");","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"goosekite"},"content":"        Scanner sc \u003d new Scanner(System.in); //open scanner!","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"goosekite"},"content":"        String userInput \u003d sc.nextLine();","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"goosekite"},"content":"        String name \u003d userInput.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"goosekite"},"content":"        setChatBotName(name);","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"goosekite"},"content":"        System.out.println(getChatBotName() + \": Right away!\");","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"goosekite"},"content":"    public void userAddedTask(String taskDescription){","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"Task to do added: \" + taskDescription);","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"goosekite"},"content":"    public void userAddedEvent(String taskDescription){","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"Event added: \" + taskDescription);","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"goosekite"},"content":"    public void userAddedDeadline(String taskDescription){","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"Deadline added: \" + taskDescription);","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"goosekite"},"content":"    public void displayDeletedTask(String taskDescription){","lastModifiedDate":"2024-04-01"},{"lineNumber":128,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"Certainly, I\u0027ve deleted \" + taskDescription);","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"goosekite"},"content":"    public void preTaskSizeFeedback(int taskSize){","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"goosekite"},"content":"        if (taskSize \u003e 1) {","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"goosekite"},"content":"            System.out.println(\"Right away! I found \" + taskSize + \" tasks!\");","lastModifiedDate":"2024-04-01"},{"lineNumber":134,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":135,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":136,"author":{"gitId":"goosekite"},"content":"        if (taskSize \u003e\u003d 5){","lastModifiedDate":"2024-04-01"},{"lineNumber":137,"author":{"gitId":"goosekite"},"content":"            System.out.println(\"Oh my! you have \" + taskSize + \" tasks!\");","lastModifiedDate":"2024-04-01"},{"lineNumber":138,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":140,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"goosekite"},"content":"    public void postTaskSizeFeedback(int taskSize){","lastModifiedDate":"2024-04-01"},{"lineNumber":142,"author":{"gitId":"goosekite"},"content":"        if (taskSize \u003d\u003d 0){","lastModifiedDate":"2024-04-01"},{"lineNumber":143,"author":{"gitId":"goosekite"},"content":"            System.out.println(\"Sorry, I found no task :(\");","lastModifiedDate":"2024-04-01"},{"lineNumber":144,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":145,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":146,"author":{"gitId":"goosekite"},"content":"        else if (taskSize \u003d\u003d 1){","lastModifiedDate":"2024-04-01"},{"lineNumber":147,"author":{"gitId":"goosekite"},"content":"            System.out.println(\"Marvelous, Only 1 outstanding task left to complete!\");","lastModifiedDate":"2024-04-01"},{"lineNumber":148,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":151,"author":{"gitId":"goosekite"},"content":"    public void acknowledgeUndoCommand(){","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"As you wish! Command Undo!~\");","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"goosekite"},"content":"    public static void noFileFound(File f, String context){","lastModifiedDate":"2024-04-08"},{"lineNumber":156,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"I\u0027ve created \" + f.getName() + \" because \" + context + \" doesn\u0027t exist in our database\");","lastModifiedDate":"2024-04-08"},{"lineNumber":157,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":158,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":159,"author":{"gitId":"goosekite"},"content":"    public static void foundFileToLoad(String context) {","lastModifiedDate":"2024-04-08"},{"lineNumber":160,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"I\u0027ve found \" + context + \" to load! Wonderful!\");","lastModifiedDate":"2024-04-08"},{"lineNumber":161,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":162,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":163,"author":{"gitId":"goosekite"},"content":"    public static void loadDateTimeSuccessfully(String dateTime) {","lastModifiedDate":"2024-04-08"},{"lineNumber":164,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"We\u0027ve last reviewed our tasks on \" + dateTime);","lastModifiedDate":"2024-04-08"},{"lineNumber":165,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"loading...\");","lastModifiedDate":"2024-04-08"},{"lineNumber":166,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":167,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":168,"author":{"gitId":"goosekite"},"content":"    public static void savedTimeStampSuccessfully(String dateTime) {","lastModifiedDate":"2024-04-08"},{"lineNumber":169,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"I\u0027ve saved timestamp on \" + dateTime);","lastModifiedDate":"2024-04-08"},{"lineNumber":170,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":171,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":172,"author":{"gitId":"goosekite"},"content":"    public static void creatingTimeStamp() {","lastModifiedDate":"2024-04-08"},{"lineNumber":173,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"Creating timestamp.. \");","lastModifiedDate":"2024-04-08"},{"lineNumber":174,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":175,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":176,"author":{"gitId":"goosekite"},"content":"    public static void cantFindTimeStampSoIWillRecreate(String dateTime) {","lastModifiedDate":"2024-04-08"},{"lineNumber":177,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"Oh dear, I can\u0027t find when we\u0027ve last saved our file\");","lastModifiedDate":"2024-04-08"},{"lineNumber":178,"author":{"gitId":"goosekite"},"content":"        System.out.println(\"No worries, I\u0027ll mark it as now on \" + dateTime);","lastModifiedDate":"2024-04-08"},{"lineNumber":179,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":180,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":181,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":182,"author":{"gitId":"goosekite"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"goosekite":182}},{"path":"src/main/java/duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goosekite"},"content":"import logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"goosekite"},"content":"import storage.storage;","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"goosekite"},"content":"import tasklist.*;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"goosekite"},"content":"import UI.JenkinsUI;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"goosekite"},"content":"import logic.botstatus;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"goosekite"},"content":"import exception.dukeexception;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"goosekite"},"content":"import java.util.Queue;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"goosekite"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"goosekite"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":12,"author":{"gitId":"goosekite"},"content":"public class duke {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"goosekite"},"content":"    private static task tasks;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"goosekite"},"content":"    private final JenkinsUI ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"goosekite"},"content":"    private final logic.parser parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"goosekite"},"content":"    private final storage storage;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"goosekite"},"content":"    private final botstatus botStatus;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"goosekite"},"content":"    public duke(){","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"goosekite"},"content":"        tasks \u003d new task();","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"goosekite"},"content":"        ui \u003d new JenkinsUI();","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"goosekite"},"content":"        parser \u003d new parser();","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"goosekite"},"content":"        botStatus \u003d new botstatus();","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"goosekite"},"content":"        storage \u003d new storage();","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"goosekite"},"content":"    /** Creates task list by using user commands from text file */","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"goosekite"},"content":"    public void createTaskListFromStorage(){","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"goosekite"},"content":"        Queue\u003cString\u003e queue \u003d storage.loadData();","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"goosekite"},"content":"        storage.loadDataTimeStamp();","lastModifiedDate":"2024-04-08"},{"lineNumber":34,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"goosekite"},"content":"        while (!queue.isEmpty()){ //Access queue, process stored user input \u0026 dequeue until empty","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"goosekite"},"content":"            String s \u003d queue.peek();","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"goosekite"},"content":"            scanAdvanceKeywords(s); //We skip general commands because we know what we want","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"goosekite"},"content":"            queue.poll();","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"goosekite"},"content":"     * Greets user and prints tasks from text file","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"goosekite"},"content":"     * Listens for userInput until it shuts down properly","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"goosekite"},"content":"    public void run() {","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":48,"author":{"gitId":"goosekite"},"content":"        createTaskListFromStorage();","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"goosekite"},"content":"        ui.chatBotSaysHello();","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"goosekite"},"content":"        tasks.printTaskList();","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"goosekite"},"content":"        do{","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"goosekite"},"content":"            botListensForInput();","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-01-26"},{"lineNumber":55,"author":{"gitId":"goosekite"},"content":"        while (botIsAlive());","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-01-26"},{"lineNumber":57,"author":{"gitId":"goosekite"},"content":"        shutDownProperly();","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"goosekite"},"content":"     * Retrieve all tasks and store it in a text file before it turns itself","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"goosekite"},"content":"     * to offline status and says goodbye","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"goosekite"},"content":"    public void shutDownProperly(){","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"goosekite"},"content":"        String s \u003d tasks.printTaskListForRecording(); //Converts all tasks to string","lastModifiedDate":"2024-04-08"},{"lineNumber":66,"author":{"gitId":"goosekite"},"content":"        storage.saveDataToStorage(s); //Saves tasks to Storage","lastModifiedDate":"2024-04-08"},{"lineNumber":67,"author":{"gitId":"goosekite"},"content":"        storage.saveDateTimeStamp(); //Saves time stamp;","lastModifiedDate":"2024-04-08"},{"lineNumber":68,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"goosekite"},"content":"        botStatus.quitProgram(); //Change bot status to offline","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"goosekite"},"content":"        ui.chatBotSaysBye(); //Bot says bye","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"goosekite"},"content":"    public boolean botIsAlive(){","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"goosekite"},"content":"        return (botStatus.chatBotIsOnline() \u0026\u0026 botStatus.isBotPatient());","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"goosekite"},"content":"     * marks or unmarks task based on given index","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"goosekite"},"content":"     * 3 points of failure:","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"goosekite"},"content":"     * \"mark\" - User did not follow instructions: NumberFormatException e","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"goosekite"},"content":"     * \"mark v\" - User did not follow instructions: ArrayIndexOutOfBoundsException","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"goosekite"},"content":"     * \"mark 1\" - Correct input, but no such Task Index exists: IndexOutOfBoundsException","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"goosekite"},"content":"    public void markUserIndex(String[] keyword){","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"goosekite"},"content":"        int validTaskNumber \u003d -1;","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"goosekite"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"goosekite"},"content":"            int taskNumber \u003d parser.getTaskNumber(keyword[1]);","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"goosekite"},"content":"            ui.searchTaskToMark(taskNumber);","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"goosekite"},"content":"            if (parser.taskNumberIsValid(taskNumber, tasks)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"goosekite"},"content":"                validTaskNumber \u003d taskNumber;","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"goosekite"},"content":"            }","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"goosekite"},"content":"                int index \u003d validTaskNumber - 1;","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"goosekite"},"content":"                task t \u003d tasks.retrieveTaskDetails(index);","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"goosekite"},"content":"                tasks.markTaskIndex(index);","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"goosekite"},"content":"                ui.displayMarkedTask(taskNumber, t.taskIsDone(t), t.getStatusIcon(), t.getTaskDescription());","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"goosekite"},"content":"                parser.addToUndoStack(\"mark \" + keyword[1]); //Undo remembers how to remark task","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"goosekite"},"content":"            System.out.println(\"mark \" + keyword[1]);","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"goosekite"},"content":"        catch (NumberFormatException e){","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"goosekite"},"content":"            dukeexception.getError(dukeexception.expectIntegerButInputIsString(\"mark\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"goosekite"},"content":"        catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"goosekite"},"content":"            dukeexception.getError(dukeexception.arrayOutOfBounds(\"mark\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"goosekite"},"content":"        catch (IndexOutOfBoundsException e){","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"goosekite"},"content":"            dukeexception.getError(dukeexception.indexOutOfBounds(\"mark\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"goosekite"},"content":"     * Deletes task based on given index","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"goosekite"},"content":"     * Delete has 3 points of failure:","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"goosekite"},"content":"     * \"delete\" - User did not follow instructions: NumberFormatException e","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"goosekite"},"content":"     * \"delete v\" - User did not follow instructions: ArrayIndexOutOfBoundsException","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"goosekite"},"content":"     * \"delete 1\" - Correct input, but no such Task Index exists: IndexOutOfBoundsException","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"goosekite"},"content":"    public void keywordDelete(String[] keyword) {","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"goosekite"},"content":"        int validTaskNumber \u003d -1; //indicates failure condition","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"goosekite"},"content":"        try{","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"goosekite"},"content":"            int taskNumber \u003d parser.getTaskNumber(keyword[1]); //get task number from 2nd word","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"goosekite"},"content":"            if (parser.taskNumberIsValid(taskNumber, tasks)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"goosekite"},"content":"                validTaskNumber \u003d taskNumber; // Changes value from -1 to valid index","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"goosekite"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"goosekite"},"content":"            String s \u003d tasks.getTaskBeforeDelete(validTaskNumber); //get String for undo","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"goosekite"},"content":"            parser.addToUndoStack(s); //Undo remembers this","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"goosekite"},"content":"            tasks.deleteTask(validTaskNumber);","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"goosekite"},"content":"            ui.displayDeletedTask(s);","lastModifiedDate":"2024-04-01"},{"lineNumber":134,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"goosekite"},"content":"        catch (NumberFormatException e){","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"goosekite"},"content":"            dukeexception.getError(dukeexception.expectIntegerButInputIsString(\"delete\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"goosekite"},"content":"        catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"goosekite"},"content":"            dukeexception.getError(dukeexception.arrayOutOfBounds(\"delete\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"goosekite"},"content":"        catch (IndexOutOfBoundsException e){","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"goosekite"},"content":"            dukeexception.getError(dukeexception.indexOutOfBounds(\"delete\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":145,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":146,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"goosekite"},"content":"     * Create and store a \"Deadline\" task object","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"goosekite"},"content":"     * UI Informs user accordingly","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"goosekite"},"content":"     * Stores Inverted command to Undo Stack. Create -\u003e Delete","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"goosekite"},"content":"     * @param userInput is an event when keywords \"from \" and \"to \" detected","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"goosekite"},"content":"    public void keywordBy(String userInput){","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"goosekite"},"content":"        Pattern pattern \u003d Pattern.compile(\"(.+) by (.+)\");","lastModifiedDate":"2024-03-23"},{"lineNumber":154,"author":{"gitId":"goosekite"},"content":"        Matcher matcher \u003d pattern.matcher(userInput);","lastModifiedDate":"2024-03-07"},{"lineNumber":155,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":156,"author":{"gitId":"goosekite"},"content":"        if (matcher.find()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":157,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":158,"author":{"gitId":"goosekite"},"content":"            String eventDescription \u003d matcher.group(1);","lastModifiedDate":"2024-03-07"},{"lineNumber":159,"author":{"gitId":"goosekite"},"content":"            String deadline \u003d matcher.group(2);","lastModifiedDate":"2024-03-23"},{"lineNumber":160,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":161,"author":{"gitId":"goosekite"},"content":"            tasklist.deadline d \u003d new deadline(eventDescription, deadline);","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"goosekite"},"content":"            tasks.createTask(d);","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"goosekite"},"content":"            ui.userAddedDeadline(userInput);","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"goosekite"},"content":"            parser.addToUndoStack(\"delete \" + tasks.getTaskSize());","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-02-27"},{"lineNumber":167,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":168,"author":{"gitId":"goosekite"},"content":"        else {","lastModifiedDate":"2024-03-07"},{"lineNumber":169,"author":{"gitId":"goosekite"},"content":"            ui.getErrorHelpBy();","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":171,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":172,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":173,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"goosekite"},"content":"     * Create and store an \"Event\" task object","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"goosekite"},"content":"     * UI Informs user accordingly","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"goosekite"},"content":"     * Stores Inverted command to Undo Stack. Create -\u003e Delete","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"goosekite"},"content":"     * @param userInput is an event when keywords \"from \" and \"to \" detected","lastModifiedDate":"2024-04-03"},{"lineNumber":178,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":179,"author":{"gitId":"goosekite"},"content":"    public void keywordFromTo(String userInput){","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"goosekite"},"content":"        Pattern pattern \u003d Pattern.compile(\"(.+) from (.+) to (.+)\");","lastModifiedDate":"2024-03-23"},{"lineNumber":181,"author":{"gitId":"goosekite"},"content":"        Matcher matcher \u003d pattern.matcher(userInput);","lastModifiedDate":"2024-03-07"},{"lineNumber":182,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":183,"author":{"gitId":"goosekite"},"content":"        if (matcher.find()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":184,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":185,"author":{"gitId":"goosekite"},"content":"            String eventDescription \u003d matcher.group(1);","lastModifiedDate":"2024-03-07"},{"lineNumber":186,"author":{"gitId":"goosekite"},"content":"            String start \u003d matcher.group(2);","lastModifiedDate":"2024-03-23"},{"lineNumber":187,"author":{"gitId":"goosekite"},"content":"            String end \u003d matcher.group(3);","lastModifiedDate":"2024-03-23"},{"lineNumber":188,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":189,"author":{"gitId":"goosekite"},"content":"            event event \u003d new event(eventDescription, start, end);","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"goosekite"},"content":"            tasks.createTask(event);","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"goosekite"},"content":"            ui.userAddedEvent(userInput);","lastModifiedDate":"2024-03-28"},{"lineNumber":192,"author":{"gitId":"goosekite"},"content":"            parser.addToUndoStack(\"delete \" + tasks.getTaskSize());","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":194,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":195,"author":{"gitId":"goosekite"},"content":"        else {","lastModifiedDate":"2024-03-07"},{"lineNumber":196,"author":{"gitId":"goosekite"},"content":"            ui.getErrorHelpFromTo();","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":198,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":199,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-02-18"},{"lineNumber":200,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":201,"author":{"gitId":"goosekite"},"content":"     * Create and store a \"To do\" task object.","lastModifiedDate":"2024-04-03"},{"lineNumber":202,"author":{"gitId":"goosekite"},"content":"     * UI Informs user accordingly.","lastModifiedDate":"2024-04-03"},{"lineNumber":203,"author":{"gitId":"goosekite"},"content":"     * Stores Inverted command to Undo Stack. Create -\u003e Delete.","lastModifiedDate":"2024-04-03"},{"lineNumber":204,"author":{"gitId":"goosekite"},"content":"     * @param userInput is considered a todo Task because it survived all guard clauses.","lastModifiedDate":"2024-04-03"},{"lineNumber":205,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":206,"author":{"gitId":"goosekite"},"content":"    public void keywordTask(String userInput){","lastModifiedDate":"2024-03-28"},{"lineNumber":207,"author":{"gitId":"goosekite"},"content":"        todo todo \u003d new todo(userInput);","lastModifiedDate":"2024-04-03"},{"lineNumber":208,"author":{"gitId":"goosekite"},"content":"        tasks.createTask(todo);","lastModifiedDate":"2024-03-29"},{"lineNumber":209,"author":{"gitId":"goosekite"},"content":"        ui.userAddedTask(userInput);","lastModifiedDate":"2024-03-28"},{"lineNumber":210,"author":{"gitId":"goosekite"},"content":"        parser.addToUndoStack(\"delete \" + tasks.getTaskSize());","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"goosekite"},"content":"     * Informs and provides feedback user based on the number of tasks they have","lastModifiedDate":"2024-04-03"},{"lineNumber":215,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":216,"author":{"gitId":"goosekite"},"content":"    public void handleList(){","lastModifiedDate":"2024-04-03"},{"lineNumber":217,"author":{"gitId":"goosekite"},"content":"        int taskSize \u003d tasks.getTaskSize();","lastModifiedDate":"2024-04-03"},{"lineNumber":218,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":219,"author":{"gitId":"goosekite"},"content":"        ui.preTaskSizeFeedback(taskSize);","lastModifiedDate":"2024-04-03"},{"lineNumber":220,"author":{"gitId":"goosekite"},"content":"        tasks.printTaskList();","lastModifiedDate":"2024-04-03"},{"lineNumber":221,"author":{"gitId":"goosekite"},"content":"        ui.postTaskSizeFeedback(taskSize);","lastModifiedDate":"2024-04-03"},{"lineNumber":222,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":223,"author":{"gitId":"goosekite"},"content":"        botStatus.resetImpatience();","lastModifiedDate":"2024-04-03"},{"lineNumber":224,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":225,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":226,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":227,"author":{"gitId":"goosekite"},"content":"     * Peek Undo Stack to retrieve latest user input","lastModifiedDate":"2024-04-03"},{"lineNumber":228,"author":{"gitId":"goosekite"},"content":"     * Call the scanAdvanceKeywords() to activate command instead of botListensForInput()","lastModifiedDate":"2024-04-03"},{"lineNumber":229,"author":{"gitId":"goosekite"},"content":"     * Pop command from Stack after use","lastModifiedDate":"2024-04-03"},{"lineNumber":230,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":231,"author":{"gitId":"goosekite"},"content":"    public void handleUndo(){","lastModifiedDate":"2024-04-03"},{"lineNumber":232,"author":{"gitId":"goosekite"},"content":"        ui.acknowledgeUndoCommand();","lastModifiedDate":"2024-04-03"},{"lineNumber":233,"author":{"gitId":"goosekite"},"content":"        String s \u003d parser.peekUndoStack();","lastModifiedDate":"2024-04-03"},{"lineNumber":234,"author":{"gitId":"goosekite"},"content":"        scanAdvanceKeywords(s); //Skips isGeneralKeyword() for efficiency","lastModifiedDate":"2024-04-03"},{"lineNumber":235,"author":{"gitId":"goosekite"},"content":"        parser.removeFromUndoStack();","lastModifiedDate":"2024-04-03"},{"lineNumber":236,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":237,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":238,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":239,"author":{"gitId":"goosekite"},"content":"     * Parse keywords to decide which command to run","lastModifiedDate":"2024-04-03"},{"lineNumber":240,"author":{"gitId":"goosekite"},"content":"     * These safe keywords will never trigger DukeExceptions","lastModifiedDate":"2024-04-01"},{"lineNumber":241,"author":{"gitId":"goosekite"},"content":"     * @return false to run advanceKeyword() method, true to skip","lastModifiedDate":"2024-04-08"},{"lineNumber":242,"author":{"gitId":"goosekite"},"content":"     * This optimises the program slightly","lastModifiedDate":"2024-04-03"},{"lineNumber":243,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":244,"author":{"gitId":"goosekite"},"content":"    public boolean isGeneralKeyword(String trimmedUserInput){","lastModifiedDate":"2024-03-28"},{"lineNumber":245,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":246,"author":{"gitId":"goosekite"},"content":"        if (trimmedUserInput.isBlank() || trimmedUserInput.isEmpty()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":247,"author":{"gitId":"goosekite"},"content":"            botStatus.botBecomesImpatient();","lastModifiedDate":"2024-03-28"},{"lineNumber":248,"author":{"gitId":"goosekite"},"content":"            ui.patienceFeedback(botStatus.botPatienceMeter());","lastModifiedDate":"2024-03-28"},{"lineNumber":249,"author":{"gitId":"goosekite"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":250,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":251,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-01-30"},{"lineNumber":252,"author":{"gitId":"goosekite"},"content":"        else if (trimmedUserInput.equalsIgnoreCase(\"bye\") || trimmedUserInput.equalsIgnoreCase(\"quit\")){","lastModifiedDate":"2024-03-28"},{"lineNumber":253,"author":{"gitId":"goosekite"},"content":"            botStatus.quitProgram();","lastModifiedDate":"2024-03-28"},{"lineNumber":254,"author":{"gitId":"goosekite"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":255,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":256,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":257,"author":{"gitId":"goosekite"},"content":"        else if (trimmedUserInput.equalsIgnoreCase(\"list\")){","lastModifiedDate":"2024-03-28"},{"lineNumber":258,"author":{"gitId":"goosekite"},"content":"            handleList();","lastModifiedDate":"2024-04-03"},{"lineNumber":259,"author":{"gitId":"goosekite"},"content":"            botStatus.resetImpatience();","lastModifiedDate":"2024-03-28"},{"lineNumber":260,"author":{"gitId":"goosekite"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":261,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":262,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":263,"author":{"gitId":"goosekite"},"content":"        else if (trimmedUserInput.equalsIgnoreCase(\"help\") || trimmedUserInput.equalsIgnoreCase(\"faq\")){","lastModifiedDate":"2024-03-28"},{"lineNumber":264,"author":{"gitId":"goosekite"},"content":"            ui.getHelp();","lastModifiedDate":"2024-03-28"},{"lineNumber":265,"author":{"gitId":"goosekite"},"content":"            botStatus.resetImpatience();","lastModifiedDate":"2024-03-28"},{"lineNumber":266,"author":{"gitId":"goosekite"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":267,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":268,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":269,"author":{"gitId":"goosekite"},"content":"        else if (trimmedUserInput.equalsIgnoreCase(\"change bot name\")){","lastModifiedDate":"2024-03-28"},{"lineNumber":270,"author":{"gitId":"goosekite"},"content":"            ui.changeChatBotName();","lastModifiedDate":"2024-03-28"},{"lineNumber":271,"author":{"gitId":"goosekite"},"content":"            botStatus.resetImpatience();","lastModifiedDate":"2024-03-28"},{"lineNumber":272,"author":{"gitId":"goosekite"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":273,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":274,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":275,"author":{"gitId":"goosekite"},"content":"        else if (trimmedUserInput.equalsIgnoreCase(\"undo\")){","lastModifiedDate":"2024-04-01"},{"lineNumber":276,"author":{"gitId":"goosekite"},"content":"            handleUndo();","lastModifiedDate":"2024-04-03"},{"lineNumber":277,"author":{"gitId":"goosekite"},"content":"            botStatus.resetImpatience();","lastModifiedDate":"2024-04-03"},{"lineNumber":278,"author":{"gitId":"goosekite"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":279,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":280,"author":{"gitId":"goosekite"},"content":"        return false; //Remembers user command is not found in general stack","lastModifiedDate":"2024-04-03"},{"lineNumber":281,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":282,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":283,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":284,"author":{"gitId":"goosekite"},"content":"     * Responds to [mark] [delete], Deadlines [by ], Events [from]... [to] and [todo] Tasks","lastModifiedDate":"2024-04-03"},{"lineNumber":285,"author":{"gitId":"goosekite"},"content":"     * Labelled as advance keywords because every method here can trigger DukeExceptions","lastModifiedDate":"2024-04-03"},{"lineNumber":286,"author":{"gitId":"goosekite"},"content":"     * Undo records userInput in Stack","lastModifiedDate":"2024-04-01"},{"lineNumber":287,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":288,"author":{"gitId":"goosekite"},"content":"    public void scanAdvanceKeywords(String userInput)  {","lastModifiedDate":"2024-03-28"},{"lineNumber":289,"author":{"gitId":"goosekite"},"content":"        botStatus.resetImpatience();","lastModifiedDate":"2024-03-27"},{"lineNumber":290,"author":{"gitId":"goosekite"},"content":"        boolean isDeadlineEvent \u003d false, isMarkOrDelete \u003d false;","lastModifiedDate":"2024-03-28"},{"lineNumber":291,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":292,"author":{"gitId":"goosekite"},"content":"        String[] keyword \u003d userInput.split(\" \", 2);","lastModifiedDate":"2024-03-25"},{"lineNumber":293,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":294,"author":{"gitId":"goosekite"},"content":"        //Level 4-0 Mark","lastModifiedDate":"2024-03-25"},{"lineNumber":295,"author":{"gitId":"goosekite"},"content":"        switch (keyword[0]){","lastModifiedDate":"2024-03-25"},{"lineNumber":296,"author":{"gitId":"goosekite"},"content":"            case \"mark\":","lastModifiedDate":"2024-03-25"},{"lineNumber":297,"author":{"gitId":"goosekite"},"content":"            case \"unmark\":","lastModifiedDate":"2024-03-25"},{"lineNumber":298,"author":{"gitId":"goosekite"},"content":"                markUserIndex(keyword);","lastModifiedDate":"2024-03-29"},{"lineNumber":299,"author":{"gitId":"goosekite"},"content":"                isMarkOrDelete \u003d true;","lastModifiedDate":"2024-03-28"},{"lineNumber":300,"author":{"gitId":"goosekite"},"content":"                break;","lastModifiedDate":"2024-03-25"},{"lineNumber":301,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":302,"author":{"gitId":"goosekite"},"content":"            case \"delete\":","lastModifiedDate":"2024-03-25"},{"lineNumber":303,"author":{"gitId":"goosekite"},"content":"                keywordDelete(keyword);","lastModifiedDate":"2024-03-25"},{"lineNumber":304,"author":{"gitId":"goosekite"},"content":"                isMarkOrDelete \u003d true;","lastModifiedDate":"2024-03-28"},{"lineNumber":305,"author":{"gitId":"goosekite"},"content":"                break;","lastModifiedDate":"2024-04-01"},{"lineNumber":306,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":307,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":308,"author":{"gitId":"goosekite"},"content":"        // Level 4-2 Deadlines","lastModifiedDate":"2024-03-25"},{"lineNumber":309,"author":{"gitId":"goosekite"},"content":"        if (userInput.contains(\"by \")){","lastModifiedDate":"2024-03-25"},{"lineNumber":310,"author":{"gitId":"goosekite"},"content":"            keywordBy(userInput);","lastModifiedDate":"2024-03-28"},{"lineNumber":311,"author":{"gitId":"goosekite"},"content":"            isDeadlineEvent \u003d true;","lastModifiedDate":"2024-03-25"},{"lineNumber":312,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-01-29"},{"lineNumber":313,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-01-29"},{"lineNumber":314,"author":{"gitId":"goosekite"},"content":"        // Level 4-3 Events","lastModifiedDate":"2024-03-25"},{"lineNumber":315,"author":{"gitId":"goosekite"},"content":"        if (userInput.contains(\"from \") \u0026\u0026 userInput.contains(\"to \")){","lastModifiedDate":"2024-03-25"},{"lineNumber":316,"author":{"gitId":"goosekite"},"content":"            keywordFromTo(userInput);","lastModifiedDate":"2024-03-28"},{"lineNumber":317,"author":{"gitId":"goosekite"},"content":"            isDeadlineEvent \u003d true; //corner case from from to to","lastModifiedDate":"2024-03-25"},{"lineNumber":318,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":319,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":320,"author":{"gitId":"goosekite"},"content":"        /* Level 4-1 Task To do","lastModifiedDate":"2024-04-01"},{"lineNumber":321,"author":{"gitId":"goosekite"},"content":"          @param isMarkOrDelete prevents user from saving keyword \"mark\" \"delete\" as Task","lastModifiedDate":"2024-03-29"},{"lineNumber":322,"author":{"gitId":"goosekite"},"content":"          @param isDeadlineEvent prevents bot from saving userInput 2 times: 1st as Deadline/Event. 2nd as Task","lastModifiedDate":"2024-03-29"},{"lineNumber":323,"author":{"gitId":"goosekite"},"content":"         */","lastModifiedDate":"2024-03-28"},{"lineNumber":324,"author":{"gitId":"goosekite"},"content":"        if (!isMarkOrDelete \u0026\u0026 !isDeadlineEvent \u0026\u0026 !userInput.equals(\"undo\") \u0026\u0026 !userInput.contains(\"delete\")){","lastModifiedDate":"2024-04-01"},{"lineNumber":325,"author":{"gitId":"goosekite"},"content":"            keywordTask(userInput);","lastModifiedDate":"2024-03-28"},{"lineNumber":326,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":327,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":328,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":329,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":330,"author":{"gitId":"goosekite"},"content":"     * listen to user input, and parse keyword","lastModifiedDate":"2024-04-08"},{"lineNumber":331,"author":{"gitId":"goosekite"},"content":"     * General: Quality of life functions","lastModifiedDate":"2024-03-28"},{"lineNumber":332,"author":{"gitId":"goosekite"},"content":"     * Advance: Bot functions as intended","lastModifiedDate":"2024-03-28"},{"lineNumber":333,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":334,"author":{"gitId":"goosekite"},"content":"    public void botListensForInput() {","lastModifiedDate":"2024-03-28"},{"lineNumber":335,"author":{"gitId":"goosekite"},"content":"        ui.drawLine();","lastModifiedDate":"2024-03-27"},{"lineNumber":336,"author":{"gitId":"goosekite"},"content":"        String userInput \u003d parser.tidyUserInput();","lastModifiedDate":"2024-03-28"},{"lineNumber":337,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":338,"author":{"gitId":"goosekite"},"content":"        if (!isGeneralKeyword(userInput)){","lastModifiedDate":"2024-03-28"},{"lineNumber":339,"author":{"gitId":"goosekite"},"content":"            scanAdvanceKeywords(userInput);","lastModifiedDate":"2024-03-28"},{"lineNumber":340,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":341,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":342,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":343,"author":{"gitId":"goosekite"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2024-03-28"},{"lineNumber":344,"author":{"gitId":"goosekite"},"content":"        new duke().run();","lastModifiedDate":"2024-04-03"},{"lineNumber":345,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-01-26"},{"lineNumber":346,"author":{"gitId":"goosekite"},"content":"}","lastModifiedDate":"2024-01-26"}],"authorContributionMap":{"goosekite":346}},{"path":"src/main/java/exception/dukeexception.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goosekite"},"content":"package exception;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"goosekite"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"goosekite"},"content":" * Explains to user why error happened and how to resolve it","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"goosekite"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"goosekite"},"content":"public class dukeexception extends Exception{","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"goosekite"},"content":"    /** Detects an exception has been raised and override it */","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"goosekite"},"content":"    public dukeexception(String message) {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"goosekite"},"content":"        super(message);","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"goosekite"},"content":"    public static void getError(dukeexception exception) {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"goosekite"},"content":"        System.out.println(exception.getErrorMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"goosekite"},"content":"    /** Apologises for mishap first */","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"goosekite"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"goosekite"},"content":"        return (\"My apologies. \" + getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"goosekite"},"content":"    /** Expects a number instead of text */","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"goosekite"},"content":"    public static dukeexception expectIntegerButInputIsString(String keyword) {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"goosekite"},"content":"        return new dukeexception(\"Please enter a number instead of a text.\\nFor example: \" + keyword + \" 1\");","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"goosekite"},"content":"     *  Expects a number after the [mark] or [delete] keyword","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"goosekite"},"content":"     *  @param keyword [mark] or [delete]","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"goosekite"},"content":"    public static dukeexception arrayOutOfBounds(String keyword){","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"goosekite"},"content":"        return new dukeexception(\"No such task number exists, Please enter a number after your keyword.\\n\" +","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"goosekite"},"content":"                \"For example: \" + keyword + \" 1\");","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"goosekite"},"content":"     * respects command syntax but no such file found in database","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"goosekite"},"content":"     * @param keyword [mark] or [delete]","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"goosekite"},"content":"    public static dukeexception indexOutOfBounds(String keyword){","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"goosekite"},"content":"        return new dukeexception(\"There is no such task to \" + keyword);","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"goosekite"},"content":"    /** Activates when Duke fails to find path for accessing database */","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"goosekite"},"content":"    public static dukeexception filePathDoesNotExist(){","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"goosekite"},"content":"        return new dukeexception(\"Sorry, the file path is not initialised. Storage loading failed. Creating empty list.. \");","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"goosekite"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"goosekite":52}},{"path":"src/main/java/logic/botstatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goosekite"},"content":"package logic;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"goosekite"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"goosekite"},"content":" * Determines if bot continues to listen or shut down","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"goosekite"},"content":" * Bot will be offline if it loses all patience or user switch it off manually","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"goosekite"},"content":" * Patience is lost when user inputs nothing, but resets when user inputs anything","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"goosekite"},"content":" * See Duke.Duke -\u003e botIsAlive();","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"goosekite"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"goosekite"},"content":"public class botstatus {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"goosekite"},"content":"    final int BOT_MAX_PATIENCE \u003d 3;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"goosekite"},"content":"    public byte blankUserInputCount \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"goosekite"},"content":"    protected Boolean isOnline \u003d true;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"goosekite"},"content":"     * @return number of chance bot will accept a blank input","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"goosekite"},"content":"    public int botPatienceMeter(){","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"goosekite"},"content":"        return BOT_MAX_PATIENCE - blankUserInputCount;","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"goosekite"},"content":"     * @return true if bot patience is \u003e0 and false if \u003d 0","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"goosekite"},"content":"    public boolean isBotPatient(){","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"goosekite"},"content":"        return (BOT_MAX_PATIENCE - blankUserInputCount) \u003e 0;","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"goosekite"},"content":"    /** inputs with nothing will cause bot to become impatient */","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"goosekite"},"content":"    public void botBecomesImpatient(){","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"goosekite"},"content":"        blankUserInputCount++;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"goosekite"},"content":"    /** Reset patience meter when user inputs anything */","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"goosekite"},"content":"    public void resetImpatience(){","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"goosekite"},"content":"        blankUserInputCount \u003d 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"goosekite"},"content":"    /** Switch bot to offline so Duke\u0027s do while loop will fail */","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"goosekite"},"content":"    public void quitProgram(){","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"goosekite"},"content":"        isOnline \u003d false;","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"goosekite"},"content":"     * @return status, so program knows to continue or stop listening to userInput","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"goosekite"},"content":"    public Boolean chatBotIsOnline(){","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"goosekite"},"content":"        return isOnline;","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"goosekite"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"goosekite":51}},{"path":"src/main/java/logic/parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goosekite"},"content":"package logic;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"goosekite"},"content":"import tasklist.task;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"goosekite"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-08"},{"lineNumber":6,"author":{"gitId":"goosekite"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"goosekite"},"content":"import java.util.Stack;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"goosekite"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"goosekite"},"content":"public class parser {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"goosekite"},"content":"    Stack\u003cString\u003e undo \u003d new Stack\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"goosekite"},"content":"    /** Creates a default constructor */","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"goosekite"},"content":"    public parser(){","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"goosekite"},"content":"    public static String getDateTimeNow(){","lastModifiedDate":"2024-04-08"},{"lineNumber":19,"author":{"gitId":"goosekite"},"content":"        LocalDateTime dateTimeNow \u003d LocalDateTime.now();","lastModifiedDate":"2024-04-08"},{"lineNumber":20,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":21,"author":{"gitId":"goosekite"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2024-04-08"},{"lineNumber":22,"author":{"gitId":"goosekite"},"content":"        return dateTimeNow.format(formatter);","lastModifiedDate":"2024-04-08"},{"lineNumber":23,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":24,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":25,"author":{"gitId":"goosekite"},"content":"    /** tidies user input */","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"goosekite"},"content":"    public String tidyUserInput(){","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"goosekite"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"goosekite"},"content":"        String userInput \u003d sc.nextLine();","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"goosekite"},"content":"        return userInput.trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"goosekite"},"content":"    /** convert task number to string from an integer input */","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"goosekite"},"content":"    public int getTaskNumber(String keyword){","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"goosekite"},"content":"            return Integer.parseInt(keyword);","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"goosekite"},"content":"    /** Checks if task number is a positive number \u0026 smaller than task size */","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"goosekite"},"content":"    public boolean taskNumberIsValid(int taskNo, task tasks) {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"goosekite"},"content":"        return taskNo \u003c\u003d tasks.getTaskSize() \u0026\u0026 taskNo \u003e 0;","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"goosekite"},"content":"     * @param s holds the userInput to enable UNDO","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"goosekite"},"content":"    public void addToUndoStack(String s){","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"goosekite"},"content":"        undo.push(s);","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"goosekite"},"content":"    /** Extracts latest command from Undo Stack */","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"goosekite"},"content":"    public void removeFromUndoStack(){","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"goosekite"},"content":"        if (undo.isEmpty()){","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"goosekite"},"content":"            System.out.println(\"Stack is empty!\");","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"goosekite"},"content":"        else {","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"goosekite"},"content":"            undo.pop();","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"goosekite"},"content":"     * @return if there is a value from Undo Stack","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"goosekite"},"content":"    public String peekUndoStack(){","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"goosekite"},"content":"        if (!undo.isEmpty()){","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"goosekite"},"content":"            return undo.peek();","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"goosekite"},"content":"        return \"\";","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"goosekite"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"goosekite":70}},{"path":"src/main/java/storage/storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goosekite"},"content":"package storage;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"goosekite"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"goosekite"},"content":"import java.io.FileWriter;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"goosekite"},"content":"import java.io.File;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"goosekite"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"goosekite"},"content":"import java.util.LinkedList;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"goosekite"},"content":"import java.util.Queue;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"goosekite"},"content":"import java.util.Scanner;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"goosekite"},"content":"import UI.JenkinsUI;","lastModifiedDate":"2024-04-08"},{"lineNumber":12,"author":{"gitId":"goosekite"},"content":"import exception.dukeexception;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"goosekite"},"content":"import logic.parser;","lastModifiedDate":"2024-04-08"},{"lineNumber":14,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"goosekite"},"content":"public class storage {","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"goosekite"},"content":"    protected final String FILE_PATH_FOR_TASK_LIST \u003d \"src/main/data/duke.txt\";","lastModifiedDate":"2024-04-08"},{"lineNumber":18,"author":{"gitId":"goosekite"},"content":"    protected final String FILE_PATH_FOR_DATETIME \u003d \"src/main/data/lastAccessed.txt\";","lastModifiedDate":"2024-04-08"},{"lineNumber":19,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"goosekite"},"content":"    /** Creates a constructor and sets a default file path */","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"goosekite"},"content":"    public storage() {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"goosekite"},"content":"        ensureTaskListFileExists();","lastModifiedDate":"2024-04-08"},{"lineNumber":23,"author":{"gitId":"goosekite"},"content":"        ensureTimeStampFileExists();","lastModifiedDate":"2024-04-08"},{"lineNumber":24,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":25,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":26,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":27,"author":{"gitId":"goosekite"},"content":"     * Ensures task list file exists so the other methods do not need to protect it","lastModifiedDate":"2024-04-08"},{"lineNumber":28,"author":{"gitId":"goosekite"},"content":"     * The text file will be locked during run time","lastModifiedDate":"2024-04-08"},{"lineNumber":29,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":30,"author":{"gitId":"goosekite"},"content":"    public void ensureTaskListFileExists() {","lastModifiedDate":"2024-04-08"},{"lineNumber":31,"author":{"gitId":"goosekite"},"content":"        String context \u003d \"task list\";","lastModifiedDate":"2024-04-08"},{"lineNumber":32,"author":{"gitId":"goosekite"},"content":"        try {","lastModifiedDate":"2024-04-08"},{"lineNumber":33,"author":{"gitId":"goosekite"},"content":"            File taskListPathFile \u003d new File(FILE_PATH_FOR_TASK_LIST);","lastModifiedDate":"2024-04-08"},{"lineNumber":34,"author":{"gitId":"goosekite"},"content":"            if (taskListPathFile.createNewFile()) {","lastModifiedDate":"2024-04-08"},{"lineNumber":35,"author":{"gitId":"goosekite"},"content":"                JenkinsUI.noFileFound(taskListPathFile, context);","lastModifiedDate":"2024-04-08"},{"lineNumber":36,"author":{"gitId":"goosekite"},"content":"            } else {","lastModifiedDate":"2024-04-08"},{"lineNumber":37,"author":{"gitId":"goosekite"},"content":"                JenkinsUI.foundFileToLoad(context);","lastModifiedDate":"2024-04-08"},{"lineNumber":38,"author":{"gitId":"goosekite"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":39,"author":{"gitId":"goosekite"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-08"},{"lineNumber":40,"author":{"gitId":"goosekite"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-04-08"},{"lineNumber":41,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":42,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":43,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":44,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":45,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-08"},{"lineNumber":46,"author":{"gitId":"goosekite"},"content":"     * Ensures Time Stamp file exists so the other methods do not need to protect it","lastModifiedDate":"2024-04-08"},{"lineNumber":47,"author":{"gitId":"goosekite"},"content":"     * The text file will be locked during run time","lastModifiedDate":"2024-04-08"},{"lineNumber":48,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-08"},{"lineNumber":49,"author":{"gitId":"goosekite"},"content":"    public void ensureTimeStampFileExists() {","lastModifiedDate":"2024-04-08"},{"lineNumber":50,"author":{"gitId":"goosekite"},"content":"        String context \u003d \"time stamp\";","lastModifiedDate":"2024-04-08"},{"lineNumber":51,"author":{"gitId":"goosekite"},"content":"        try {","lastModifiedDate":"2024-04-08"},{"lineNumber":52,"author":{"gitId":"goosekite"},"content":"            File timeStampPathFile \u003d new File(FILE_PATH_FOR_TASK_LIST);","lastModifiedDate":"2024-04-08"},{"lineNumber":53,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":54,"author":{"gitId":"goosekite"},"content":"            if (timeStampPathFile.createNewFile()) {","lastModifiedDate":"2024-04-08"},{"lineNumber":55,"author":{"gitId":"goosekite"},"content":"                System.out.println(\"Time Stamp File created: \" + timeStampPathFile.getName());","lastModifiedDate":"2024-04-08"},{"lineNumber":56,"author":{"gitId":"goosekite"},"content":"            } else {","lastModifiedDate":"2024-04-08"},{"lineNumber":57,"author":{"gitId":"goosekite"},"content":"                JenkinsUI.foundFileToLoad(context);","lastModifiedDate":"2024-04-08"},{"lineNumber":58,"author":{"gitId":"goosekite"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":59,"author":{"gitId":"goosekite"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-08"},{"lineNumber":60,"author":{"gitId":"goosekite"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-04-08"},{"lineNumber":61,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":62,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"goosekite"},"content":"     * Creates a queue to and search for storage location","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"goosekite"},"content":"     * Reads file using scanner and inserts every line into Queue","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"goosekite"},"content":"     * @return Queue with userInput so Duke can reconstruct task list","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"goosekite"},"content":"    public Queue\u003cString\u003e loadData(){","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"goosekite"},"content":"        Queue\u003cString\u003e queue \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"goosekite"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"goosekite"},"content":"            File file \u003d new File(FILE_PATH_FOR_TASK_LIST); // Create a File object representing the file","lastModifiedDate":"2024-04-08"},{"lineNumber":74,"author":{"gitId":"goosekite"},"content":"            Scanner sc \u003d new Scanner(file); // Create a Scanner Object to read text file","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"goosekite"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"goosekite"},"content":"                String line \u003d sc.nextLine(); // Read a line and store it in a string","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"goosekite"},"content":"                queue.offer(line); //Store string in the queue","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"goosekite"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"goosekite"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"goosekite"},"content":"            throw new RuntimeException(e); //Should not trigger because default file path is set","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"goosekite"},"content":"        return queue;","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"goosekite"},"content":"     * Saves the string of commands to be retrieved when user restarts program to a specified path","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"goosekite"},"content":"     * @param content commands to be recorded to recreate current task list","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"goosekite"},"content":"    public void saveDataToStorage(String content) {","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"goosekite"},"content":"        // Create the file if it doesn\u0027t exist","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"goosekite"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"goosekite"},"content":"            File file \u003d new File(FILE_PATH_FOR_TASK_LIST);","lastModifiedDate":"2024-04-08"},{"lineNumber":96,"author":{"gitId":"goosekite"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"goosekite"},"content":"                System.out.println(\"File created: \" + file.getName());","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"goosekite"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":99,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"goosekite"},"content":"            // Create a FileWriter object with the specified file path","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"goosekite"},"content":"            FileWriter writer \u003d new FileWriter(FILE_PATH_FOR_TASK_LIST);","lastModifiedDate":"2024-04-08"},{"lineNumber":102,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"goosekite"},"content":"            //Part where I need get data","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"goosekite"},"content":"            writer.write(content);","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"goosekite"},"content":"            // Close the writer","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"goosekite"},"content":"            writer.close();","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"goosekite"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2024-04-08"},{"lineNumber":110,"author":{"gitId":"goosekite"},"content":"            throw new RuntimeException(e); //Should not trigger because default file path is set","lastModifiedDate":"2024-04-08"},{"lineNumber":111,"author":{"gitId":"goosekite"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"goosekite"},"content":"            dukeexception.getError(dukeexception.filePathDoesNotExist());","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":115,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":116,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":117,"author":{"gitId":"goosekite"},"content":"    public void loadDataTimeStamp() {","lastModifiedDate":"2024-04-08"},{"lineNumber":118,"author":{"gitId":"goosekite"},"content":"        File file \u003d new File(FILE_PATH_FOR_DATETIME); // Create a File object representing the file","lastModifiedDate":"2024-04-08"},{"lineNumber":119,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":120,"author":{"gitId":"goosekite"},"content":"        // Get time now","lastModifiedDate":"2024-04-08"},{"lineNumber":121,"author":{"gitId":"goosekite"},"content":"        String formattedDateTime \u003d parser.getDateTimeNow();","lastModifiedDate":"2024-04-08"},{"lineNumber":122,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":123,"author":{"gitId":"goosekite"},"content":"        //Read \u0026 inform user last access date","lastModifiedDate":"2024-04-08"},{"lineNumber":124,"author":{"gitId":"goosekite"},"content":"        try {","lastModifiedDate":"2024-04-08"},{"lineNumber":125,"author":{"gitId":"goosekite"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2024-04-08"},{"lineNumber":126,"author":{"gitId":"goosekite"},"content":"                //Saved created","lastModifiedDate":"2024-04-08"},{"lineNumber":127,"author":{"gitId":"goosekite"},"content":"                JenkinsUI.cantFindTimeStampSoIWillRecreate(formattedDateTime);","lastModifiedDate":"2024-04-08"},{"lineNumber":128,"author":{"gitId":"goosekite"},"content":"                saveDateTimeStamp();","lastModifiedDate":"2024-04-08"},{"lineNumber":129,"author":{"gitId":"goosekite"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":130,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":131,"author":{"gitId":"goosekite"},"content":"            Scanner sc \u003d new Scanner(file); // Create a Scanner Object to read text file","lastModifiedDate":"2024-04-08"},{"lineNumber":132,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":133,"author":{"gitId":"goosekite"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2024-04-08"},{"lineNumber":134,"author":{"gitId":"goosekite"},"content":"                String loadedTimeStamp \u003d sc.nextLine(); // Read a line and store it in a string","lastModifiedDate":"2024-04-08"},{"lineNumber":135,"author":{"gitId":"goosekite"},"content":"                UI.JenkinsUI.loadDateTimeSuccessfully(loadedTimeStamp); // Informs user load Date Time was successful","lastModifiedDate":"2024-04-08"},{"lineNumber":136,"author":{"gitId":"goosekite"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":137,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":138,"author":{"gitId":"goosekite"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-08"},{"lineNumber":139,"author":{"gitId":"goosekite"},"content":"            throw new RuntimeException(e); //Should not trigger because default file path is set","lastModifiedDate":"2024-04-08"},{"lineNumber":140,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":141,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"goosekite"},"content":"    public void saveDateTimeStamp() {","lastModifiedDate":"2024-04-08"},{"lineNumber":144,"author":{"gitId":"goosekite"},"content":"        File file \u003d new File(FILE_PATH_FOR_DATETIME);","lastModifiedDate":"2024-04-08"},{"lineNumber":145,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":146,"author":{"gitId":"goosekite"},"content":"        // Get time now","lastModifiedDate":"2024-04-08"},{"lineNumber":147,"author":{"gitId":"goosekite"},"content":"        String formattedDateTime \u003d parser.getDateTimeNow();","lastModifiedDate":"2024-04-08"},{"lineNumber":148,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":149,"author":{"gitId":"goosekite"},"content":"        try {","lastModifiedDate":"2024-04-08"},{"lineNumber":150,"author":{"gitId":"goosekite"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2024-04-08"},{"lineNumber":151,"author":{"gitId":"goosekite"},"content":"                JenkinsUI.creatingTimeStamp();","lastModifiedDate":"2024-04-08"},{"lineNumber":152,"author":{"gitId":"goosekite"},"content":"            }","lastModifiedDate":"2024-04-08"},{"lineNumber":153,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":154,"author":{"gitId":"goosekite"},"content":"            // let writer know file location","lastModifiedDate":"2024-04-08"},{"lineNumber":155,"author":{"gitId":"goosekite"},"content":"            FileWriter writer \u003d new FileWriter(FILE_PATH_FOR_DATETIME);","lastModifiedDate":"2024-04-08"},{"lineNumber":156,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":157,"author":{"gitId":"goosekite"},"content":"            //Overwrite file with DateTime","lastModifiedDate":"2024-04-08"},{"lineNumber":158,"author":{"gitId":"goosekite"},"content":"            writer.write(formattedDateTime);","lastModifiedDate":"2024-04-08"},{"lineNumber":159,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":160,"author":{"gitId":"goosekite"},"content":"            JenkinsUI.savedTimeStampSuccessfully(formattedDateTime);","lastModifiedDate":"2024-04-08"},{"lineNumber":161,"author":{"gitId":"goosekite"},"content":"            writer.close();","lastModifiedDate":"2024-04-08"},{"lineNumber":162,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":163,"author":{"gitId":"goosekite"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-08"},{"lineNumber":164,"author":{"gitId":"goosekite"},"content":"            dukeexception.getError(dukeexception.filePathDoesNotExist());","lastModifiedDate":"2024-04-08"},{"lineNumber":165,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-08"},{"lineNumber":166,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-08"},{"lineNumber":167,"author":{"gitId":"goosekite"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"goosekite":167}},{"path":"src/main/java/tasklist/deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goosekite"},"content":"package tasklist;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"goosekite"},"content":"public class deadline extends task {","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"goosekite"},"content":"    protected String by;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"goosekite"},"content":"    public deadline() {","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"goosekite"},"content":"    public deadline(String description, String by) {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"goosekite"},"content":"        super(description);","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"goosekite"},"content":"        this.by \u003d by;","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"goosekite"},"content":"    @Override","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"goosekite"},"content":"    public String toString() {","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"goosekite"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2024-02-27"},{"lineNumber":18,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":19,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"goosekite"},"content":"    public String convertToCommand(){","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"goosekite"},"content":"        return description + \" by \" + by;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"goosekite"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"goosekite":24}},{"path":"src/main/java/tasklist/event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goosekite"},"content":"package tasklist;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"goosekite"},"content":"public class event extends task {","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"goosekite"},"content":"    protected String start;","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"goosekite"},"content":"    protected String end;","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"goosekite"},"content":"    public event(String description, String start, String end) {","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"goosekite"},"content":"        super(description);","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"goosekite"},"content":"        this.start \u003d start;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"goosekite"},"content":"        this.end \u003d end;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"goosekite"},"content":"    @Override","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"goosekite"},"content":"    public String toString() {","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"goosekite"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start + \" to: \" + end + \" )\";","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"goosekite"},"content":"    public String convertToCommand(){","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"goosekite"},"content":"        return description + \" from \" + start + \" to \" + end;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"goosekite"},"content":"}","lastModifiedDate":"2024-02-27"},{"lineNumber":22,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"goosekite":22}},{"path":"src/main/java/tasklist/task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goosekite"},"content":"package tasklist;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"goosekite"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"goosekite"},"content":"/** Parent Class for Deadline, Event and To do */","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"goosekite"},"content":"public class task {","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"goosekite"},"content":"    private ArrayList\u003ctask\u003e tasksStorage;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"goosekite"},"content":"    protected String description;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"goosekite"},"content":"    protected boolean isDone;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"goosekite"},"content":"    private static int taskSize \u003d 0;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"goosekite"},"content":"    /** Creates an array list by calling this default constructor */","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"goosekite"},"content":"    public task(){","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"goosekite"},"content":"        this.tasksStorage \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"goosekite"},"content":"     * Creates a task object when this constructor is called","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"goosekite"},"content":"     * @param dukeUserInput Stores task description and sets task to be undone by default","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"goosekite"},"content":"    public task(String dukeUserInput) {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"goosekite"},"content":"        this.description \u003d dukeUserInput;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"goosekite"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"goosekite"},"content":"     * Created to be overridden by child classes [deadline], [event] \u0026 [todo]","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"goosekite"},"content":"     * @return appropriate [task type][mark status][task description]","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"goosekite"},"content":"    public String toString(){","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"goosekite"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"goosekite"},"content":"     * Created to be overridden by child classes [deadline], [event] \u0026 [todo]","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"goosekite"},"content":"     * Translates task list syntax back to user command","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"goosekite"},"content":"     * @return reconstructed userInput for Storage class","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"goosekite"},"content":"    public String convertToCommand(){","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"goosekite"},"content":"        return \"\";","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"goosekite"},"content":"     * Adds a task to existing arraylist and increase task size by 1","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"goosekite"},"content":"     * @param t Task details given by user","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"goosekite"},"content":"    public void createTask(task t){","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"goosekite"},"content":"        this.tasksStorage.add(t);","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"goosekite"},"content":"        taskSize++;","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"goosekite"},"content":"     * Deletes a task from our arraylist and decrease task size by 1","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"goosekite"},"content":"     * @param taskNo Task index given by user","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"goosekite"},"content":"    public void deleteTask(int taskNo) {","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"goosekite"},"content":"        tasksStorage.remove(taskNo - 1); //When user says delete 1, means delete index 0","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"goosekite"},"content":"        taskSize--;","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"goosekite"},"content":"     * Access the boolean value of isDone variable","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"goosekite"},"content":"     * @return marked icon or a space","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"goosekite"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"goosekite"},"content":"        return (getIsDone() ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"goosekite"},"content":"    public int getTaskSize(){","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"goosekite"},"content":"        return taskSize;","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"goosekite"},"content":"    /** prints task list exhaustively */","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"goosekite"},"content":"    public void printTaskList(){","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"goosekite"},"content":"        if (taskSize \u003d\u003d 0){ //guard clause","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"goosekite"},"content":"            return;","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"goosekite"},"content":"        //1 way to improve is having an enum to store high medium low amount of task.","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"goosekite"},"content":"        if (getTaskSize() \u003d\u003d 1){","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"goosekite"},"content":"            System.out.print(tasksStorage.get(0).toString() + System.lineSeparator());","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"goosekite"},"content":"         else if (getTaskSize() \u003c 5){","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"goosekite"},"content":"            for (int i \u003d 0; i \u003c tasksStorage.size(); i++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"goosekite"},"content":"                task t \u003d tasksStorage.get(i);","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"goosekite"},"content":"                System.out.print(i + 1 + \" \" + t.toString() + System.lineSeparator());","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"goosekite"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"goosekite"},"content":"         else{","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"goosekite"},"content":"            for (int i \u003d 0; i \u003c tasksStorage.size(); i++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"goosekite"},"content":"                task t \u003d tasksStorage.get(i);","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"goosekite"},"content":"                System.out.print(i + 1 + \" \" + t.toString() + System.lineSeparator());","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"goosekite"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"goosekite"},"content":"     * Use a string builder to translate all tasks to user input command used to create said list","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"goosekite"},"content":"     * @return empty string OR exhaustive list of user commands to create current list","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"goosekite"},"content":"    public String printTaskListForRecording(){","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"goosekite"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"goosekite"},"content":"        if (taskSize \u003d\u003d 0){ //guard clause","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"goosekite"},"content":"            return \"\";","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"goosekite"},"content":"        //https://stackoverflow.com/questions/14534767/how-to-append-a-newline-to-stringbuilder","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"goosekite"},"content":"        for (task t : tasksStorage) {","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"goosekite"},"content":"            sb.append(t.convertToCommand());","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"goosekite"},"content":"            sb.append(System.lineSeparator());","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"goosekite"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"goosekite"},"content":"        return sb.toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"goosekite"},"content":"    //Retrieve Task description","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"goosekite"},"content":"    public String getTaskDescription(){","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"goosekite"},"content":"        return description;","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"goosekite"},"content":"    //Get temporary string for undo method","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"goosekite"},"content":"    public String getTaskBeforeDelete(int taskNumber){","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"goosekite"},"content":"        return String.valueOf((tasksStorage.get(taskNumber-1)));","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"goosekite"},"content":"    //Retrieve \u0026 Update Boolean isDone","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"goosekite"},"content":"    public boolean getIsDone(){","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"goosekite"},"content":"        return isDone;","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"goosekite"},"content":"     * @param task checks if selected task is marked or not","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"goosekite"},"content":"     * @return String as feedback if selected task isDone value is true/false","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"goosekite"},"content":"    public String taskIsDone(task task){","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"goosekite"},"content":"        return task.isDone ? \"done!\" : \"undone!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"goosekite"},"content":"     * Inverts selected task\u0027s boolean value [isDone]","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"goosekite"},"content":"     * @param taskIndex Index used to locate the correct task before flipping its boolean value","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"goosekite"},"content":"    public void markTaskIndex(int taskIndex){","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"goosekite"},"content":"            task task \u003d tasksStorage.get(taskIndex);","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"goosekite"},"content":"            task.isDone \u003d !task.isDone;","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"goosekite"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"goosekite"},"content":"     * Only mark keyword uses this","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"goosekite"},"content":"     * @param taskIndex Index used to locate the correct task","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"goosekite"},"content":"     * @return task object based on user specified index","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"goosekite"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"goosekite"},"content":"    public task retrieveTaskDetails(int taskIndex){","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"goosekite"},"content":"        return tasksStorage.get(taskIndex);","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"goosekite"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"goosekite":162}},{"path":"src/main/java/tasklist/todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"goosekite"},"content":"package tasklist;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"goosekite"},"content":"public class todo extends task {","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"goosekite"},"content":"    public todo(String description) {","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"goosekite"},"content":"        super(description);","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"goosekite"},"content":"    @Override","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"goosekite"},"content":"    public String toString() {","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"goosekite"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"goosekite"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"goosekite"},"content":"    public String convertToCommand(){","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"goosekite"},"content":"        return description;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"goosekite"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"goosekite"},"content":"}","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"goosekite":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"goosekite"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2024-04-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"goosekite":1,"-":20}}]
